{
    "nodes": [
        {
            "ix": "59-ARR_v2_0",
            "content": "Rewire-then-Probe: A Contrastive Recipe for Probing Biomedical Knowledge of Pre-trained Language Models",
            "ntype": "article-title",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_1",
            "content": "Abstract",
            "ntype": "abstract",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_2",
            "content": "Knowledge probing is crucial for understanding the knowledge transfer mechanism behind the pre-trained language models (PLMs). Despite the growing progress of probing knowledge for PLMs in the general domain, specialised areas such as biomedical domain are vastly under-explored. To facilitate this, we release a well-curated biomedical knowledge probing benchmark, MedLAMA, constructed based on the Unified Medical Language System (UMLS) Metathesaurus. We test a wide spectrum of state-of-the-art PLMs and probing approaches on our benchmark, reaching at most 3% of acc@10. While highlighting various sources of domain-specific challenges that amount to this underwhelming performance, we illustrate that the underlying PLMs have a higher potential for probing tasks. To achieve this, we propose Contrastive-Probe, a novel self-supervised contrastive probing approach, that adjusts the underlying PLMs without using any probing data. While Contrastive-Probe pushes the acc@10 to 24%, the performance gap remains notable. Our human expert evaluation suggests that the probing performance of our Contrastive-Probe is underestimated as UMLS does not comprehensively cover all existing factual knowledge. We hope MedLAMA and Contrastive-Probe facilitate further developments of more suited probing techniques for this domain. 1",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_3",
            "content": "Introduction",
            "ntype": "title",
            "meta": {
                "section": "1"
            }
        },
        {
            "ix": "59-ARR_v2_4",
            "content": "Pre-trained language models (PLMs; Devlin et al. 2019;) have orchestrated incredible progress on myriads of few-or zero-shot language understanding tasks, by pre-training model parameters in a task-agnostic way and transferring knowledge to specific downstream tasks via finetuning (Brown et al., 2020;Petroni et al., 2021). 1 The data and code implementation are available at https://github.com/cambridgeltl/medlama.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_5",
            "content": "* Equal contribution. This work was done at the University of Cambridge. To better understand the underlying knowledge transfer mechanism behind these achievements, many knowledge probing approaches and benchmark datasets have been proposed (Petroni et al., 2019;Jiang et al., 2020a;Zhong et al., 2021). This is typically done by formulating knowledge triples as cloze-style queries with the objects being masked (see Table 1) and using the PLM to fill the single (Petroni et al., 2019) or multiple (Ghazvininejad et al., 2019) [Mask] token(s) without further fine-tuning.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_6",
            "content": "In parallel, it has been shown that specialised PLMs (e.g., BioBERT; Lee et al. 2020, Blue-BERT;Peng et al. 2019 and PubMedBERT;Gu et al. 2020) substantially improve the performance in several biomedical tasks (Gu et al., 2020). The biomedical domain is an interesting testbed for investigating knowledge probing for its unique challenges (including vocabulary size, multi-token entities), and the practical benefit of potentially disposing the expensive knowledge base construction process. However, research on knowledge probing in this domain is largely under-explored.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_7",
            "content": "To facilitate research in this direction, we present a well-curated biomedical knowledge probing benchmark, MedLAMA, that consists of 19 thoroughly selected relations. Each relation contains 1k queries (19k queries in total with at most 10 answers each), which are extracted from the large UMLS (Bodenreider, 2004) biomedical knowledge graph and verified by domain experts. We use automatic metrics to identify the hard examples based on the hardness of exposing answers from their query tokens. See Table 1 for a sample of easy and hard examples from MedLAMA.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_8",
            "content": "A considerable challenge in probing in biomedical domain is handling multi-token encoding of the answers (e.g. in MedLAMA only 2.6% of the answers are single-token, while in the English set of mLAMA; Kassner et al. 2021, 98% are singletoken), where all existing approaches (i.e., mask predict; Petroni et al. 2019, retrieval-based;Dufter et al. 2021, and generation-based;Gao et al. 2020) struggle to be effective. 2 For example, the mask predict approach (Jiang et al., 2020a) which performs well in probing multilingual knowledge achieves less than 1% accuracy on MedLAMA.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_9",
            "content": "To address the aforementioned challenge, we propose a new method, Contrastive-Probe, that first adjusts the representation space of the underlying PLMs by using a retrieval-based contrastive learning objective (like 'rewiring' the switchboard to the target appliances Liu et al. 2021c) then retrieves answers based on their representation similarities to the queries. Notably, our Contrastive-Probe does not require using the MLM heads during probing, which avoids the vocabulary bias across different models. Additionally, retrievalbased probe is effective for addressing the multitoken challenge, as it avoids the need to generate multiple tokens from the MLM vocabulary. We show that Contrastive-Probe facilitates abso-2 Prompt-based probing approaches such as Auto-Prompt (Shin et al., 2020a), SoftPrompt (Qin and Eisner, 2021), and OptiPrompt (Zhong et al., 2021) need additional labelled data for fine-tuning prompts, but we restrict the scope of our investigation to methods that do not require task data. lute improvements of up-to \u223c5% and \u223c21% on the acc@1 and acc@10 probing performance compared with the existing approaches.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_10",
            "content": "We further highlight that the elicited knowledge by Contrastive-Probe is not gained from the additional random sentences, but from the original pre-trained parameters, which echos the previous finding of Liu et al. (2021b); Glava\u0161 and Vuli\u0107 (2021); Su et al. (2021Su et al. ( , 2022. Additionally, we demonstrate that different state-of-the-art PLMs and transformer layers are suited for different types of relational knowledge, and different relations requires different depth of tuning, suggesting that both the layers and tuning depth should be considered when infusing knowledge over different relations. Furthermore, expert evaluation of PLM responses on a subset of MedLAMA highlights that expert-crafted resources such as UMLS still do not include the full spectrum of factual knowledge, indicating that the factual information encoded in PLMs is richer than what is reflected by the automatic evaluation.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_11",
            "content": "The findings of our work, along with the proposed MedLAMA and Contrastive-Probe, highlight both the unique challenges of the biomedical domain and the unexploited potential of PLMs. We hope our research to shed light on what domainspecialised PLMs capture and how it could be better resurfaced, with minimum cost, for probing.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_12",
            "content": "MedLAMA",
            "ntype": "title",
            "meta": {
                "section": "2"
            }
        },
        {
            "ix": "59-ARR_v2_13",
            "content": "To facilitate research of knowledge probing in the biomedical domain, we create the MedLAMA benchmark based on the largest biomedical knowledge graph UMLS (Bodenreider, 2004). UMLS 3 is a comprehensive metathesaurus containing 3.6 million entities and more than 35.2 million knowledge triples over 818 relation types which are integrated from various ontologies, including SNOMED CT, MeSH and the NCBI taxonomy.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_14",
            "content": "Creating a LAMA-style (Petroni et al., 2019) probing benchmark from such a knowledge graph poses its own challenges: (1) UMLS is a collection of knowledge graphs with more than 150 ontologies constructed by different organisations with very different schemata and emphasis; (2) a significant amount of entity names (from certain vocabularies) are unnatural language (e.g., t(8;21)(q22;q22) denoting an observed karyotypic abnormality) which can hardly be understood by the existing PLMs, with tokenisation tailored for natural language; (3) some queries (constructed from knowledge triples) can have up to hundreds of answers (i.e., 1-to-N relations), complicating the interpretation of probing performance; and (4) some queries may expose answers in themselves (e.g., answer within queries), making it challenging to interpret relative accuracy scores. Selection of Relationship Types. In order to obtain high-quality knowledge queries, we conducted multiple rounds of manual filtering on the relation level to exclude uninformative relations or relations that are only important in the ontological context but do not contain interesting semantics as a natural language (e.g, taxonomy and measurement relations). We also excluded relations with insufficient triples/entities. Then, we manually checked the knowledge triples for each relation to filter out those that contain unnatural language entities and ensure that their queries are semantically meaningful. Additionally, in the cases of 1-to-N relations where there are multiple gold answers for the same query, we constrained all the queries to contain at most 10 gold answers. These steps resulted in 19 relations with each containing 1k randomly sampled knowledge queries. Table 2 shows the detailed relation names and their corresponding prompts. Easy vs. Hard Queries. Recent works (Poerner et al., 2020;Shwartz et al., 2020) have discovered",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_15",
            "content": "Type Answer space MLM Fill-mask (Petroni et al., 2019) MP PLM Vocab X-FACTR (Jiang et al., 2020a) MP PLM Vocab Generative PLMs GB PLM Vocab Mask average RB KG Entities Contrastive-Probe (Ours) RB KG Entities that PLMs are overly reliant on the surface form of entities to guess the correct answer of a knowledge query. The PLMs \"cheat\" by detecting lexical overlaps between the query and answer surface forms instead of exercising their abilities of predicting factual knowledge. For instance, PLMs can easily deal with the triple <Dengue virus live antigen CYD serotype 1, may-prevent, Dengue> since the answer is part of the query. To mitigate such bias, we also create a hard query set for each relation by selecting a subset of their corresponding 1k queries using token and matching metrics (i.e., exact matching and ROUGE-L (Lin and Och, 2004)). For more details see the Appendix. We refer to the final filtered and original queries as the hard sets and full sets, respectively. Figure 1 (left) shows the count of hard vs. full sets.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_16",
            "content": "The Multi-token Issue. One of the key challenges for probing MedLAMA is the multi-token decoding of its entity names. In MedLAMA there are only 2.6% of the entity names that are singletoken 4 while in the English set of mLAMA and LAMA (Petroni et al., 2019) the percentage of single-token answers are 98% and 100%, respectively. Figure 1 (right) shows the percentage of answers by different token numbers.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_17",
            "content": "Existing Multi-token Knowledge Probing Approaches",
            "ntype": "title",
            "meta": {
                "section": "3"
            }
        },
        {
            "ix": "59-ARR_v2_18",
            "content": "While the pioneer works in PLM knowledge probing mainly focused on the single-token entities, many recent works have started exploring the solutions for the multi-token scenario Jiang et al., 2020a;De Cao et al., 2021). These knowledge probing approaches can be categorised, based on answer search space and reliance on MLM head, into three categories: mask predict, generation-based, and retrieval-based. Table 3 summarises their key differences. Mask Predict. Mask predict (Petroni et al., 2019;Jiang et al., 2020a) is one of the most commonly used approaches to probe knowledge for masked PLMs (e.g. BERT). The mask predict approach uses the MLM head to fill a single mask token for a cloze-style query, and the output token is subjected to the PLM vocabulary (Petroni et al., 2019). Since many real-world entity names are encoded with multiple tokens, the mask predict approach has also been extended to predict multitoken answers using the conditional masked language model (Jiang et al., 2020a;Ghazvininejad et al., 2019). Figure 2(a) shows the prediction process. Specifically, given a query, the probing task is formulated as: 1) filling masks in parallel independently (Independent); 2) filling masks from left to right autoregressively (Order); 3) filling tokens sorted by the maximum confidence greedily (Confidence). After all mask tokens are replaced with the initial predictions, the predictions can be further refined by iteratively modifying one token at a time until convergence or until the maximum number of iterations is reached (Jiang et al., 2020a). For example, Order+Order represents that the answers are initially predicted by Order and then refined by Order. In this paper we examined two of these approaches, i.e. Independent and Order+Order, based on our initial exploration.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_19",
            "content": "Generation-based. Recently, many generation based PLMs have been presented for text generation tasks, such as BART and T5 (Raffel et al., 2020). These generative PLMs are trained with a de-noising objective to restore its original form autoregressively Raffel et al., 2020). Such an autoregressive generation process is analogous to the Order probing approach, thus the generative PLMs can be directly used to generate answers for each query. Specifically, we utilize the cloze-style query with a single [Mask] token as the model input. The model then predicts the answer entities that correspond to the [Mask] token in an autoregressive manner. An illustration is provided in Figure 2(b).",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_20",
            "content": "Retrieval-based. Mask predict and Generationbased approaches need to use the PLM vocabulary as their search spaces for answer tokens, which may generate answers that are not in the answer set. In particular, when probing the masked PLMs using their MLM heads, the predicted result might not be a good indicator for measuring the amount of knowledge captured by these PLMs. This is mainly because the MLM head will be eventually dropped during the downstream task fine-tuning while the MLM head normally accounts for more than 20% of the total PLM parameters. Alternatively, the retrieval-based probing are applied to address this issue. Instead of generating answers based on the PLM vocabulary, the retrieval-based approach finds answers by ranking the knowledge graph candidate entities based on the query and entity representations, or the entity generating scores.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_21",
            "content": "To probe PLMs on MedLAMA, we use mask average , an approach that takes the average log probabilities of entity's individual tokens to rank the candidates. The retrieval-based approaches address the multi-token issue by restricting the output space to the valid answer set and can be used to probe knowledge in different types of PLMs (e.g. BERT vs. fastText; ). However, previous works only report results based on the type-restricted candidate set (e.g. relation) which we observed to decay drastically under the full entity set.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_22",
            "content": "4 Contrastive-Probe: Cloze-style Task as a Self-retrieving Game",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_23",
            "content": "To better transform the PLM encoders for the cloze-style probing task, we propose Contrastive-Probe which pre-trains on a small number of sentences sampled from the PLM's original pre-training corpora with a contrastive selfsupervising objective, inspired by the Mirror-BERT (Liu et al., 2021b). Our contrastive pretraining does not require the MLM head or any additional external knowledge, and can be completed in less than one minute on 2 \u00d7 2080Ti GPUs.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_24",
            "content": "Self-supervised Contrastive Rewiring. We randomly sample a small set of sentences (e.g. 10k, see \u00a75.2 for stability analysis of Contrastive-Probe on several randomly sampled sets), and replace their tail tokens (e.g. the last 50% excluding the full stop) with a [Mask] token. Then these transformed sentences are taken as the queries of the cloze-style self-retrieving game. In the following we show an example of transforming a sentence into a cloze-style query:",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_25",
            "content": "Sentence: Social-distancing largely reduces coronavirus infections.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_26",
            "content": "Query: Social-distancing largely [Mask].",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_27",
            "content": "where \"reduces coronavirus infections\" is marked as a positive answer of this query. Given a batch, the cloze-style self-retrieving game is to ask the PLMs to retrieve the positive answer from all the queries and answers in the same batch. Our Contrastive-Probe tackles this by optimising an InfoNCE objective (Oord et al., 2018),",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_28",
            "content": "L = \u2212 N i=1 log exp(cos( f (x i ), f (x p ))/\u03c4) x j \u2208N i exp(cos( f (x i ), f (x j ))/\u03c4) ,(1)",
            "ntype": "formula",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_29",
            "content": "where f (\u2022) is the PLM encoder (with the MLM head chopped-off and [CLS] as the contextual representation), N is batch size, x i and x p are from a query-answer pair (i.e., x i and x p are from the same sentence), N i contains queries and answers in the batch, and \u03c4 is the temperature. This objective function encourages f to create similar representations for any query-answer pairs from the same sentence and dissimilar representations for queries/answers belonging to different sentences.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_30",
            "content": "Retrieval-based Probing. For probing step, the query is created based on the prompt-based template for each knowledge triple , as shown in the following:",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_31",
            "content": "Experiments",
            "ntype": "title",
            "meta": {
                "section": "5"
            }
        },
        {
            "ix": "59-ARR_v2_32",
            "content": "In this section we conduct extensive experiments to verify whether Contrastive-Probe is effective for probing biomedical PLMs. First, we experiment with Contrastive-Probe and existing probing approaches on MedLAMA benchmark ( \u00a75.1).",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_33",
            "content": "Then, we conduct in-depth analysis of the stability and applicability of Contrastive-Probe in probing biomedical PLMs ( \u00a75.2). Finally, we report an evaluation of a biomedical expert on the probing predictions and highlight our findings ( \u00a75.3).",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_34",
            "content": "Contrastive-Probe Rewiring.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_35",
            "content": "We train our Contrastive-Probe based on 10k sentences which are randomly sampled from the PubMed texts 5 using a mask ratio of 0.5. The best hyperparameters and their tuning options are provided in Appendix. Probing Baselines. For the mask predict approach, we use the original implementation of X-FACTR (Jiang et al., 2020a), and set the beam size and the number of masks to 5. Both mask predict and retrieval-based approaches are tested under both the general domain and biomedical domain BERT models, i.e. Bert-based-uncased (Devlin et al., 2019), BlueBERT (Peng et al., 2019), BioBERT , PubMedBERT (Gu et al., 2020). 6 For generation-based baselines, we test five PLMs, namely BART-base , T5-small and T5-base (Raffel et al., 2020) that are general domain generation PLMs, and SciFive-base & SciFive-large (Phan et al., 2021) that are pre-trained on large biomedical corpora.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_36",
            "content": "Benchmarking on MedLAMA",
            "ntype": "title",
            "meta": {
                "section": "5.1"
            }
        },
        {
            "ix": "59-ARR_v2_37",
            "content": "Comparing Various Probing Approaches. Table 4 shows the overall results of various probing baselines on MedLAMA. It can be seen that the performances of all the existing probing approaches (i.e. generative PLMs, X-FACTR and mask predict) are very low (<1% for acc@1 and <4% for acc@10) regardless of the underlying PLM, which are not effective indicators for measuring knowledge captured. In contrast, our Contrastive-Probe obtains absolute improvements by up-to \u223c 5% and \u223c 21% on acc@1 and acc10 respectively comparing with the three existing approaches, which validates its effectiveness on measuring the knowledge probing performance. In particular, PubMedBERT model obtains the best probing performance (5.71% in accuracy) for these biomedical queries, validating its effectiveness of capturing biomedical knowledge comparing with other PLMs (i.e. BERT, BlueBERT and BioBERT). Benchmarking with Contrastive-Probe. To further examine the effectiveness of PLMs in capturing biomedical knowledge, we benchmarked several state-of-the-art biomedical PLMs (including pure pre-trained and knowledge-enhanced models) on MedLAMA through our Contrastive-Probe. Table 5 shows the probing results over the full and hard sets. In general, we can observe that these biomedical PLMs always perform better than general-domain PLMs (i.e., BERT). Also, we observe the decay of performance of all these models on the more challenging hard set queries. While PubMedBERT performs the best among all the pure pre-trained models, SapBERT (Liu et al., 2021a) and CoderBERT (Yuan et al., 2020) (which are the knowledge infused PubMedBERT) further push performance to 8% and 30.41% on acc@1 and acc@10 metrics respectively, highlighting the benefits of knowledge infusion pre-training. Comparison per Answer Length. Since different PLMs use different tokenizers, we use char length of the query answers to split MedLAMA into different bins and test the probing performance over various answer lengths. Figure 3 shows the result. We can see that the performance of retrievalbased probing in Contrastive-Probe increases as",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_38",
            "content": "Figure 3: Performance over answer lengths.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_39",
            "content": "the answer length increase while the performance of mask predict dropped significantly. This result validates that our Contrastive-Probe (retrievalbased) are more reliable at predicting longer answers than the mask predict approach since the latter heavily relies on the MLM head. 7 6 that the model performance drops significantly after chopping the last 3 layers, while its accuracy is still high when dropping only last one layer. In Figure 7, we further plot the layer-wise probing performance of PubMedBERT over different relations. Surprisingly, we find that different relations do not show the same probing performance trends over layers. For example, with only the first 3 layers, PubMedBERT achieves the best accuracy (>15%) on relation 11 queries. This result demonstrates that both relation types and PLM layers are confounding variables in capturing factual knowledge, which helps to explain the difference of training steps over relations in Figure 4. This result also suggests that layer-wise and relation-wise training could be the key to effectively infuse factual knowledge for PLMs.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_40",
            "content": "In-depth Analysis of Contrastive-Probe",
            "ntype": "title",
            "meta": {
                "section": "5.2"
            }
        },
        {
            "ix": "59-ARR_v2_41",
            "content": "Expert Evaluation on Predictions",
            "ntype": "title",
            "meta": {
                "section": "5.3"
            }
        },
        {
            "ix": "59-ARR_v2_42",
            "content": "To assess whether the actual probing performance could be possibly higher than what is reflected by the commonly used automatic evaluation, we conducted a human evaluation on the prediction result. Specifically, we sample 15 queries and predict their top-10 answers using Contrastive-Probe based on PubMedBERT and ask the assessor 9 to rate the predictions on a scale of [1,5]. Figure 8 shows the confusion matrices. 10 We observe the followings: (1) There are 3 UMLS answers that are annotated with score level 1-4 (precisely, level 3), which indicates UMLS answers might not always be the perfect answers.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_43",
            "content": "(2) There are 20 annotated perfect answers (score 5) in the top 10 predictions that are not marked as the gold answers in the UMLS, which suggests the UMLS does not include all the expected gold knowledge.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_44",
            "content": "(3) In general, PubMedBERT achieves an 8.67% (13/150) acc@10 under gold answers, but under the expert annotation the acc@10 is 22% (33/150), which means the probing performance is higher than what evaluated using the automatically extracted answers.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_45",
            "content": "Comparing with BioLAMA",
            "ntype": "title",
            "meta": {
                "section": "5.4"
            }
        },
        {
            "ix": "59-ARR_v2_46",
            "content": "During the writing of this work, we noticed a concurrent work to ours that also released a biomedical knowledge probing benchmark, called Bio-LAMA Sung et al. (2021). In Table 6, we compare MedLAMA with LAMA (Petroni et al., 2019) and BioLAMA in terms of data statistics. We found that there is only 1 overlapped relation (i.e., may treat) between BioLAMA and MedLAMA, and no overlap exists on the queries. We can see that, without additional training data from the biomedical knowledge facts, Contrastive-Probe reaches a promising performance compared with OptiPrompt approach, which needs further training data. Additionally, since Mask Predict and OptiPrompt require using the MLM head, it is impossible to compare a model without MLM head being released (e.g. PubMedBERT). In contrast, our Contrastive-Probe not only provides a good indicator of comparing these models in terms of their captured knowledge, but also makes layerwise knowledge probing possible.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_47",
            "content": "Limitations of Contrastive-Probe",
            "ntype": "title",
            "meta": {
                "section": "5.5"
            }
        },
        {
            "ix": "59-ARR_v2_48",
            "content": "How to early stop? For fair comparison of different PLMs, we currently use checkpoints after contrastive tuning for a fixed number of steps (200, specifically). However, we have noticed that different models and different probing datasets have different optimal training steps. To truly 'rewire' the most knowledge out of each PLMs, we need a unified validation set for checkpoint selection. What the validation set should be and how to guarantee its fairness require further investigation.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_49",
            "content": "Performance not very stable. We have noticed that using different contrastive tuning corpus as well as different random seeds can lead to a certain variance of their probing performances (see Table 5). To mitigate such issue, we use average perfor-Probe Model CTD wikidata UMLS acc@1 acc@5 acc@1 acc@5 acc@1 acc@5 mance of 10 runs on 10 randomly sampled corpus.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_50",
            "content": "Improving the stability of Contrastive-Probe and investigating its nature is a future challenge.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_51",
            "content": "Related Work and Discussion",
            "ntype": "title",
            "meta": {
                "section": "6"
            }
        },
        {
            "ix": "59-ARR_v2_52",
            "content": "Knowledge Probing Benchmarks for PLMs.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_53",
            "content": "LAMA (Petroni et al., 2019), which starts this line of work, is a collection of single-token knowledge triples extracted from sources including Wikidata and ConceptNet (Speer et al., 2017). To mitigate the problem of information leakage from the head entity, Poerner et al. (2019) propose LAMA-UHN, which is a hard subset of LAMA that has less token overlaps in head and tail entities. X-FACTR (Jiang et al., 2020a)",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_54",
            "content": "Conclusion",
            "ntype": "title",
            "meta": {
                "section": "7"
            }
        },
        {
            "ix": "59-ARR_v2_55",
            "content": "In this work, we created a carefully curated biomedical probing benchmark, MedLAMA, from the UMLS knowledge graph. We illustrated that state-of-the-art probing techniques and biomedical pre-trained languages models (PLMs) struggle to cope with the challenging nature (e.g. multitoken answers) of this specialised domain, reaching only an underwhelming 3% of acc@10. To reduce the gap, we further proposed a novel contrastive recipe which rewires the underlying PLMs without using any probing-specific data and illustrated that with a lightweight pre-training their accuracies could be pushed to 24%.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_56",
            "content": "Our experiments also revealed that different layers of transformers encode different types of information, reflected by their individual success at handling certain types of prompts. Additionally, using a human expert, we showed that the existing evaluation criteria could overpenalise the models as many valid responses that PLMs produce are not in the ground truth UMLS knowledge graph. This further highlights the importance of having a human in the loop to better understand the potentials and limitations of PLMs in encoding domain specific factual knowledge.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_57",
            "content": "Our findings indicate that the real lower bound on the amount of factual knowledge encoded by PLMs is higher than we estimated, since such bound can be continuously improved by optimising both the encoding space (e.g. using our selfsupervised contrastive learning technique) and the input space (e.g. using the prompt optimising techniques (Shin et al., 2020a;Qin and Eisner, 2021)). We leave further exploration of integrating the two possibilities to future work.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_58",
            "content": "In this paper, we use two automatic metrics to distinguish hard and easy queries. In particular, we first filter out easy queries by an exact matching metric (i.e. the exactly matching all the words of answer from queries). Since our MedLAMA contains multiple answers for queries, we use a threshold on the average exact matching score, i.e. avg-match>0.1, to filter out easy examples, where avg-match is calculated by: avg-match = Count(matched answers) Count(total answers) .",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_59",
            "content": "This metric can remove all the queries that match the whole string of answers. However, some common sub-strings between queries and answers also prone to reveal answers, particularly benefiting those retrieval-based probing approaches. E.g. <Magnesium Chloride, may-prevent, Magnesium Deficiency>. Therefore, we further calculate the ROUGE-L score (Lin and Och, 2004) for all the queries by regarding <query, answers> pairs as the <hypothesis, reference> pairs, and further filter out the ROUGE-L>0.1 queries.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_60",
            "content": "We train our Contrastive-Probe based on 10k sentences which are randomly sampled from the original pre-training corpora of the corresponding PLMs. Since most of the biomedical BERTs use PubMed texts as their pre-training corpora, for all biomedical PLMs we sampled random sentences from a version of PubMed corpus used by BlueBERT model (Peng et al., 2019), while for BERT we sampled sentences from its original Wikitext corpora. For the hyperparamters of our Contrastive-Probe, Table 8 lists our search options and the best parameters used in our paper.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_61",
            "content": "To further investigate the impact of the mask ratio to the probing performance, we also test our Contrastive-Probe based on PubMedBERT over different mask ratios ({0.1, 0.2, 0.3, 0.4, 0.5}) under the 10 random sentence sets, the result of which is shown in Figure 9. We can see that over different mask ratios the Contrastive-Probe always reaches their best performance under certain pre-training steps. And the performance curves of mask ratios are different over the full and hard sets, but they all achieves a generally good performance when the mask ratio is 0.5, which validates that different mask ratios favour different types queries.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "59-ARR_v2_62",
            "content": "Emily Alsentzer, John Murphy, William Boag, Wei-Hung Weng, Di Jindi, Tristan Naumann, Matthew Mcdermott, Publicly available clinical bert embeddings, 2019, NAACL HLT, .",
            "ntype": "ref",
            "meta": {
                "xid": "b0",
                "authors": [
                    "Emily Alsentzer",
                    "John Murphy",
                    "William Boag",
                    "Wei-Hung Weng",
                    "Di Jindi",
                    "Tristan Naumann",
                    "Matthew Mcdermott"
                ],
                "title": "Publicly available clinical bert embeddings",
                "pub_date": "2019",
                "pub_title": "NAACL HLT",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_63",
            "content": "Iz Beltagy, Kyle Lo, Arman Cohan, SciB-ERT: A pretrained language model for scientific text, 2019, EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b1",
                "authors": [
                    "Iz Beltagy",
                    "Kyle Lo",
                    "Arman Cohan"
                ],
                "title": "SciB-ERT: A pretrained language model for scientific text",
                "pub_date": "2019",
                "pub_title": "EMNLP",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_64",
            "content": "Olivier Bodenreider, The unified medical language system (umls): integrating biomedical terminology, 2004, Nucleic acids research, .",
            "ntype": "ref",
            "meta": {
                "xid": "b2",
                "authors": [
                    "Olivier Bodenreider"
                ],
                "title": "The unified medical language system (umls): integrating biomedical terminology",
                "pub_date": "2004",
                "pub_title": "Nucleic acids research",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_65",
            "content": "Benjamin Tom B Brown, Nick Mann, Melanie Ryder, Jared Subbiah, Prafulla Kaplan, Arvind Dhariwal, Pranav Neelakantan, Girish Shyam, Amanda Sastry,  Askell, Language models are few-shot learners, 2020, EACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b3",
                "authors": [
                    "Benjamin Tom B Brown",
                    "Nick Mann",
                    "Melanie Ryder",
                    "Jared Subbiah",
                    "Prafulla Kaplan",
                    "Arvind Dhariwal",
                    "Pranav Neelakantan",
                    "Girish Shyam",
                    "Amanda Sastry",
                    " Askell"
                ],
                "title": "Language models are few-shot learners",
                "pub_date": "2020",
                "pub_title": "EACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_66",
            "content": "Boxi Cao, Hongyu Lin, Xianpei Han, Le Sun, Lingyong Yan, Meng Liao, Tong Xue, Jin Xu, Knowledgeable or educated guess? revisiting language models as knowledge bases, 2021, ACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b4",
                "authors": [
                    "Boxi Cao",
                    "Hongyu Lin",
                    "Xianpei Han",
                    "Le Sun",
                    "Lingyong Yan",
                    "Meng Liao",
                    "Tong Xue",
                    "Jin Xu"
                ],
                "title": "Knowledgeable or educated guess? revisiting language models as knowledge bases",
                "pub_date": "2021",
                "pub_title": "ACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_67",
            "content": "UNKNOWN, None, 2021, Autoregressive entity retrieval, .",
            "ntype": "ref",
            "meta": {
                "xid": "b5",
                "authors": null,
                "title": null,
                "pub_date": "2021",
                "pub_title": "Autoregressive entity retrieval",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_68",
            "content": "Jacob Devlin, Ming-Wei Chang, Kenton Lee, Kristina Toutanova, BERT: Pre-training of deep bidirectional transformers for language understanding, 2019, NAACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b6",
                "authors": [
                    "Jacob Devlin",
                    "Ming-Wei Chang",
                    "Kenton Lee",
                    "Kristina Toutanova"
                ],
                "title": "BERT: Pre-training of deep bidirectional transformers for language understanding",
                "pub_date": "2019",
                "pub_title": "NAACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_69",
            "content": "Philipp Dufter, Nora Kassner, Hinrich Sch\u00fctze, Static embeddings as efficient knowledge bases, 2021, NAACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b7",
                "authors": [
                    "Philipp Dufter",
                    "Nora Kassner",
                    "Hinrich Sch\u00fctze"
                ],
                "title": "Static embeddings as efficient knowledge bases",
                "pub_date": "2021",
                "pub_title": "NAACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_70",
            "content": "Leandra Fichtel, Jan-Christoph Kalo, Wolf-Tilo Balke, Prompt tuning or fine-tuninginvestigating relational knowledge in pre-trained language models, 2021, AKBC, .",
            "ntype": "ref",
            "meta": {
                "xid": "b8",
                "authors": [
                    "Leandra Fichtel",
                    "Jan-Christoph Kalo",
                    "Wolf-Tilo Balke"
                ],
                "title": "Prompt tuning or fine-tuninginvestigating relational knowledge in pre-trained language models",
                "pub_date": "2021",
                "pub_title": "AKBC",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_71",
            "content": "Tianyu Gao, Adam Fisch, Danqi Chen, Making pre-trained language models better few-shot learners, 2020, ACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b9",
                "authors": [
                    "Tianyu Gao",
                    "Adam Fisch",
                    "Danqi Chen"
                ],
                "title": "Making pre-trained language models better few-shot learners",
                "pub_date": "2020",
                "pub_title": "ACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_72",
            "content": "Marjan Ghazvininejad, Omer Levy, Yinhan Liu, Luke Zettlemoyer, Mask-predict: Parallel decoding of conditional masked language models, 2019, EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b10",
                "authors": [
                    "Marjan Ghazvininejad",
                    "Omer Levy",
                    "Yinhan Liu",
                    "Luke Zettlemoyer"
                ],
                "title": "Mask-predict: Parallel decoding of conditional masked language models",
                "pub_date": "2019",
                "pub_title": "EMNLP",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_73",
            "content": "Goran Glava\u0161, Ivan Vuli\u0107, Is supervised syntactic parsing beneficial for language understanding tasks? an empirical investigation, 2021, ACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b11",
                "authors": [
                    "Goran Glava\u0161",
                    "Ivan Vuli\u0107"
                ],
                "title": "Is supervised syntactic parsing beneficial for language understanding tasks? an empirical investigation",
                "pub_date": "2021",
                "pub_title": "ACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_74",
            "content": "Yu Gu, Robert Tinn, Hao Cheng, Michael Lucas, Naoto Usuyama, Xiaodong Liu, Tristan Naumann, Jianfeng Gao, and Hoifung Poon. 2020. Domainspecific language model pretraining for biomedical natural language processing, , ACM Transactions on Computing for Healthcare, .",
            "ntype": "ref",
            "meta": {
                "xid": "b12",
                "authors": [
                    "Yu Gu",
                    "Robert Tinn",
                    "Hao Cheng",
                    "Michael Lucas",
                    "Naoto Usuyama",
                    "Xiaodong Liu",
                    "Tristan Naumann"
                ],
                "title": "Jianfeng Gao, and Hoifung Poon. 2020. Domainspecific language model pretraining for biomedical natural language processing",
                "pub_date": null,
                "pub_title": "ACM Transactions on Computing for Healthcare",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_75",
            "content": "Zhengbao Jiang, Antonios Anastasopoulos, Haibo Ding, and Graham Neubig. 2020a. X-factr: Multilingual factual knowledge retrieval from pretrained language models, , EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b13",
                "authors": [
                    "Zhengbao Jiang",
                    "Antonios Anastasopoulos"
                ],
                "title": "Haibo Ding, and Graham Neubig. 2020a. X-factr: Multilingual factual knowledge retrieval from pretrained language models",
                "pub_date": null,
                "pub_title": "EMNLP",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_76",
            "content": "UNKNOWN, None, 2020, How can we know what language models know?, TACL.",
            "ntype": "ref",
            "meta": {
                "xid": "b14",
                "authors": null,
                "title": null,
                "pub_date": "2020",
                "pub_title": "How can we know what language models know?",
                "pub": "TACL"
            }
        },
        {
            "ix": "59-ARR_v2_77",
            "content": "Nora Kassner, Philipp Dufter, Hinrich Sch\u00fctze, Multilingual lama: Investigating knowledge in multilingual pretrained language models, 2021, ACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b15",
                "authors": [
                    "Nora Kassner",
                    "Philipp Dufter",
                    "Hinrich Sch\u00fctze"
                ],
                "title": "Multilingual lama: Investigating knowledge in multilingual pretrained language models",
                "pub_date": "2021",
                "pub_title": "ACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_78",
            "content": "Jinhyuk Lee, Wonjin Yoon, Sungdong Kim, Donghyeon Kim, Sunkyu Kim, Chan Ho So, Jaewoo Kang, BioBERT: a pretrained biomedical language representation model for biomedical text mining, 2020, Bioinformatics, .",
            "ntype": "ref",
            "meta": {
                "xid": "b16",
                "authors": [
                    "Jinhyuk Lee",
                    "Wonjin Yoon",
                    "Sungdong Kim",
                    "Donghyeon Kim",
                    "Sunkyu Kim",
                    "Chan Ho So",
                    "Jaewoo Kang"
                ],
                "title": "BioBERT: a pretrained biomedical language representation model for biomedical text mining",
                "pub_date": "2020",
                "pub_title": "Bioinformatics",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_79",
            "content": "Mike Lewis, Yinhan Liu, Naman Goyal ; Abdelrahman Mohamed, Omer Levy, Veselin Stoyanov, Luke Zettlemoyer, BART: denoising sequence-to-sequence pretraining for natural language generation, translation, and comprehension, 2020, ACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b17",
                "authors": [
                    "Mike Lewis",
                    "Yinhan Liu",
                    "Naman Goyal ; Abdelrahman Mohamed",
                    "Omer Levy",
                    "Veselin Stoyanov",
                    "Luke Zettlemoyer"
                ],
                "title": "BART: denoising sequence-to-sequence pretraining for natural language generation, translation, and comprehension",
                "pub_date": "2020",
                "pub_title": "ACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_80",
            "content": "Chin-Yew Lin, Franz Josef Och, Automatic evaluation of machine translation quality using longest common subsequence and skip-bigram statistics, 2004, ACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b18",
                "authors": [
                    "Chin-Yew Lin",
                    "Franz Josef Och"
                ],
                "title": "Automatic evaluation of machine translation quality using longest common subsequence and skip-bigram statistics",
                "pub_date": "2004",
                "pub_title": "ACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_81",
            "content": "UNKNOWN, None, 2021, Selfalignment pre-training for biomedical entity representations, NAACL.",
            "ntype": "ref",
            "meta": {
                "xid": "b19",
                "authors": null,
                "title": null,
                "pub_date": "2021",
                "pub_title": "Selfalignment pre-training for biomedical entity representations",
                "pub": "NAACL"
            }
        },
        {
            "ix": "59-ARR_v2_82",
            "content": "Fangyu Liu, Ivan Vuli\u0107, Anna Korhonen, Nigel Collier, Fast, effective, and self-supervised: Transforming masked language models into universal lexical and sentence encoders, 2021, EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b20",
                "authors": [
                    "Fangyu Liu",
                    "Ivan Vuli\u0107",
                    "Anna Korhonen",
                    "Nigel Collier"
                ],
                "title": "Fast, effective, and self-supervised: Transforming masked language models into universal lexical and sentence encoders",
                "pub_date": "2021",
                "pub_title": "EMNLP",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_83",
            "content": "Qianchu Liu, Fangyu Liu, Nigel Collier, Anna Korhonen, Ivan Vuli\u0107, Mirrorwic: On eliciting word-in-context representations from pretrained language models, 2021, CoNLL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b21",
                "authors": [
                    "Qianchu Liu",
                    "Fangyu Liu",
                    "Nigel Collier",
                    "Anna Korhonen",
                    "Ivan Vuli\u0107"
                ],
                "title": "Mirrorwic: On eliciting word-in-context representations from pretrained language models",
                "pub_date": "2021",
                "pub_title": "CoNLL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_84",
            "content": "Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, Veselin Stoyanov, Roberta: A robustly optimized bert pretraining approach, 2020, ICLR, .",
            "ntype": "ref",
            "meta": {
                "xid": "b22",
                "authors": [
                    "Yinhan Liu",
                    "Myle Ott",
                    "Naman Goyal",
                    "Jingfei Du",
                    "Mandar Joshi",
                    "Danqi Chen",
                    "Omer Levy",
                    "Mike Lewis",
                    "Luke Zettlemoyer",
                    "Veselin Stoyanov"
                ],
                "title": "Roberta: A robustly optimized bert pretraining approach",
                "pub_date": "2020",
                "pub_title": "ICLR",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_85",
            "content": "George Michalopoulos, Yuanxin Wang, Hussam Kaka, Helen Chen, Alexander Wong, Umlsbert: Clinical domain knowledge augmentation of contextual embeddings using the unified medical language system metathesaurus, 2021, NAACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b23",
                "authors": [
                    "George Michalopoulos",
                    "Yuanxin Wang",
                    "Hussam Kaka",
                    "Helen Chen",
                    "Alexander Wong"
                ],
                "title": "Umlsbert: Clinical domain knowledge augmentation of contextual embeddings using the unified medical language system metathesaurus",
                "pub_date": "2021",
                "pub_title": "NAACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_86",
            "content": "UNKNOWN, None, 2021, Scientific language models for biomedical knowledge base completion: An empirical study, .",
            "ntype": "ref",
            "meta": {
                "xid": "b24",
                "authors": null,
                "title": null,
                "pub_date": "2021",
                "pub_title": "Scientific language models for biomedical knowledge base completion: An empirical study",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_87",
            "content": "UNKNOWN, None, 2018, Representation learning with contrastive predictive coding, .",
            "ntype": "ref",
            "meta": {
                "xid": "b25",
                "authors": null,
                "title": null,
                "pub_date": "2018",
                "pub_title": "Representation learning with contrastive predictive coding",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_88",
            "content": "Yifan Peng, Shankai Yan, Zhiyong Lu, Transfer learning in biomedical natural language processing: An evaluation of BERT and ELMo on ten benchmarking datasets, 2019, BioNLP Workshop, .",
            "ntype": "ref",
            "meta": {
                "xid": "b26",
                "authors": [
                    "Yifan Peng",
                    "Shankai Yan",
                    "Zhiyong Lu"
                ],
                "title": "Transfer learning in biomedical natural language processing: An evaluation of BERT and ELMo on ten benchmarking datasets",
                "pub_date": "2019",
                "pub_title": "BioNLP Workshop",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_89",
            "content": "UNKNOWN, None, , , .",
            "ntype": "ref",
            "meta": {
                "xid": "b27",
                "authors": null,
                "title": null,
                "pub_date": null,
                "pub_title": null,
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_90",
            "content": "Fabio Petroni, Tim Rockt\u00e4schel, Sebastian Riedel, Patrick Lewis, Anton Bakhtin, Yuxiang Wu, Alexander Miller, Language models as knowledge bases, 2019, EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b28",
                "authors": [
                    "Fabio Petroni",
                    "Tim Rockt\u00e4schel",
                    "Sebastian Riedel",
                    "Patrick Lewis",
                    "Anton Bakhtin",
                    "Yuxiang Wu",
                    "Alexander Miller"
                ],
                "title": "Language models as knowledge bases",
                "pub_date": "2019",
                "pub_title": "EMNLP",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_91",
            "content": "UNKNOWN, None, , Erol Bahadroglu, Alec Peltekian, and Gr\u00e9goire Altan-Bonnet. 2021. Scifive: a text-to-text transformer model for biomedical literature, .",
            "ntype": "ref",
            "meta": {
                "xid": "b29",
                "authors": null,
                "title": null,
                "pub_date": null,
                "pub_title": "Erol Bahadroglu, Alec Peltekian, and Gr\u00e9goire Altan-Bonnet. 2021. Scifive: a text-to-text transformer model for biomedical literature",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_92",
            "content": "UNKNOWN, None, 2019, E-bert: Efficient-yet-effective entity embeddings for bert, .",
            "ntype": "ref",
            "meta": {
                "xid": "b30",
                "authors": null,
                "title": null,
                "pub_date": "2019",
                "pub_title": "E-bert: Efficient-yet-effective entity embeddings for bert",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_93",
            "content": "Nina Poerner, Ulli Waltinger, Hinrich Sch\u00fctze, E-bert: Efficient-yet-effective entity embeddings for bert, 2020, EMNLP: Findings, .",
            "ntype": "ref",
            "meta": {
                "xid": "b31",
                "authors": [
                    "Nina Poerner",
                    "Ulli Waltinger",
                    "Hinrich Sch\u00fctze"
                ],
                "title": "E-bert: Efficient-yet-effective entity embeddings for bert",
                "pub_date": "2020",
                "pub_title": "EMNLP: Findings",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_94",
            "content": "Guanghui Qin, Jason Eisner, Learning how to ask: Querying lms with mixtures of soft prompts, 2021, NAACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b32",
                "authors": [
                    "Guanghui Qin",
                    "Jason Eisner"
                ],
                "title": "Learning how to ask: Querying lms with mixtures of soft prompts",
                "pub_date": "2021",
                "pub_title": "NAACL",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_95",
            "content": "Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, Peter Liu, Exploring the limits of transfer learning with a unified text-to-text transformer, 2020, J. Mach. Learn. Res, .",
            "ntype": "ref",
            "meta": {
                "xid": "b33",
                "authors": [
                    "Colin Raffel",
                    "Noam Shazeer",
                    "Adam Roberts",
                    "Katherine Lee",
                    "Sharan Narang",
                    "Michael Matena",
                    "Yanqi Zhou",
                    "Wei Li",
                    "Peter Liu"
                ],
                "title": "Exploring the limits of transfer learning with a unified text-to-text transformer",
                "pub_date": "2020",
                "pub_title": "J. Mach. Learn. Res",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_96",
            "content": "Taylor Shin, Yasaman Razeghi, I Robert L Logan, Eric Wallace, Sameer Singh, Autoprompt: Eliciting knowledge from language models with automatically generated prompts, 2020, EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b34",
                "authors": [
                    "Taylor Shin",
                    "Yasaman Razeghi",
                    "I Robert L Logan",
                    "Eric Wallace",
                    "Sameer Singh"
                ],
                "title": "Autoprompt: Eliciting knowledge from language models with automatically generated prompts",
                "pub_date": "2020",
                "pub_title": "EMNLP",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_97",
            "content": "Taylor Shin, Yasaman Razeghi, I Robert L Logan, Eric Wallace, Sameer Singh, Eliciting knowledge from language models using automatically generated prompts, 2020, EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b35",
                "authors": [
                    "Taylor Shin",
                    "Yasaman Razeghi",
                    "I Robert L Logan",
                    "Eric Wallace",
                    "Sameer Singh"
                ],
                "title": "Eliciting knowledge from language models using automatically generated prompts",
                "pub_date": "2020",
                "pub_title": "EMNLP",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_98",
            "content": "Vered Shwartz, Rachel Rudinger, Oyvind Tafjord, you are grounded!\": Latent name artifacts in pre-trained language models, 2020, EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b36",
                "authors": [
                    "Vered Shwartz",
                    "Rachel Rudinger",
                    "Oyvind Tafjord"
                ],
                "title": "you are grounded!\": Latent name artifacts in pre-trained language models",
                "pub_date": "2020",
                "pub_title": "EMNLP",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_99",
            "content": "Robyn Speer, Joshua Chin, Catherine Havasi, Conceptnet 5.5: An open multilingual graph of general knowledge, 2017, AAAI, .",
            "ntype": "ref",
            "meta": {
                "xid": "b37",
                "authors": [
                    "Robyn Speer",
                    "Joshua Chin",
                    "Catherine Havasi"
                ],
                "title": "Conceptnet 5.5: An open multilingual graph of general knowledge",
                "pub_date": "2017",
                "pub_title": "AAAI",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_100",
            "content": "UNKNOWN, None, 2022, A contrastive framework for neural text generation, CoRR.",
            "ntype": "ref",
            "meta": {
                "xid": "b38",
                "authors": null,
                "title": null,
                "pub_date": "2022",
                "pub_title": "A contrastive framework for neural text generation",
                "pub": "CoRR"
            }
        },
        {
            "ix": "59-ARR_v2_101",
            "content": "UNKNOWN, None, 2021, Tacl: Improving BERT pre-training with tokenaware contrastive learning, CoRR.",
            "ntype": "ref",
            "meta": {
                "xid": "b39",
                "authors": null,
                "title": null,
                "pub_date": "2021",
                "pub_title": "Tacl: Improving BERT pre-training with tokenaware contrastive learning",
                "pub": "CoRR"
            }
        },
        {
            "ix": "59-ARR_v2_102",
            "content": "Mujeen Sung, Jinhyuk Lee, Sean Yi, Minji Jeon, Sungdong Kim, Jaewoo Kang, Can language models be biomedical knowledge bases, 2021, EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b40",
                "authors": [
                    "Mujeen Sung",
                    "Jinhyuk Lee",
                    "Sean Yi",
                    "Minji Jeon",
                    "Sungdong Kim",
                    "Jaewoo Kang"
                ],
                "title": "Can language models be biomedical knowledge bases",
                "pub_date": "2021",
                "pub_title": "EMNLP",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_103",
            "content": "UNKNOWN, None, 2020, Coder: Knowledge infused cross-lingual medical term embedding for term normalization, .",
            "ntype": "ref",
            "meta": {
                "xid": "b41",
                "authors": null,
                "title": null,
                "pub_date": "2020",
                "pub_title": "Coder: Knowledge infused cross-lingual medical term embedding for term normalization",
                "pub": null
            }
        },
        {
            "ix": "59-ARR_v2_104",
            "content": "Zexuan Zhong, Dan Friedman, Danqi Chen, Factual probing is [mask]: Learning vs. learning to recall, 2021, NAACL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b42",
                "authors": [
                    "Zexuan Zhong",
                    "Dan Friedman",
                    "Danqi Chen"
                ],
                "title": "Factual probing is [mask]: Learning vs. learning to recall",
                "pub_date": "2021",
                "pub_title": "NAACL",
                "pub": null
            }
        }
    ],
    "span_nodes": [
        {
            "ix": "59-ARR_v2_0@0",
            "content": "Rewire-then-Probe: A Contrastive Recipe for Probing Biomedical Knowledge of Pre-trained Language Models",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_0",
            "start": 0,
            "end": 102,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_1@0",
            "content": "Abstract",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_1",
            "start": 0,
            "end": 7,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@0",
            "content": "Knowledge probing is crucial for understanding the knowledge transfer mechanism behind the pre-trained language models (PLMs).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 0,
            "end": 125,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@1",
            "content": "Despite the growing progress of probing knowledge for PLMs in the general domain, specialised areas such as biomedical domain are vastly under-explored.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 127,
            "end": 278,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@2",
            "content": "To facilitate this, we release a well-curated biomedical knowledge probing benchmark, MedLAMA, constructed based on the Unified Medical Language System (UMLS) Metathesaurus.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 280,
            "end": 452,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@3",
            "content": "We test a wide spectrum of state-of-the-art PLMs and probing approaches on our benchmark, reaching at most 3% of acc@10.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 454,
            "end": 573,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@4",
            "content": "While highlighting various sources of domain-specific challenges that amount to this underwhelming performance, we illustrate that the underlying PLMs have a higher potential for probing tasks.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 575,
            "end": 767,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@5",
            "content": "To achieve this, we propose Contrastive-Probe, a novel self-supervised contrastive probing approach, that adjusts the underlying PLMs without using any probing data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 769,
            "end": 933,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@6",
            "content": "While Contrastive-Probe pushes the acc@10 to 24%, the performance gap remains notable.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 935,
            "end": 1020,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@7",
            "content": "Our human expert evaluation suggests that the probing performance of our Contrastive-Probe is underestimated as UMLS does not comprehensively cover all existing factual knowledge.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 1022,
            "end": 1200,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@8",
            "content": "We hope MedLAMA and Contrastive-Probe facilitate further developments of more suited probing techniques for this domain.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 1202,
            "end": 1321,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_2@9",
            "content": "1",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_2",
            "start": 1323,
            "end": 1323,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_3@0",
            "content": "Introduction",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_3",
            "start": 0,
            "end": 11,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_4@0",
            "content": "Pre-trained language models (PLMs; Devlin et al. 2019;) have orchestrated incredible progress on myriads of few-or zero-shot language understanding tasks, by pre-training model parameters in a task-agnostic way and transferring knowledge to specific downstream tasks via finetuning (Brown et al., 2020;Petroni et al., 2021).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_4",
            "start": 0,
            "end": 323,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_4@1",
            "content": "1 The data and code implementation are available at https://github.com/cambridgeltl/medlama.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_4",
            "start": 325,
            "end": 416,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_5@0",
            "content": "* Equal contribution.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_5",
            "start": 0,
            "end": 20,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_5@1",
            "content": "This work was done at the University of Cambridge.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_5",
            "start": 22,
            "end": 71,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_5@2",
            "content": "To better understand the underlying knowledge transfer mechanism behind these achievements, many knowledge probing approaches and benchmark datasets have been proposed (Petroni et al., 2019;Jiang et al., 2020a;Zhong et al., 2021).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_5",
            "start": 73,
            "end": 302,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_5@3",
            "content": "This is typically done by formulating knowledge triples as cloze-style queries with the objects being masked (see Table 1) and using the PLM to fill the single (Petroni et al., 2019) or multiple (Ghazvininejad et al., 2019) [Mask] token(s) without further fine-tuning.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_5",
            "start": 304,
            "end": 571,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_6@0",
            "content": "In parallel, it has been shown that specialised PLMs (e.g., BioBERT; Lee et al. 2020, Blue-BERT;Peng et al. 2019 and PubMedBERT;Gu et al. 2020) substantially improve the performance in several biomedical tasks (Gu et al., 2020).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_6",
            "start": 0,
            "end": 227,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_6@1",
            "content": "The biomedical domain is an interesting testbed for investigating knowledge probing for its unique challenges (including vocabulary size, multi-token entities), and the practical benefit of potentially disposing the expensive knowledge base construction process.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_6",
            "start": 229,
            "end": 490,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_6@2",
            "content": "However, research on knowledge probing in this domain is largely under-explored.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_6",
            "start": 492,
            "end": 571,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_7@0",
            "content": "To facilitate research in this direction, we present a well-curated biomedical knowledge probing benchmark, MedLAMA, that consists of 19 thoroughly selected relations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_7",
            "start": 0,
            "end": 166,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_7@1",
            "content": "Each relation contains 1k queries (19k queries in total with at most 10 answers each), which are extracted from the large UMLS (Bodenreider, 2004) biomedical knowledge graph and verified by domain experts.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_7",
            "start": 168,
            "end": 372,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_7@2",
            "content": "We use automatic metrics to identify the hard examples based on the hardness of exposing answers from their query tokens.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_7",
            "start": 374,
            "end": 494,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_7@3",
            "content": "See Table 1 for a sample of easy and hard examples from MedLAMA.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_7",
            "start": 496,
            "end": 559,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_8@0",
            "content": "A considerable challenge in probing in biomedical domain is handling multi-token encoding of the answers (e.g. in MedLAMA only 2.6% of the answers are single-token, while in the English set of mLAMA; Kassner et al. 2021, 98% are singletoken), where all existing approaches (i.e., mask predict; Petroni et al. 2019, retrieval-based;Dufter et al. 2021, and generation-based;Gao et al. 2020) struggle to be effective.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_8",
            "start": 0,
            "end": 413,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_8@1",
            "content": "2 For example, the mask predict approach (Jiang et al., 2020a) which performs well in probing multilingual knowledge achieves less than 1% accuracy on MedLAMA.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_8",
            "start": 415,
            "end": 573,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_9@0",
            "content": "To address the aforementioned challenge, we propose a new method, Contrastive-Probe, that first adjusts the representation space of the underlying PLMs by using a retrieval-based contrastive learning objective (like 'rewiring' the switchboard to the target appliances Liu et al. 2021c) then retrieves answers based on their representation similarities to the queries.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_9",
            "start": 0,
            "end": 366,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_9@1",
            "content": "Notably, our Contrastive-Probe does not require using the MLM heads during probing, which avoids the vocabulary bias across different models.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_9",
            "start": 368,
            "end": 508,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_9@2",
            "content": "Additionally, retrievalbased probe is effective for addressing the multitoken challenge, as it avoids the need to generate multiple tokens from the MLM vocabulary.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_9",
            "start": 510,
            "end": 672,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_9@3",
            "content": "We show that Contrastive-Probe facilitates abso-2 Prompt-based probing approaches such as Auto-Prompt (Shin et al., 2020a), SoftPrompt (Qin and Eisner, 2021), and OptiPrompt (Zhong et al., 2021) need additional labelled data for fine-tuning prompts, but we restrict the scope of our investigation to methods that do not require task data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_9",
            "start": 674,
            "end": 1011,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_9@4",
            "content": "lute improvements of up-to \u223c5% and \u223c21% on the acc@1 and acc@10 probing performance compared with the existing approaches.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_9",
            "start": 1013,
            "end": 1134,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_10@0",
            "content": "We further highlight that the elicited knowledge by Contrastive-Probe is not gained from the additional random sentences, but from the original pre-trained parameters, which echos the previous finding of Liu et al. (2021b); Glava\u0161 and Vuli\u0107 (2021); Su et al. (2021Su et al. ( , 2022.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_10",
            "start": 0,
            "end": 282,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_10@1",
            "content": "Additionally, we demonstrate that different state-of-the-art PLMs and transformer layers are suited for different types of relational knowledge, and different relations requires different depth of tuning, suggesting that both the layers and tuning depth should be considered when infusing knowledge over different relations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_10",
            "start": 284,
            "end": 607,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_10@2",
            "content": "Furthermore, expert evaluation of PLM responses on a subset of MedLAMA highlights that expert-crafted resources such as UMLS still do not include the full spectrum of factual knowledge, indicating that the factual information encoded in PLMs is richer than what is reflected by the automatic evaluation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_10",
            "start": 609,
            "end": 911,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_11@0",
            "content": "The findings of our work, along with the proposed MedLAMA and Contrastive-Probe, highlight both the unique challenges of the biomedical domain and the unexploited potential of PLMs.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_11",
            "start": 0,
            "end": 180,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_11@1",
            "content": "We hope our research to shed light on what domainspecialised PLMs capture and how it could be better resurfaced, with minimum cost, for probing.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_11",
            "start": 182,
            "end": 325,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_12@0",
            "content": "MedLAMA",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_12",
            "start": 0,
            "end": 6,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_13@0",
            "content": "To facilitate research of knowledge probing in the biomedical domain, we create the MedLAMA benchmark based on the largest biomedical knowledge graph UMLS (Bodenreider, 2004).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_13",
            "start": 0,
            "end": 174,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_13@1",
            "content": "UMLS 3 is a comprehensive metathesaurus containing 3.6 million entities and more than 35.2 million knowledge triples over 818 relation types which are integrated from various ontologies, including SNOMED CT, MeSH and the NCBI taxonomy.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_13",
            "start": 176,
            "end": 410,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@0",
            "content": "Creating a LAMA-style (Petroni et al., 2019) probing benchmark from such a knowledge graph poses its own challenges: (1) UMLS is a collection of knowledge graphs with more than 150 ontologies constructed by different organisations with very different schemata and emphasis; (2) a significant amount of entity names (from certain vocabularies) are unnatural language (e.g., t(8;21)(q22;q22) denoting an observed karyotypic abnormality) which can hardly be understood by the existing PLMs, with tokenisation tailored for natural language; (3) some queries (constructed from knowledge triples) can have up to hundreds of answers (i.e., 1-to-N relations), complicating the interpretation of probing performance; and (4) some queries may expose answers in themselves (e.g., answer within queries), making it challenging to interpret relative accuracy scores.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 0,
            "end": 852,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@1",
            "content": "Selection of Relationship Types.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 854,
            "end": 885,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@2",
            "content": "In order to obtain high-quality knowledge queries, we conducted multiple rounds of manual filtering on the relation level to exclude uninformative relations or relations that are only important in the ontological context but do not contain interesting semantics as a natural language (e.g, taxonomy and measurement relations).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 887,
            "end": 1212,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@3",
            "content": "We also excluded relations with insufficient triples/entities.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 1214,
            "end": 1275,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@4",
            "content": "Then, we manually checked the knowledge triples for each relation to filter out those that contain unnatural language entities and ensure that their queries are semantically meaningful.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 1277,
            "end": 1461,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@5",
            "content": "Additionally, in the cases of 1-to-N relations where there are multiple gold answers for the same query, we constrained all the queries to contain at most 10 gold answers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 1463,
            "end": 1633,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@6",
            "content": "These steps resulted in 19 relations with each containing 1k randomly sampled knowledge queries.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 1635,
            "end": 1730,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@7",
            "content": "Table 2 shows the detailed relation names and their corresponding prompts.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 1732,
            "end": 1805,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@8",
            "content": "Easy vs. Hard Queries.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 1807,
            "end": 1828,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_14@9",
            "content": "Recent works (Poerner et al., 2020;Shwartz et al., 2020) have discovered",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_14",
            "start": 1830,
            "end": 1901,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_15@0",
            "content": "Type Answer space MLM Fill-mask (Petroni et al., 2019) MP PLM Vocab X-FACTR (Jiang et al., 2020a) MP PLM Vocab Generative PLMs GB PLM Vocab Mask average RB KG Entities Contrastive-Probe (Ours) RB KG Entities that PLMs are overly reliant on the surface form of entities to guess the correct answer of a knowledge query.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_15",
            "start": 0,
            "end": 317,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_15@1",
            "content": "The PLMs \"cheat\" by detecting lexical overlaps between the query and answer surface forms instead of exercising their abilities of predicting factual knowledge.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_15",
            "start": 319,
            "end": 478,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_15@2",
            "content": "For instance, PLMs can easily deal with the triple <Dengue virus live antigen CYD serotype 1, may-prevent, Dengue> since the answer is part of the query.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_15",
            "start": 480,
            "end": 632,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_15@3",
            "content": "To mitigate such bias, we also create a hard query set for each relation by selecting a subset of their corresponding 1k queries using token and matching metrics (i.e., exact matching and ROUGE-L (Lin and Och, 2004)).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_15",
            "start": 634,
            "end": 850,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_15@4",
            "content": "For more details see the Appendix.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_15",
            "start": 852,
            "end": 885,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_15@5",
            "content": "We refer to the final filtered and original queries as the hard sets and full sets, respectively.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_15",
            "start": 887,
            "end": 983,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_15@6",
            "content": "Figure 1 (left) shows the count of hard vs. full sets.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_15",
            "start": 985,
            "end": 1038,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_16@0",
            "content": "The Multi-token Issue.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_16",
            "start": 0,
            "end": 21,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_16@1",
            "content": "One of the key challenges for probing MedLAMA is the multi-token decoding of its entity names.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_16",
            "start": 23,
            "end": 116,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_16@2",
            "content": "In MedLAMA there are only 2.6% of the entity names that are singletoken 4 while in the English set of mLAMA and LAMA (Petroni et al., 2019) the percentage of single-token answers are 98% and 100%, respectively.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_16",
            "start": 118,
            "end": 327,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_16@3",
            "content": "Figure 1 (right) shows the percentage of answers by different token numbers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_16",
            "start": 329,
            "end": 404,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_17@0",
            "content": "Existing Multi-token Knowledge Probing Approaches",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_17",
            "start": 0,
            "end": 48,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@0",
            "content": "While the pioneer works in PLM knowledge probing mainly focused on the single-token entities, many recent works have started exploring the solutions for the multi-token scenario Jiang et al., 2020a;De Cao et al., 2021).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 0,
            "end": 218,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@1",
            "content": "These knowledge probing approaches can be categorised, based on answer search space and reliance on MLM head, into three categories: mask predict, generation-based, and retrieval-based.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 220,
            "end": 404,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@2",
            "content": "Table 3 summarises their key differences.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 406,
            "end": 446,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@3",
            "content": "Mask Predict.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 448,
            "end": 460,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@4",
            "content": "Mask predict (Petroni et al., 2019;Jiang et al., 2020a) is one of the most commonly used approaches to probe knowledge for masked PLMs (e.g. BERT).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 462,
            "end": 608,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@5",
            "content": "The mask predict approach uses the MLM head to fill a single mask token for a cloze-style query, and the output token is subjected to the PLM vocabulary (Petroni et al., 2019).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 610,
            "end": 785,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@6",
            "content": "Since many real-world entity names are encoded with multiple tokens, the mask predict approach has also been extended to predict multitoken answers using the conditional masked language model (Jiang et al., 2020a;Ghazvininejad et al., 2019).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 787,
            "end": 1027,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@7",
            "content": "Figure 2(a) shows the prediction process.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 1029,
            "end": 1069,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@8",
            "content": "Specifically, given a query, the probing task is formulated as: 1) filling masks in parallel independently (Independent); 2) filling masks from left to right autoregressively (Order); 3) filling tokens sorted by the maximum confidence greedily (Confidence).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 1071,
            "end": 1327,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@9",
            "content": "After all mask tokens are replaced with the initial predictions, the predictions can be further refined by iteratively modifying one token at a time until convergence or until the maximum number of iterations is reached (Jiang et al., 2020a).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 1329,
            "end": 1570,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@10",
            "content": "For example, Order+Order represents that the answers are initially predicted by Order and then refined by Order.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 1572,
            "end": 1683,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_18@11",
            "content": "In this paper we examined two of these approaches, i.e. Independent and Order+Order, based on our initial exploration.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_18",
            "start": 1685,
            "end": 1802,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_19@0",
            "content": "Generation-based.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_19",
            "start": 0,
            "end": 16,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_19@1",
            "content": "Recently, many generation based PLMs have been presented for text generation tasks, such as BART and T5 (Raffel et al., 2020).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_19",
            "start": 18,
            "end": 143,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_19@2",
            "content": "These generative PLMs are trained with a de-noising objective to restore its original form autoregressively Raffel et al., 2020).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_19",
            "start": 145,
            "end": 273,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_19@3",
            "content": "Such an autoregressive generation process is analogous to the Order probing approach, thus the generative PLMs can be directly used to generate answers for each query.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_19",
            "start": 275,
            "end": 441,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_19@4",
            "content": "Specifically, we utilize the cloze-style query with a single [Mask] token as the model input.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_19",
            "start": 443,
            "end": 535,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_19@5",
            "content": "The model then predicts the answer entities that correspond to the [Mask] token in an autoregressive manner.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_19",
            "start": 537,
            "end": 644,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_19@6",
            "content": "An illustration is provided in Figure 2(b).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_19",
            "start": 646,
            "end": 688,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_20@0",
            "content": "Retrieval-based.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_20",
            "start": 0,
            "end": 15,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_20@1",
            "content": "Mask predict and Generationbased approaches need to use the PLM vocabulary as their search spaces for answer tokens, which may generate answers that are not in the answer set.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_20",
            "start": 17,
            "end": 191,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_20@2",
            "content": "In particular, when probing the masked PLMs using their MLM heads, the predicted result might not be a good indicator for measuring the amount of knowledge captured by these PLMs.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_20",
            "start": 193,
            "end": 371,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_20@3",
            "content": "This is mainly because the MLM head will be eventually dropped during the downstream task fine-tuning while the MLM head normally accounts for more than 20% of the total PLM parameters.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_20",
            "start": 373,
            "end": 557,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_20@4",
            "content": "Alternatively, the retrieval-based probing are applied to address this issue.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_20",
            "start": 559,
            "end": 635,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_20@5",
            "content": "Instead of generating answers based on the PLM vocabulary, the retrieval-based approach finds answers by ranking the knowledge graph candidate entities based on the query and entity representations, or the entity generating scores.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_20",
            "start": 637,
            "end": 867,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_21@0",
            "content": "To probe PLMs on MedLAMA, we use mask average , an approach that takes the average log probabilities of entity's individual tokens to rank the candidates.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_21",
            "start": 0,
            "end": 153,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_21@1",
            "content": "The retrieval-based approaches address the multi-token issue by restricting the output space to the valid answer set and can be used to probe knowledge in different types of PLMs (e.g. BERT vs. fastText; ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_21",
            "start": 155,
            "end": 360,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_21@2",
            "content": "However, previous works only report results based on the type-restricted candidate set (e.g. relation) which we observed to decay drastically under the full entity set.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_21",
            "start": 362,
            "end": 529,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_22@0",
            "content": "4 Contrastive-Probe: Cloze-style Task as a Self-retrieving Game",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_22",
            "start": 0,
            "end": 62,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_23@0",
            "content": "To better transform the PLM encoders for the cloze-style probing task, we propose Contrastive-Probe which pre-trains on a small number of sentences sampled from the PLM's original pre-training corpora with a contrastive selfsupervising objective, inspired by the Mirror-BERT (Liu et al., 2021b).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_23",
            "start": 0,
            "end": 294,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_23@1",
            "content": "Our contrastive pretraining does not require the MLM head or any additional external knowledge, and can be completed in less than one minute on 2 \u00d7 2080Ti GPUs.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_23",
            "start": 296,
            "end": 455,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_24@0",
            "content": "Self-supervised Contrastive Rewiring.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_24",
            "start": 0,
            "end": 36,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_24@1",
            "content": "We randomly sample a small set of sentences (e.g. 10k, see \u00a75.2 for stability analysis of Contrastive-Probe on several randomly sampled sets), and replace their tail tokens (e.g. the last 50% excluding the full stop) with a [Mask] token.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_24",
            "start": 38,
            "end": 274,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_24@2",
            "content": "Then these transformed sentences are taken as the queries of the cloze-style self-retrieving game.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_24",
            "start": 276,
            "end": 373,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_24@3",
            "content": "In the following we show an example of transforming a sentence into a cloze-style query:",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_24",
            "start": 375,
            "end": 462,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_25@0",
            "content": "Sentence: Social-distancing largely reduces coronavirus infections.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_25",
            "start": 0,
            "end": 66,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_26@0",
            "content": "Query: Social-distancing largely [Mask].",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_26",
            "start": 0,
            "end": 39,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_27@0",
            "content": "where \"reduces coronavirus infections\" is marked as a positive answer of this query.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_27",
            "start": 0,
            "end": 83,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_27@1",
            "content": "Given a batch, the cloze-style self-retrieving game is to ask the PLMs to retrieve the positive answer from all the queries and answers in the same batch.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_27",
            "start": 85,
            "end": 238,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_27@2",
            "content": "Our Contrastive-Probe tackles this by optimising an InfoNCE objective (Oord et al., 2018),",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_27",
            "start": 240,
            "end": 329,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_28@0",
            "content": "L = \u2212 N i=1 log exp(cos( f (x i ), f (x p ))/\u03c4) x j \u2208N i exp(cos( f (x i ), f (x j ))/\u03c4) ,(1)",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_28",
            "start": 0,
            "end": 92,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_29@0",
            "content": "where f (\u2022) is the PLM encoder (with the MLM head chopped-off and [CLS] as the contextual representation), N is batch size, x i and x p are from a query-answer pair (i.e., x i and x p are from the same sentence), N i contains queries and answers in the batch, and \u03c4 is the temperature.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_29",
            "start": 0,
            "end": 284,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_29@1",
            "content": "This objective function encourages f to create similar representations for any query-answer pairs from the same sentence and dissimilar representations for queries/answers belonging to different sentences.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_29",
            "start": 286,
            "end": 490,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_30@0",
            "content": "Retrieval-based Probing.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_30",
            "start": 0,
            "end": 23,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_30@1",
            "content": "For probing step, the query is created based on the prompt-based template for each knowledge triple , as shown in the following:",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_30",
            "start": 25,
            "end": 152,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_31@0",
            "content": "Experiments",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_31",
            "start": 0,
            "end": 10,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_32@0",
            "content": "In this section we conduct extensive experiments to verify whether Contrastive-Probe is effective for probing biomedical PLMs.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_32",
            "start": 0,
            "end": 125,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_32@1",
            "content": "First, we experiment with Contrastive-Probe and existing probing approaches on MedLAMA benchmark ( \u00a75.1).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_32",
            "start": 127,
            "end": 231,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_33@0",
            "content": "Then, we conduct in-depth analysis of the stability and applicability of Contrastive-Probe in probing biomedical PLMs ( \u00a75.2).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_33",
            "start": 0,
            "end": 125,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_33@1",
            "content": "Finally, we report an evaluation of a biomedical expert on the probing predictions and highlight our findings ( \u00a75.3).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_33",
            "start": 127,
            "end": 244,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_34@0",
            "content": "Contrastive-Probe Rewiring.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_34",
            "start": 0,
            "end": 26,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_35@0",
            "content": "We train our Contrastive-Probe based on 10k sentences which are randomly sampled from the PubMed texts 5 using a mask ratio of 0.5.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_35",
            "start": 0,
            "end": 130,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_35@1",
            "content": "The best hyperparameters and their tuning options are provided in Appendix.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_35",
            "start": 132,
            "end": 206,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_35@2",
            "content": "Probing Baselines.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_35",
            "start": 208,
            "end": 225,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_35@3",
            "content": "For the mask predict approach, we use the original implementation of X-FACTR (Jiang et al., 2020a), and set the beam size and the number of masks to 5.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_35",
            "start": 227,
            "end": 377,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_35@4",
            "content": "Both mask predict and retrieval-based approaches are tested under both the general domain and biomedical domain BERT models, i.e. Bert-based-uncased (Devlin et al., 2019), BlueBERT (Peng et al., 2019), BioBERT , PubMedBERT (Gu et al., 2020).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_35",
            "start": 379,
            "end": 619,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_35@5",
            "content": "6 For generation-based baselines, we test five PLMs, namely BART-base , T5-small and T5-base (Raffel et al., 2020) that are general domain generation PLMs, and SciFive-base & SciFive-large (Phan et al., 2021) that are pre-trained on large biomedical corpora.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_35",
            "start": 621,
            "end": 878,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_36@0",
            "content": "Benchmarking on MedLAMA",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_36",
            "start": 0,
            "end": 22,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@0",
            "content": "Comparing Various Probing Approaches.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 0,
            "end": 36,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@1",
            "content": "Table 4 shows the overall results of various probing baselines on MedLAMA.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 38,
            "end": 111,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@2",
            "content": "It can be seen that the performances of all the existing probing approaches (i.e. generative PLMs, X-FACTR and mask predict) are very low (<1% for acc@1 and <4% for acc@10) regardless of the underlying PLM, which are not effective indicators for measuring knowledge captured.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 113,
            "end": 387,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@3",
            "content": "In contrast, our Contrastive-Probe obtains absolute improvements by up-to \u223c 5% and \u223c 21% on acc@1 and acc10 respectively comparing with the three existing approaches, which validates its effectiveness on measuring the knowledge probing performance.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 389,
            "end": 636,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@4",
            "content": "In particular, PubMedBERT model obtains the best probing performance (5.71% in accuracy) for these biomedical queries, validating its effectiveness of capturing biomedical knowledge comparing with other PLMs (i.e. BERT, BlueBERT and BioBERT).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 638,
            "end": 879,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@5",
            "content": "Benchmarking with Contrastive-Probe.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 881,
            "end": 916,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@6",
            "content": "To further examine the effectiveness of PLMs in capturing biomedical knowledge, we benchmarked several state-of-the-art biomedical PLMs (including pure pre-trained and knowledge-enhanced models) on MedLAMA through our Contrastive-Probe.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 918,
            "end": 1153,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@7",
            "content": "Table 5 shows the probing results over the full and hard sets.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 1155,
            "end": 1216,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@8",
            "content": "In general, we can observe that these biomedical PLMs always perform better than general-domain PLMs (i.e., BERT).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 1218,
            "end": 1331,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@9",
            "content": "Also, we observe the decay of performance of all these models on the more challenging hard set queries.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 1333,
            "end": 1435,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@10",
            "content": "While PubMedBERT performs the best among all the pure pre-trained models, SapBERT (Liu et al., 2021a) and CoderBERT (Yuan et al., 2020) (which are the knowledge infused PubMedBERT) further push performance to 8% and 30.41% on acc@1 and acc@10 metrics respectively, highlighting the benefits of knowledge infusion pre-training.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 1437,
            "end": 1762,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@11",
            "content": "Comparison per Answer Length.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 1764,
            "end": 1792,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@12",
            "content": "Since different PLMs use different tokenizers, we use char length of the query answers to split MedLAMA into different bins and test the probing performance over various answer lengths.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 1794,
            "end": 1978,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@13",
            "content": "Figure 3 shows the result.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 1980,
            "end": 2005,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_37@14",
            "content": "We can see that the performance of retrievalbased probing in Contrastive-Probe increases as",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_37",
            "start": 2007,
            "end": 2097,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_38@0",
            "content": "Figure 3: Performance over answer lengths.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_38",
            "start": 0,
            "end": 41,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_39@0",
            "content": "the answer length increase while the performance of mask predict dropped significantly.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_39",
            "start": 0,
            "end": 86,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_39@1",
            "content": "This result validates that our Contrastive-Probe (retrievalbased) are more reliable at predicting longer answers than the mask predict approach since the latter heavily relies on the MLM head.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_39",
            "start": 88,
            "end": 279,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_39@2",
            "content": "7 6 that the model performance drops significantly after chopping the last 3 layers, while its accuracy is still high when dropping only last one layer.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_39",
            "start": 281,
            "end": 432,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_39@3",
            "content": "In Figure 7, we further plot the layer-wise probing performance of PubMedBERT over different relations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_39",
            "start": 434,
            "end": 536,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_39@4",
            "content": "Surprisingly, we find that different relations do not show the same probing performance trends over layers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_39",
            "start": 538,
            "end": 644,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_39@5",
            "content": "For example, with only the first 3 layers, PubMedBERT achieves the best accuracy (>15%) on relation 11 queries.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_39",
            "start": 646,
            "end": 756,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_39@6",
            "content": "This result demonstrates that both relation types and PLM layers are confounding variables in capturing factual knowledge, which helps to explain the difference of training steps over relations in Figure 4.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_39",
            "start": 758,
            "end": 963,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_39@7",
            "content": "This result also suggests that layer-wise and relation-wise training could be the key to effectively infuse factual knowledge for PLMs.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_39",
            "start": 965,
            "end": 1099,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_40@0",
            "content": "In-depth Analysis of Contrastive-Probe",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_40",
            "start": 0,
            "end": 37,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_41@0",
            "content": "Expert Evaluation on Predictions",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_41",
            "start": 0,
            "end": 31,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_42@0",
            "content": "To assess whether the actual probing performance could be possibly higher than what is reflected by the commonly used automatic evaluation, we conducted a human evaluation on the prediction result.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_42",
            "start": 0,
            "end": 196,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_42@1",
            "content": "Specifically, we sample 15 queries and predict their top-10 answers using Contrastive-Probe based on PubMedBERT and ask the assessor 9 to rate the predictions on a scale of [1,5].",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_42",
            "start": 198,
            "end": 376,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_42@2",
            "content": "Figure 8 shows the confusion matrices.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_42",
            "start": 378,
            "end": 415,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_42@3",
            "content": "10 We observe the followings: (1) There are 3 UMLS answers that are annotated with score level 1-4 (precisely, level 3), which indicates UMLS answers might not always be the perfect answers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_42",
            "start": 417,
            "end": 606,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_43@0",
            "content": "(2) There are 20 annotated perfect answers (score 5) in the top 10 predictions that are not marked as the gold answers in the UMLS, which suggests the UMLS does not include all the expected gold knowledge.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_43",
            "start": 0,
            "end": 204,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_44@0",
            "content": "(3) In general, PubMedBERT achieves an 8.67% (13/150) acc@10 under gold answers, but under the expert annotation the acc@10 is 22% (33/150), which means the probing performance is higher than what evaluated using the automatically extracted answers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_44",
            "start": 0,
            "end": 248,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_45@0",
            "content": "Comparing with BioLAMA",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_45",
            "start": 0,
            "end": 21,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_46@0",
            "content": "During the writing of this work, we noticed a concurrent work to ours that also released a biomedical knowledge probing benchmark, called Bio-LAMA Sung et al. (2021).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_46",
            "start": 0,
            "end": 165,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_46@1",
            "content": "In Table 6, we compare MedLAMA with LAMA (Petroni et al., 2019) and BioLAMA in terms of data statistics.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_46",
            "start": 167,
            "end": 270,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_46@2",
            "content": "We found that there is only 1 overlapped relation (i.e., may treat) between BioLAMA and MedLAMA, and no overlap exists on the queries.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_46",
            "start": 272,
            "end": 405,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_46@3",
            "content": "We can see that, without additional training data from the biomedical knowledge facts, Contrastive-Probe reaches a promising performance compared with OptiPrompt approach, which needs further training data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_46",
            "start": 407,
            "end": 612,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_46@4",
            "content": "Additionally, since Mask Predict and OptiPrompt require using the MLM head, it is impossible to compare a model without MLM head being released (e.g. PubMedBERT).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_46",
            "start": 614,
            "end": 775,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_46@5",
            "content": "In contrast, our Contrastive-Probe not only provides a good indicator of comparing these models in terms of their captured knowledge, but also makes layerwise knowledge probing possible.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_46",
            "start": 777,
            "end": 962,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_47@0",
            "content": "Limitations of Contrastive-Probe",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_47",
            "start": 0,
            "end": 31,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_48@0",
            "content": "How to early stop? For fair comparison of different PLMs, we currently use checkpoints after contrastive tuning for a fixed number of steps (200, specifically).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_48",
            "start": 0,
            "end": 159,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_48@1",
            "content": "However, we have noticed that different models and different probing datasets have different optimal training steps.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_48",
            "start": 161,
            "end": 276,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_48@2",
            "content": "To truly 'rewire' the most knowledge out of each PLMs, we need a unified validation set for checkpoint selection.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_48",
            "start": 278,
            "end": 390,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_48@3",
            "content": "What the validation set should be and how to guarantee its fairness require further investigation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_48",
            "start": 392,
            "end": 489,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_49@0",
            "content": "Performance not very stable.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_49",
            "start": 0,
            "end": 27,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_49@1",
            "content": "We have noticed that using different contrastive tuning corpus as well as different random seeds can lead to a certain variance of their probing performances (see Table 5).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_49",
            "start": 29,
            "end": 200,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_49@2",
            "content": "To mitigate such issue, we use average perfor-Probe Model CTD wikidata UMLS acc@1 acc@5 acc@1 acc@5 acc@1 acc@5 mance of 10 runs on 10 randomly sampled corpus.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_49",
            "start": 202,
            "end": 360,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_50@0",
            "content": "Improving the stability of Contrastive-Probe and investigating its nature is a future challenge.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_50",
            "start": 0,
            "end": 95,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_51@0",
            "content": "Related Work and Discussion",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_51",
            "start": 0,
            "end": 26,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_52@0",
            "content": "Knowledge Probing Benchmarks for PLMs.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_52",
            "start": 0,
            "end": 37,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_53@0",
            "content": "LAMA (Petroni et al., 2019), which starts this line of work, is a collection of single-token knowledge triples extracted from sources including Wikidata and ConceptNet (Speer et al., 2017).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_53",
            "start": 0,
            "end": 188,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_53@1",
            "content": "To mitigate the problem of information leakage from the head entity, Poerner et al. (2019) propose LAMA-UHN, which is a hard subset of LAMA that has less token overlaps in head and tail entities.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_53",
            "start": 190,
            "end": 384,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_53@2",
            "content": "X-FACTR (Jiang et al., 2020a)",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_53",
            "start": 386,
            "end": 414,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_54@0",
            "content": "Conclusion",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_54",
            "start": 0,
            "end": 9,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_55@0",
            "content": "In this work, we created a carefully curated biomedical probing benchmark, MedLAMA, from the UMLS knowledge graph.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_55",
            "start": 0,
            "end": 113,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_55@1",
            "content": "We illustrated that state-of-the-art probing techniques and biomedical pre-trained languages models (PLMs) struggle to cope with the challenging nature (e.g. multitoken answers) of this specialised domain, reaching only an underwhelming 3% of acc@10.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_55",
            "start": 115,
            "end": 364,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_55@2",
            "content": "To reduce the gap, we further proposed a novel contrastive recipe which rewires the underlying PLMs without using any probing-specific data and illustrated that with a lightweight pre-training their accuracies could be pushed to 24%.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_55",
            "start": 366,
            "end": 598,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_56@0",
            "content": "Our experiments also revealed that different layers of transformers encode different types of information, reflected by their individual success at handling certain types of prompts.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_56",
            "start": 0,
            "end": 181,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_56@1",
            "content": "Additionally, using a human expert, we showed that the existing evaluation criteria could overpenalise the models as many valid responses that PLMs produce are not in the ground truth UMLS knowledge graph.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_56",
            "start": 183,
            "end": 387,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_56@2",
            "content": "This further highlights the importance of having a human in the loop to better understand the potentials and limitations of PLMs in encoding domain specific factual knowledge.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_56",
            "start": 389,
            "end": 563,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_57@0",
            "content": "Our findings indicate that the real lower bound on the amount of factual knowledge encoded by PLMs is higher than we estimated, since such bound can be continuously improved by optimising both the encoding space (e.g. using our selfsupervised contrastive learning technique) and the input space (e.g. using the prompt optimising techniques (Shin et al., 2020a;Qin and Eisner, 2021)).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_57",
            "start": 0,
            "end": 382,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_57@1",
            "content": "We leave further exploration of integrating the two possibilities to future work.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_57",
            "start": 384,
            "end": 464,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_58@0",
            "content": "In this paper, we use two automatic metrics to distinguish hard and easy queries.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_58",
            "start": 0,
            "end": 80,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_58@1",
            "content": "In particular, we first filter out easy queries by an exact matching metric (i.e. the exactly matching all the words of answer from queries).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_58",
            "start": 82,
            "end": 222,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_58@2",
            "content": "Since our MedLAMA contains multiple answers for queries, we use a threshold on the average exact matching score, i.e. avg-match>0.1, to filter out easy examples, where avg-match is calculated by: avg-match = Count(matched answers) Count(total answers) .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_58",
            "start": 224,
            "end": 476,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_59@0",
            "content": "This metric can remove all the queries that match the whole string of answers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_59",
            "start": 0,
            "end": 77,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_59@1",
            "content": "However, some common sub-strings between queries and answers also prone to reveal answers, particularly benefiting those retrieval-based probing approaches.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_59",
            "start": 79,
            "end": 234,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_59@2",
            "content": "E.g. <Magnesium Chloride, may-prevent, Magnesium Deficiency>. Therefore, we further calculate the ROUGE-L score (Lin and Och, 2004) for all the queries by regarding <query, answers> pairs as the <hypothesis, reference> pairs, and further filter out the ROUGE-L>0.1 queries.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_59",
            "start": 236,
            "end": 508,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_60@0",
            "content": "We train our Contrastive-Probe based on 10k sentences which are randomly sampled from the original pre-training corpora of the corresponding PLMs.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_60",
            "start": 0,
            "end": 145,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_60@1",
            "content": "Since most of the biomedical BERTs use PubMed texts as their pre-training corpora, for all biomedical PLMs we sampled random sentences from a version of PubMed corpus used by BlueBERT model (Peng et al., 2019), while for BERT we sampled sentences from its original Wikitext corpora.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_60",
            "start": 147,
            "end": 428,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_60@2",
            "content": "For the hyperparamters of our Contrastive-Probe, Table 8 lists our search options and the best parameters used in our paper.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_60",
            "start": 430,
            "end": 553,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_61@0",
            "content": "To further investigate the impact of the mask ratio to the probing performance, we also test our Contrastive-Probe based on PubMedBERT over different mask ratios ({0.1, 0.2, 0.3, 0.4, 0.5}) under the 10 random sentence sets, the result of which is shown in Figure 9.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_61",
            "start": 0,
            "end": 265,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_61@1",
            "content": "We can see that over different mask ratios the Contrastive-Probe always reaches their best performance under certain pre-training steps.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_61",
            "start": 267,
            "end": 402,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_61@2",
            "content": "And the performance curves of mask ratios are different over the full and hard sets, but they all achieves a generally good performance when the mask ratio is 0.5, which validates that different mask ratios favour different types queries.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_61",
            "start": 404,
            "end": 641,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_62@0",
            "content": "Emily Alsentzer, John Murphy, William Boag, Wei-Hung Weng, Di Jindi, Tristan Naumann, Matthew Mcdermott, Publicly available clinical bert embeddings, 2019, NAACL HLT, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_62",
            "start": 0,
            "end": 167,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_63@0",
            "content": "Iz Beltagy, Kyle Lo, Arman Cohan, SciB-ERT: A pretrained language model for scientific text, 2019, EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_63",
            "start": 0,
            "end": 106,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_64@0",
            "content": "Olivier Bodenreider, The unified medical language system (umls): integrating biomedical terminology, 2004, Nucleic acids research, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_64",
            "start": 0,
            "end": 131,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_65@0",
            "content": "Benjamin Tom B Brown, Nick Mann, Melanie Ryder, Jared Subbiah, Prafulla Kaplan, Arvind Dhariwal, Pranav Neelakantan, Girish Shyam, Amanda Sastry,  Askell, Language models are few-shot learners, 2020, EACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_65",
            "start": 0,
            "end": 206,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_66@0",
            "content": "Boxi Cao, Hongyu Lin, Xianpei Han, Le Sun, Lingyong Yan, Meng Liao, Tong Xue, Jin Xu, Knowledgeable or educated guess? revisiting language models as knowledge bases, 2021, ACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_66",
            "start": 0,
            "end": 177,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_67@0",
            "content": "UNKNOWN, None, 2021, Autoregressive entity retrieval, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_67",
            "start": 0,
            "end": 54,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_68@0",
            "content": "Jacob Devlin, Ming-Wei Chang, Kenton Lee, Kristina Toutanova, BERT: Pre-training of deep bidirectional transformers for language understanding, 2019, NAACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_68",
            "start": 0,
            "end": 157,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_69@0",
            "content": "Philipp Dufter, Nora Kassner, Hinrich Sch\u00fctze, Static embeddings as efficient knowledge bases, 2021, NAACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_69",
            "start": 0,
            "end": 108,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_70@0",
            "content": "Leandra Fichtel, Jan-Christoph Kalo, Wolf-Tilo Balke, Prompt tuning or fine-tuninginvestigating relational knowledge in pre-trained language models, 2021, AKBC, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_70",
            "start": 0,
            "end": 161,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_71@0",
            "content": "Tianyu Gao, Adam Fisch, Danqi Chen, Making pre-trained language models better few-shot learners, 2020, ACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_71",
            "start": 0,
            "end": 108,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_72@0",
            "content": "Marjan Ghazvininejad, Omer Levy, Yinhan Liu, Luke Zettlemoyer, Mask-predict: Parallel decoding of conditional masked language models, 2019, EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_72",
            "start": 0,
            "end": 147,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_73@0",
            "content": "Goran Glava\u0161, Ivan Vuli\u0107, Is supervised syntactic parsing beneficial for language understanding tasks? an empirical investigation, 2021, ACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_73",
            "start": 0,
            "end": 142,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_74@0",
            "content": "Yu Gu, Robert Tinn, Hao Cheng, Michael Lucas, Naoto Usuyama, Xiaodong Liu, Tristan Naumann, Jianfeng Gao, and Hoifung Poon. 2020. Domainspecific language model pretraining for biomedical natural language processing, , ACM Transactions on Computing for Healthcare, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_74",
            "start": 0,
            "end": 264,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_75@0",
            "content": "Zhengbao Jiang, Antonios Anastasopoulos, Haibo Ding, and Graham Neubig. 2020a. X-factr: Multilingual factual knowledge retrieval from pretrained language models, , EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_75",
            "start": 0,
            "end": 171,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_76@0",
            "content": "UNKNOWN, None, 2020, How can we know what language models know?, TACL.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_76",
            "start": 0,
            "end": 69,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_77@0",
            "content": "Nora Kassner, Philipp Dufter, Hinrich Sch\u00fctze, Multilingual lama: Investigating knowledge in multilingual pretrained language models, 2021, ACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_77",
            "start": 0,
            "end": 145,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_78@0",
            "content": "Jinhyuk Lee, Wonjin Yoon, Sungdong Kim, Donghyeon Kim, Sunkyu Kim, Chan Ho So, Jaewoo Kang, BioBERT: a pretrained biomedical language representation model for biomedical text mining, 2020, Bioinformatics, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_78",
            "start": 0,
            "end": 205,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_79@0",
            "content": "Mike Lewis, Yinhan Liu, Naman Goyal ; Abdelrahman Mohamed, Omer Levy, Veselin Stoyanov, Luke Zettlemoyer, BART: denoising sequence-to-sequence pretraining for natural language generation, translation, and comprehension, 2020, ACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_79",
            "start": 0,
            "end": 231,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_80@0",
            "content": "Chin-Yew Lin, Franz Josef Och, Automatic evaluation of machine translation quality using longest common subsequence and skip-bigram statistics, 2004, ACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_80",
            "start": 0,
            "end": 155,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_81@0",
            "content": "UNKNOWN, None, 2021, Selfalignment pre-training for biomedical entity representations, NAACL.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_81",
            "start": 0,
            "end": 92,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_82@0",
            "content": "Fangyu Liu, Ivan Vuli\u0107, Anna Korhonen, Nigel Collier, Fast, effective, and self-supervised: Transforming masked language models into universal lexical and sentence encoders, 2021, EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_82",
            "start": 0,
            "end": 187,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_83@0",
            "content": "Qianchu Liu, Fangyu Liu, Nigel Collier, Anna Korhonen, Ivan Vuli\u0107, Mirrorwic: On eliciting word-in-context representations from pretrained language models, 2021, CoNLL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_83",
            "start": 0,
            "end": 169,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_84@0",
            "content": "Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, Veselin Stoyanov, Roberta: A robustly optimized bert pretraining approach, 2020, ICLR, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_84",
            "start": 0,
            "end": 201,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_85@0",
            "content": "George Michalopoulos, Yuanxin Wang, Hussam Kaka, Helen Chen, Alexander Wong, Umlsbert: Clinical domain knowledge augmentation of contextual embeddings using the unified medical language system metathesaurus, 2021, NAACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_85",
            "start": 0,
            "end": 221,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_86@0",
            "content": "UNKNOWN, None, 2021, Scientific language models for biomedical knowledge base completion: An empirical study, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_86",
            "start": 0,
            "end": 110,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_87@0",
            "content": "UNKNOWN, None, 2018, Representation learning with contrastive predictive coding, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_87",
            "start": 0,
            "end": 81,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_88@0",
            "content": "Yifan Peng, Shankai Yan, Zhiyong Lu, Transfer learning in biomedical natural language processing: An evaluation of BERT and ELMo on ten benchmarking datasets, 2019, BioNLP Workshop, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_88",
            "start": 0,
            "end": 182,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_89@0",
            "content": "UNKNOWN, None, , , .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_89",
            "start": 0,
            "end": 19,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_90@0",
            "content": "Fabio Petroni, Tim Rockt\u00e4schel, Sebastian Riedel, Patrick Lewis, Anton Bakhtin, Yuxiang Wu, Alexander Miller, Language models as knowledge bases, 2019, EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_90",
            "start": 0,
            "end": 159,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_91@0",
            "content": "UNKNOWN, None, , Erol Bahadroglu, Alec Peltekian, and Gr\u00e9goire Altan-Bonnet. 2021. Scifive: a text-to-text transformer model for biomedical literature, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_91",
            "start": 0,
            "end": 152,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_92@0",
            "content": "UNKNOWN, None, 2019, E-bert: Efficient-yet-effective entity embeddings for bert, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_92",
            "start": 0,
            "end": 81,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_93@0",
            "content": "Nina Poerner, Ulli Waltinger, Hinrich Sch\u00fctze, E-bert: Efficient-yet-effective entity embeddings for bert, 2020, EMNLP: Findings, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_93",
            "start": 0,
            "end": 130,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_94@0",
            "content": "Guanghui Qin, Jason Eisner, Learning how to ask: Querying lms with mixtures of soft prompts, 2021, NAACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_94",
            "start": 0,
            "end": 106,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_95@0",
            "content": "Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, Peter Liu, Exploring the limits of transfer learning with a unified text-to-text transformer, 2020, J. Mach. Learn. Res, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_95",
            "start": 0,
            "end": 229,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_96@0",
            "content": "Taylor Shin, Yasaman Razeghi, I Robert L Logan, Eric Wallace, Sameer Singh, Autoprompt: Eliciting knowledge from language models with automatically generated prompts, 2020, EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_96",
            "start": 0,
            "end": 180,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_97@0",
            "content": "Taylor Shin, Yasaman Razeghi, I Robert L Logan, Eric Wallace, Sameer Singh, Eliciting knowledge from language models using automatically generated prompts, 2020, EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_97",
            "start": 0,
            "end": 169,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_98@0",
            "content": "Vered Shwartz, Rachel Rudinger, Oyvind Tafjord, you are grounded!\": Latent name artifacts in pre-trained language models, 2020, EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_98",
            "start": 0,
            "end": 135,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_99@0",
            "content": "Robyn Speer, Joshua Chin, Catherine Havasi, Conceptnet 5.5: An open multilingual graph of general knowledge, 2017, AAAI, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_99",
            "start": 0,
            "end": 121,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_100@0",
            "content": "UNKNOWN, None, 2022, A contrastive framework for neural text generation, CoRR.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_100",
            "start": 0,
            "end": 77,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_101@0",
            "content": "UNKNOWN, None, 2021, Tacl: Improving BERT pre-training with tokenaware contrastive learning, CoRR.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_101",
            "start": 0,
            "end": 97,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_102@0",
            "content": "Mujeen Sung, Jinhyuk Lee, Sean Yi, Minji Jeon, Sungdong Kim, Jaewoo Kang, Can language models be biomedical knowledge bases, 2021, EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_102",
            "start": 0,
            "end": 138,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_103@0",
            "content": "UNKNOWN, None, 2020, Coder: Knowledge infused cross-lingual medical term embedding for term normalization, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_103",
            "start": 0,
            "end": 107,
            "label": {}
        },
        {
            "ix": "59-ARR_v2_104@0",
            "content": "Zexuan Zhong, Dan Friedman, Danqi Chen, Factual probing is [mask]: Learning vs. learning to recall, 2021, NAACL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "59-ARR_v2_104",
            "start": 0,
            "end": 113,
            "label": {}
        }
    ],
    "edges": [
        {
            "src_ix": "59-ARR_v2_0",
            "tgt_ix": "59-ARR_v2_1",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_0",
            "tgt_ix": "59-ARR_v2_1",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_1",
            "tgt_ix": "59-ARR_v2_2",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_1",
            "tgt_ix": "59-ARR_v2_2",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_0",
            "tgt_ix": "59-ARR_v2_3",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_3",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_4",
            "tgt_ix": "59-ARR_v2_5",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_5",
            "tgt_ix": "59-ARR_v2_6",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_6",
            "tgt_ix": "59-ARR_v2_7",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_7",
            "tgt_ix": "59-ARR_v2_8",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_8",
            "tgt_ix": "59-ARR_v2_9",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_9",
            "tgt_ix": "59-ARR_v2_10",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_10",
            "tgt_ix": "59-ARR_v2_11",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_4",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_5",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_6",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_7",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_8",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_9",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_10",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_11",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_4",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_0",
            "tgt_ix": "59-ARR_v2_12",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_11",
            "tgt_ix": "59-ARR_v2_12",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_13",
            "tgt_ix": "59-ARR_v2_14",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_12",
            "tgt_ix": "59-ARR_v2_13",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_12",
            "tgt_ix": "59-ARR_v2_14",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_12",
            "tgt_ix": "59-ARR_v2_13",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_15",
            "tgt_ix": "59-ARR_v2_16",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_12",
            "tgt_ix": "59-ARR_v2_15",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_12",
            "tgt_ix": "59-ARR_v2_16",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_15",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_0",
            "tgt_ix": "59-ARR_v2_17",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_16",
            "tgt_ix": "59-ARR_v2_17",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_19",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_19",
            "tgt_ix": "59-ARR_v2_20",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_20",
            "tgt_ix": "59-ARR_v2_21",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_21",
            "tgt_ix": "59-ARR_v2_22",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_22",
            "tgt_ix": "59-ARR_v2_23",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_23",
            "tgt_ix": "59-ARR_v2_24",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_24",
            "tgt_ix": "59-ARR_v2_25",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_25",
            "tgt_ix": "59-ARR_v2_26",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_26",
            "tgt_ix": "59-ARR_v2_27",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_27",
            "tgt_ix": "59-ARR_v2_28",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_28",
            "tgt_ix": "59-ARR_v2_29",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_29",
            "tgt_ix": "59-ARR_v2_30",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_18",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_19",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_20",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_21",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_22",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_23",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_24",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_25",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_26",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_27",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_28",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_29",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_30",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_18",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_0",
            "tgt_ix": "59-ARR_v2_31",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_30",
            "tgt_ix": "59-ARR_v2_31",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_32",
            "tgt_ix": "59-ARR_v2_33",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_33",
            "tgt_ix": "59-ARR_v2_34",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_34",
            "tgt_ix": "59-ARR_v2_35",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_32",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_33",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_34",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_35",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_32",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_36",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_35",
            "tgt_ix": "59-ARR_v2_36",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_36",
            "tgt_ix": "59-ARR_v2_37",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_36",
            "tgt_ix": "59-ARR_v2_37",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_38",
            "tgt_ix": "59-ARR_v2_39",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_36",
            "tgt_ix": "59-ARR_v2_38",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_36",
            "tgt_ix": "59-ARR_v2_39",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_38",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_40",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_39",
            "tgt_ix": "59-ARR_v2_40",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_41",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_40",
            "tgt_ix": "59-ARR_v2_41",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_42",
            "tgt_ix": "59-ARR_v2_43",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_43",
            "tgt_ix": "59-ARR_v2_44",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_41",
            "tgt_ix": "59-ARR_v2_42",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_41",
            "tgt_ix": "59-ARR_v2_43",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_41",
            "tgt_ix": "59-ARR_v2_44",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_41",
            "tgt_ix": "59-ARR_v2_42",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_45",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_44",
            "tgt_ix": "59-ARR_v2_45",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_45",
            "tgt_ix": "59-ARR_v2_46",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_45",
            "tgt_ix": "59-ARR_v2_46",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_47",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_46",
            "tgt_ix": "59-ARR_v2_47",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_48",
            "tgt_ix": "59-ARR_v2_49",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_49",
            "tgt_ix": "59-ARR_v2_50",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_47",
            "tgt_ix": "59-ARR_v2_48",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_47",
            "tgt_ix": "59-ARR_v2_49",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_47",
            "tgt_ix": "59-ARR_v2_50",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_47",
            "tgt_ix": "59-ARR_v2_48",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_0",
            "tgt_ix": "59-ARR_v2_51",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_50",
            "tgt_ix": "59-ARR_v2_51",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_52",
            "tgt_ix": "59-ARR_v2_53",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_51",
            "tgt_ix": "59-ARR_v2_52",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_51",
            "tgt_ix": "59-ARR_v2_53",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_51",
            "tgt_ix": "59-ARR_v2_52",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_0",
            "tgt_ix": "59-ARR_v2_54",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_53",
            "tgt_ix": "59-ARR_v2_54",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_55",
            "tgt_ix": "59-ARR_v2_56",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_56",
            "tgt_ix": "59-ARR_v2_57",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_54",
            "tgt_ix": "59-ARR_v2_55",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_54",
            "tgt_ix": "59-ARR_v2_56",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_54",
            "tgt_ix": "59-ARR_v2_57",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_54",
            "tgt_ix": "59-ARR_v2_55",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_58",
            "tgt_ix": "59-ARR_v2_59",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_54",
            "tgt_ix": "59-ARR_v2_58",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_54",
            "tgt_ix": "59-ARR_v2_59",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_57",
            "tgt_ix": "59-ARR_v2_58",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_54",
            "tgt_ix": "59-ARR_v2_60",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_59",
            "tgt_ix": "59-ARR_v2_60",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_54",
            "tgt_ix": "59-ARR_v2_61",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_60",
            "tgt_ix": "59-ARR_v2_61",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "59-ARR_v2_0",
            "tgt_ix": "59-ARR_v2_0@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_1",
            "tgt_ix": "59-ARR_v2_1@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_2",
            "tgt_ix": "59-ARR_v2_2@9",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_3",
            "tgt_ix": "59-ARR_v2_3@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_4",
            "tgt_ix": "59-ARR_v2_4@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_4",
            "tgt_ix": "59-ARR_v2_4@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_5",
            "tgt_ix": "59-ARR_v2_5@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_5",
            "tgt_ix": "59-ARR_v2_5@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_5",
            "tgt_ix": "59-ARR_v2_5@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_5",
            "tgt_ix": "59-ARR_v2_5@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_6",
            "tgt_ix": "59-ARR_v2_6@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_6",
            "tgt_ix": "59-ARR_v2_6@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_6",
            "tgt_ix": "59-ARR_v2_6@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_7",
            "tgt_ix": "59-ARR_v2_7@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_7",
            "tgt_ix": "59-ARR_v2_7@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_7",
            "tgt_ix": "59-ARR_v2_7@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_7",
            "tgt_ix": "59-ARR_v2_7@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_8",
            "tgt_ix": "59-ARR_v2_8@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_8",
            "tgt_ix": "59-ARR_v2_8@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_9",
            "tgt_ix": "59-ARR_v2_9@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_9",
            "tgt_ix": "59-ARR_v2_9@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_9",
            "tgt_ix": "59-ARR_v2_9@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_9",
            "tgt_ix": "59-ARR_v2_9@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_9",
            "tgt_ix": "59-ARR_v2_9@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_10",
            "tgt_ix": "59-ARR_v2_10@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_10",
            "tgt_ix": "59-ARR_v2_10@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_10",
            "tgt_ix": "59-ARR_v2_10@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_11",
            "tgt_ix": "59-ARR_v2_11@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_11",
            "tgt_ix": "59-ARR_v2_11@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_12",
            "tgt_ix": "59-ARR_v2_12@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_13",
            "tgt_ix": "59-ARR_v2_13@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_13",
            "tgt_ix": "59-ARR_v2_13@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_14",
            "tgt_ix": "59-ARR_v2_14@9",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_15",
            "tgt_ix": "59-ARR_v2_15@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_15",
            "tgt_ix": "59-ARR_v2_15@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_15",
            "tgt_ix": "59-ARR_v2_15@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_15",
            "tgt_ix": "59-ARR_v2_15@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_15",
            "tgt_ix": "59-ARR_v2_15@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_15",
            "tgt_ix": "59-ARR_v2_15@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_15",
            "tgt_ix": "59-ARR_v2_15@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_16",
            "tgt_ix": "59-ARR_v2_16@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_16",
            "tgt_ix": "59-ARR_v2_16@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_16",
            "tgt_ix": "59-ARR_v2_16@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_16",
            "tgt_ix": "59-ARR_v2_16@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_17",
            "tgt_ix": "59-ARR_v2_17@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@9",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@10",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_18",
            "tgt_ix": "59-ARR_v2_18@11",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_19",
            "tgt_ix": "59-ARR_v2_19@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_19",
            "tgt_ix": "59-ARR_v2_19@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_19",
            "tgt_ix": "59-ARR_v2_19@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_19",
            "tgt_ix": "59-ARR_v2_19@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_19",
            "tgt_ix": "59-ARR_v2_19@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_19",
            "tgt_ix": "59-ARR_v2_19@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_19",
            "tgt_ix": "59-ARR_v2_19@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_20",
            "tgt_ix": "59-ARR_v2_20@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_20",
            "tgt_ix": "59-ARR_v2_20@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_20",
            "tgt_ix": "59-ARR_v2_20@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_20",
            "tgt_ix": "59-ARR_v2_20@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_20",
            "tgt_ix": "59-ARR_v2_20@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_20",
            "tgt_ix": "59-ARR_v2_20@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_21",
            "tgt_ix": "59-ARR_v2_21@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_21",
            "tgt_ix": "59-ARR_v2_21@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_21",
            "tgt_ix": "59-ARR_v2_21@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_22",
            "tgt_ix": "59-ARR_v2_22@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_23",
            "tgt_ix": "59-ARR_v2_23@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_23",
            "tgt_ix": "59-ARR_v2_23@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_24",
            "tgt_ix": "59-ARR_v2_24@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_24",
            "tgt_ix": "59-ARR_v2_24@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_24",
            "tgt_ix": "59-ARR_v2_24@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_24",
            "tgt_ix": "59-ARR_v2_24@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_25",
            "tgt_ix": "59-ARR_v2_25@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_26",
            "tgt_ix": "59-ARR_v2_26@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_27",
            "tgt_ix": "59-ARR_v2_27@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_27",
            "tgt_ix": "59-ARR_v2_27@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_27",
            "tgt_ix": "59-ARR_v2_27@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_28",
            "tgt_ix": "59-ARR_v2_28@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_29",
            "tgt_ix": "59-ARR_v2_29@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_29",
            "tgt_ix": "59-ARR_v2_29@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_30",
            "tgt_ix": "59-ARR_v2_30@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_30",
            "tgt_ix": "59-ARR_v2_30@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_31",
            "tgt_ix": "59-ARR_v2_31@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_32",
            "tgt_ix": "59-ARR_v2_32@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_32",
            "tgt_ix": "59-ARR_v2_32@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_33",
            "tgt_ix": "59-ARR_v2_33@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_33",
            "tgt_ix": "59-ARR_v2_33@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_34",
            "tgt_ix": "59-ARR_v2_34@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_35",
            "tgt_ix": "59-ARR_v2_35@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_35",
            "tgt_ix": "59-ARR_v2_35@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_35",
            "tgt_ix": "59-ARR_v2_35@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_35",
            "tgt_ix": "59-ARR_v2_35@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_35",
            "tgt_ix": "59-ARR_v2_35@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_35",
            "tgt_ix": "59-ARR_v2_35@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_36",
            "tgt_ix": "59-ARR_v2_36@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@9",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@10",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@11",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@12",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@13",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_37",
            "tgt_ix": "59-ARR_v2_37@14",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_38",
            "tgt_ix": "59-ARR_v2_38@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_39",
            "tgt_ix": "59-ARR_v2_39@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_39",
            "tgt_ix": "59-ARR_v2_39@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_39",
            "tgt_ix": "59-ARR_v2_39@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_39",
            "tgt_ix": "59-ARR_v2_39@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_39",
            "tgt_ix": "59-ARR_v2_39@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_39",
            "tgt_ix": "59-ARR_v2_39@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_39",
            "tgt_ix": "59-ARR_v2_39@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_39",
            "tgt_ix": "59-ARR_v2_39@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_40",
            "tgt_ix": "59-ARR_v2_40@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_41",
            "tgt_ix": "59-ARR_v2_41@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_42",
            "tgt_ix": "59-ARR_v2_42@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_42",
            "tgt_ix": "59-ARR_v2_42@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_42",
            "tgt_ix": "59-ARR_v2_42@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_42",
            "tgt_ix": "59-ARR_v2_42@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_43",
            "tgt_ix": "59-ARR_v2_43@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_44",
            "tgt_ix": "59-ARR_v2_44@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_45",
            "tgt_ix": "59-ARR_v2_45@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_46",
            "tgt_ix": "59-ARR_v2_46@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_46",
            "tgt_ix": "59-ARR_v2_46@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_46",
            "tgt_ix": "59-ARR_v2_46@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_46",
            "tgt_ix": "59-ARR_v2_46@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_46",
            "tgt_ix": "59-ARR_v2_46@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_46",
            "tgt_ix": "59-ARR_v2_46@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_47",
            "tgt_ix": "59-ARR_v2_47@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_48",
            "tgt_ix": "59-ARR_v2_48@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_48",
            "tgt_ix": "59-ARR_v2_48@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_48",
            "tgt_ix": "59-ARR_v2_48@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_48",
            "tgt_ix": "59-ARR_v2_48@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_49",
            "tgt_ix": "59-ARR_v2_49@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_49",
            "tgt_ix": "59-ARR_v2_49@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_49",
            "tgt_ix": "59-ARR_v2_49@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_50",
            "tgt_ix": "59-ARR_v2_50@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_51",
            "tgt_ix": "59-ARR_v2_51@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_52",
            "tgt_ix": "59-ARR_v2_52@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_53",
            "tgt_ix": "59-ARR_v2_53@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_53",
            "tgt_ix": "59-ARR_v2_53@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_53",
            "tgt_ix": "59-ARR_v2_53@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_54",
            "tgt_ix": "59-ARR_v2_54@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_55",
            "tgt_ix": "59-ARR_v2_55@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_55",
            "tgt_ix": "59-ARR_v2_55@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_55",
            "tgt_ix": "59-ARR_v2_55@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_56",
            "tgt_ix": "59-ARR_v2_56@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_56",
            "tgt_ix": "59-ARR_v2_56@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_56",
            "tgt_ix": "59-ARR_v2_56@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_57",
            "tgt_ix": "59-ARR_v2_57@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_57",
            "tgt_ix": "59-ARR_v2_57@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_58",
            "tgt_ix": "59-ARR_v2_58@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_58",
            "tgt_ix": "59-ARR_v2_58@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_58",
            "tgt_ix": "59-ARR_v2_58@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_59",
            "tgt_ix": "59-ARR_v2_59@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_59",
            "tgt_ix": "59-ARR_v2_59@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_59",
            "tgt_ix": "59-ARR_v2_59@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_60",
            "tgt_ix": "59-ARR_v2_60@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_60",
            "tgt_ix": "59-ARR_v2_60@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_60",
            "tgt_ix": "59-ARR_v2_60@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_61",
            "tgt_ix": "59-ARR_v2_61@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_61",
            "tgt_ix": "59-ARR_v2_61@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_61",
            "tgt_ix": "59-ARR_v2_61@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_62",
            "tgt_ix": "59-ARR_v2_62@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_63",
            "tgt_ix": "59-ARR_v2_63@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_64",
            "tgt_ix": "59-ARR_v2_64@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_65",
            "tgt_ix": "59-ARR_v2_65@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_66",
            "tgt_ix": "59-ARR_v2_66@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_67",
            "tgt_ix": "59-ARR_v2_67@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_68",
            "tgt_ix": "59-ARR_v2_68@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_69",
            "tgt_ix": "59-ARR_v2_69@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_70",
            "tgt_ix": "59-ARR_v2_70@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_71",
            "tgt_ix": "59-ARR_v2_71@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_72",
            "tgt_ix": "59-ARR_v2_72@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_73",
            "tgt_ix": "59-ARR_v2_73@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_74",
            "tgt_ix": "59-ARR_v2_74@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_75",
            "tgt_ix": "59-ARR_v2_75@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_76",
            "tgt_ix": "59-ARR_v2_76@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_77",
            "tgt_ix": "59-ARR_v2_77@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_78",
            "tgt_ix": "59-ARR_v2_78@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_79",
            "tgt_ix": "59-ARR_v2_79@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_80",
            "tgt_ix": "59-ARR_v2_80@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_81",
            "tgt_ix": "59-ARR_v2_81@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_82",
            "tgt_ix": "59-ARR_v2_82@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_83",
            "tgt_ix": "59-ARR_v2_83@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_84",
            "tgt_ix": "59-ARR_v2_84@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_85",
            "tgt_ix": "59-ARR_v2_85@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_86",
            "tgt_ix": "59-ARR_v2_86@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_87",
            "tgt_ix": "59-ARR_v2_87@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_88",
            "tgt_ix": "59-ARR_v2_88@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_89",
            "tgt_ix": "59-ARR_v2_89@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_90",
            "tgt_ix": "59-ARR_v2_90@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_91",
            "tgt_ix": "59-ARR_v2_91@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_92",
            "tgt_ix": "59-ARR_v2_92@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_93",
            "tgt_ix": "59-ARR_v2_93@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_94",
            "tgt_ix": "59-ARR_v2_94@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_95",
            "tgt_ix": "59-ARR_v2_95@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_96",
            "tgt_ix": "59-ARR_v2_96@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_97",
            "tgt_ix": "59-ARR_v2_97@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_98",
            "tgt_ix": "59-ARR_v2_98@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_99",
            "tgt_ix": "59-ARR_v2_99@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_100",
            "tgt_ix": "59-ARR_v2_100@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_101",
            "tgt_ix": "59-ARR_v2_101@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_102",
            "tgt_ix": "59-ARR_v2_102@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_103",
            "tgt_ix": "59-ARR_v2_103@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "59-ARR_v2_104",
            "tgt_ix": "59-ARR_v2_104@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        }
    ],
    "prefix": "paper.tei",
    "meta": {
        "ix_counter": 736,
        "sentence_split_type": "HybridSplitterLessAndLong",
        "sentence_split_model": "HybridSplitterLessAndLong_SciSpacy+Spacy",
        "doc_id": "59-ARR",
        "version": 2
    }
}