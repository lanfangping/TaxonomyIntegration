{
    "nodes": [
        {
            "ix": "23-ARR_v1_review2_0",
            "content": "23-ARR_v1_review2",
            "ntype": "article-title",
            "meta": null
        },
        {
            "ix": "23-ARR_v1_review2_1",
            "content": "paper_summary. Paper deals with a particular problem in designing parser for Text-to-SQL, i.e., mapping phrases in the input question to composite operations over table columns. Paper hypothesize that problem of column operations is challenging for SOTA Text-to-SQL parsers. To verify the hypothesis paper proposes two benchmark datasets: 1) a synthetic dataset, 2)  a different train/test partitioning of the existing SQUALL dataset. The paper shows two SOTA parsers SEQ2SEQ (Shi et al. 2020) and SMBOP (Rubin and Berant2021), struggle on the proposed benchmarks. Paper design two modules: schema expansion and schema pruning which can be added to these SOTA parsers to handle the problem of column operations.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "23-ARR_v1_review2_2",
            "content": "summary_of_strengths. 1. Paper shows the weakness of two SOTA Text-to-SQL parsers in handling column operations by providing two benchmark datasets.\n2. Paper design two simple modules schema expansion and schema pruning which utilizes the domain knowledge about different column operations to improve the performance of SOTA Text-to-SQL parsers.\n3. Report 5.1% absolute performance improvement on new SQUALL data split using the domain knowledge.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "23-ARR_v1_review2_3",
            "content": "summary_of_weaknesses. 1. A critical weakness of the paper is the lack of novelty and incremental nature of work. The paper addresses a particular problem of column operations in designing semantic parsers for Text-to-SQL. They design a new dataset which is a different train/test split of an existing dataset SQUALL. The other synthetic benchmark paper proposed is based on a single question template, \"What was <column> in <year>?\".\n2. The paper assumes strong domain knowledge about the column types and assumes a domain developer first creates a set of templates based on column types. With the help of these column templates, I think many approaches (parsers) can easily solve the problem. For example, parsers utilizing the SQL grammar to generate the output SQL can use these templates to add new rules that can be used while generating the output. Few such works are 1. A Globally Normalized Neural Model for Semantic Parsing ACl 2021 2. TRANX: A Transition-based Neural Abstract Syntax Parser for Semantic Parsing and Code Generation EMNP 2018 3. GraPPa: Grammar-Augmented Pre-Training for Table Semantic Parsing, ICLR 2021.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "23-ARR_v1_review2_4",
            "content": "comments,_suggestions_and_typos. 1. It will good if the authors can learn the templates for schema expansion from source domain data. \n2. Compare the proposed approach with methods which uses domain knowledge in the form of grammar. Comparing with below methods will show generality of ideas proposed in the paper in a much better way.\n1. A Globally Normalized Neural Model for Semantic Parsing ACl 2021 2. TRANX: A Transition-based Neural Abstract Syntax Parser for Semantic Parsing and Code Generation EMNP 2018 3. GraPPa: Grammar-Augmented Pre-Training for Table Semantic Parsing, ICLR 2021.",
            "ntype": "p",
            "meta": null
        }
    ],
    "span_nodes": [
        {
            "ix": "23-ARR_v1_review2_0@0",
            "content": "23-ARR_v1_review2",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_0",
            "start": 0,
            "end": 16,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_1@0",
            "content": "paper_summary.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_1",
            "start": 0,
            "end": 13,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_1@1",
            "content": "Paper deals with a particular problem in designing parser for Text-to-SQL, i.e., mapping phrases in the input question to composite operations over table columns.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_1",
            "start": 15,
            "end": 176,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_1@2",
            "content": "Paper hypothesize that problem of column operations is challenging for SOTA Text-to-SQL parsers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_1",
            "start": 178,
            "end": 273,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_1@3",
            "content": "To verify the hypothesis paper proposes two benchmark datasets: 1) a synthetic dataset, 2)  a different train/test partitioning of the existing SQUALL dataset.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_1",
            "start": 275,
            "end": 433,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_1@4",
            "content": "The paper shows two SOTA parsers SEQ2SEQ (Shi et al. 2020) and SMBOP (Rubin and Berant2021), struggle on the proposed benchmarks.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_1",
            "start": 435,
            "end": 563,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_1@5",
            "content": "Paper design two modules: schema expansion and schema pruning which can be added to these SOTA parsers to handle the problem of column operations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_1",
            "start": 565,
            "end": 710,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_2@0",
            "content": "summary_of_strengths.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_2",
            "start": 0,
            "end": 20,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_2@1",
            "content": "1. Paper shows the weakness of two SOTA Text-to-SQL parsers in handling column operations by providing two benchmark datasets.\n",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_2",
            "start": 22,
            "end": 148,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_2@2",
            "content": "2. Paper design two simple modules schema expansion and schema pruning which utilizes the domain knowledge about different column operations to improve the performance of SOTA Text-to-SQL parsers.\n",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_2",
            "start": 149,
            "end": 345,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_2@3",
            "content": "3. Report 5.1% absolute performance improvement on new SQUALL data split using the domain knowledge.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_2",
            "start": 346,
            "end": 445,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_3@0",
            "content": "summary_of_weaknesses.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_3",
            "start": 0,
            "end": 21,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_3@1",
            "content": "1. A critical weakness of the paper is the lack of novelty and incremental nature of work.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_3",
            "start": 23,
            "end": 112,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_3@2",
            "content": "The paper addresses a particular problem of column operations in designing semantic parsers for Text-to-SQL.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_3",
            "start": 114,
            "end": 221,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_3@3",
            "content": "They design a new dataset which is a different train/test split of an existing dataset SQUALL.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_3",
            "start": 223,
            "end": 316,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_3@4",
            "content": "The other synthetic benchmark paper proposed is based on a single question template, \"What was <column> in <year>?\".\n",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_3",
            "start": 318,
            "end": 434,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_3@5",
            "content": "2. The paper assumes strong domain knowledge about the column types and assumes a domain developer first creates a set of templates based on column types.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_3",
            "start": 435,
            "end": 588,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_3@6",
            "content": "With the help of these column templates, I think many approaches (parsers) can easily solve the problem.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_3",
            "start": 590,
            "end": 693,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_3@7",
            "content": "For example, parsers utilizing the SQL grammar to generate the output SQL can use these templates to add new rules that can be used while generating the output.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_3",
            "start": 695,
            "end": 854,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_3@8",
            "content": "Few such works are 1. A Globally Normalized Neural Model for Semantic Parsing ACl 2021 2. TRANX: A Transition-based Neural Abstract Syntax Parser for Semantic Parsing and Code Generation EMNP 2018 3. GraPPa: Grammar-Augmented Pre-Training for Table Semantic Parsing, ICLR 2021.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_3",
            "start": 856,
            "end": 1132,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_4@0",
            "content": "comments,_suggestions_and_typos.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_4",
            "start": 0,
            "end": 31,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_4@1",
            "content": "1. It will good if the authors can learn the templates for schema expansion from source domain data. \n",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_4",
            "start": 33,
            "end": 134,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_4@2",
            "content": "2. Compare the proposed approach with methods which uses domain knowledge in the form of grammar.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_4",
            "start": 135,
            "end": 231,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_4@3",
            "content": "Comparing with below methods will show generality of ideas proposed in the paper in a much better way.\n",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_4",
            "start": 233,
            "end": 335,
            "label": {}
        },
        {
            "ix": "23-ARR_v1_review2_4@4",
            "content": "1. A Globally Normalized Neural Model for Semantic Parsing ACl 2021 2. TRANX: A Transition-based Neural Abstract Syntax Parser for Semantic Parsing and Code Generation EMNP 2018 3. GraPPa: Grammar-Augmented Pre-Training for Table Semantic Parsing, ICLR 2021.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "23-ARR_v1_review2_4",
            "start": 336,
            "end": 593,
            "label": {}
        }
    ],
    "edges": [
        {
            "src_ix": "23-ARR_v1_review2_0",
            "tgt_ix": "23-ARR_v1_review2_1",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "23-ARR_v1_review2_0",
            "tgt_ix": "23-ARR_v1_review2_2",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "23-ARR_v1_review2_0",
            "tgt_ix": "23-ARR_v1_review2_3",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "23-ARR_v1_review2_0",
            "tgt_ix": "23-ARR_v1_review2_4",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "23-ARR_v1_review2_0",
            "tgt_ix": "23-ARR_v1_review2_1",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "23-ARR_v1_review2_1",
            "tgt_ix": "23-ARR_v1_review2_2",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "23-ARR_v1_review2_2",
            "tgt_ix": "23-ARR_v1_review2_3",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_4",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "23-ARR_v1_review2_0",
            "tgt_ix": "23-ARR_v1_review2_0@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_1",
            "tgt_ix": "23-ARR_v1_review2_1@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_1",
            "tgt_ix": "23-ARR_v1_review2_1@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_1",
            "tgt_ix": "23-ARR_v1_review2_1@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_1",
            "tgt_ix": "23-ARR_v1_review2_1@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_1",
            "tgt_ix": "23-ARR_v1_review2_1@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_1",
            "tgt_ix": "23-ARR_v1_review2_1@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_2",
            "tgt_ix": "23-ARR_v1_review2_2@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_2",
            "tgt_ix": "23-ARR_v1_review2_2@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_2",
            "tgt_ix": "23-ARR_v1_review2_2@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_2",
            "tgt_ix": "23-ARR_v1_review2_2@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_3@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_3@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_3@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_3@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_3@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_3@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_3@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_3@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_3",
            "tgt_ix": "23-ARR_v1_review2_3@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_4",
            "tgt_ix": "23-ARR_v1_review2_4@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_4",
            "tgt_ix": "23-ARR_v1_review2_4@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_4",
            "tgt_ix": "23-ARR_v1_review2_4@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_4",
            "tgt_ix": "23-ARR_v1_review2_4@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "23-ARR_v1_review2_4",
            "tgt_ix": "23-ARR_v1_review2_4@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        }
    ],
    "prefix": "23-ARR_v1_review2",
    "meta": {
        "ix_counter": 29,
        "sentence_split_type": "HybridSplitterLessAndLong",
        "sentence_split_model": "HybridSplitterLessAndLong_SciSpacy+Spacy"
    }
}