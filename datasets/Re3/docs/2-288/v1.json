{
    "nodes": [
        {
            "ix": "2-288_v1_0",
            "content": "JSim, an open-source modeling system for data analysis",
            "ntype": "article-title",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_1",
            "content": "Abstract",
            "ntype": "abstract",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_2",
            "content": "JSim is a simulation system for developing models, designing experiments, and evaluating hypotheses on physiological and pharmacological systems through the testing of model solutions against data. It is designed for interactive, iterative manipulation of the model code, handling of multiple data sets and parameter sets, and for making comparisons among different models running simultaneously or separately. Interactive use is supported by a large collection of graphical user interfaces for model writing and compilation diagnostics, defining input functions, model runs, selection of algorithms solving ordinary and partial differential equations, run-time multidimensional graphics, parameter optimization (8 methods), sensitivity analysis, and Monte Carlo simulation for defining confidence ranges. JSim uses Mathematical Modeling Language (MML) a declarative syntax specifying algebraic and differential equations. Imperative constructs written in other languages (MATLAB, FORTRAN, C++, etc.) are accessed through procedure calls. MML syntax is simple, basically defining the parameters and variables, then writing the equations in a straightforward, easily read and understood mathematical form. This makes JSim good for teaching modeling as well as for model analysis for research. For high throughput applications, JSim can be run as a batch job. JSim can automatically translate models from the repositories for Systems Biology Markup Language (SBML) and CellML models. Stochastic modeling is supported. MML supports assigning physical units to constants and variables and automates checking dimensional balance as the first step in verification testing. Automatic unit scaling follows, e.g. seconds to minutes, if needed. The JSim Project File sets a standard for reproducible modeling analysis: it includes in one file everything for analyzing a set of experiments: the data, the models, the data fitting, and evaluation of parameter confidence ranges. JSim is open source; it and about 400 human readable open source physiological/biophysical models are available at http://www.physiome.org/jsim/.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_3",
            "content": "Introduction",
            "ntype": "title",
            "meta": {
                "section": "1",
                "sec-type": "intro",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_4",
            "content": "The modeling of biological processes starts with defining the hypothesis to be tested in an experiment. To make scientific progress, Platt ( Platt, 1964 ) emphasized defining at least two distinct hypotheses and then designing an experiment with the power to clearly distinguish between these hypotheses. By so doing, at least one of the hypotheses must then be rejected: the rejection marks a stepping-stone in science. If a hypothesis is not rejected then it remains as a potential working hypothesis, the target of further experimentation that eventually will lead to its rejection or improvement.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_5",
            "content": "The virtue of the mathematically-defined hypothesis is that it is clear and precise, and therefore susceptible to contradiction. Arguably, one should use mathematical \u201cin numero experimentation\u201d to define the critical laboratory experiment. Given that the experiment tests whether or not the working hypothesis is compatible with experimental data, then failure to fit leads to rejection. Revision of the conjecture follows: science is advanced.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_6",
            "content": "The hypothesis testing cycle is an iterative procedure: design hypothesis (and alternative hypotheses) \u2192 execute experiment \u2192 evaluate goodness of fit of model to data \u2192 either reject the hypothesis and restart, or, alternatively, \u2192 accept the model as the current working hypothesis and assess the parameters for the specific situation. The working model serves as the current belief until deeper thinking leads to an alternative hypothesis and one restarts the cycle. This philosophical and procedural point of view, more or less guaranteed to make efficient progress in the field, creates definable results step by step, and gives investigators a sense of satisfactory success.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_7",
            "content": "As in physics, models are posed in order to gain deeper understanding. Cause-and-effect models of biological systems are usually deterministic; they are fundamentally different from observationally-based probabilistic associations. The desire is to represent sequences of operations within a dynamic system leading to, and explaining, the observed data ( Coatrieux & Bassingthwaighte, 2006 ; Bassingthwaighte et al. , 2006a ). Standard statistical methods are not central to deciding whether or not to reject the hypothesis, but are indeed very helpful in assessing goodness of fit, estimating confidence ranges and co-variances among parameters, and in guiding the investigator in identifying errors or in finding ways to simplify the model.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_8",
            "content": "Over the years we have developed sets of tools to serve these processes. In this article we describe the features of a simulation analysis system, JSim; it is the product of evolutionary improvements in the hypothesis testing cycle. The central goals are to facilitate attempts to fit models to data, and to support the efficient development of computational models that describe and explain the behavior of biological systems ( Bassingthwaighte & Goresky, 1984 ; Bassingthwaighte et al. , 2005 ; Beard et al. , 2005 ).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_9",
            "content": "Our perspective is embedded in JSim: it is an open-source simulation analysis platform, freely downloadable, running on Linux, Macintosh, and Windows, providing tools for the steps in the modeling analysis of data. There is a naturally occurring sequence of steps to take when one starts with an unanalyzed data set and has the goal of modeling the cause and effect relationships. We have found it useful to follow a simplified summary: The THIRTEEN STEPS:",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_10",
            "content": "The THIRTEEN STEPS in the modeling process",
            "ntype": "title",
            "meta": {
                "section": "2",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_11",
            "content": "These are proposed as a guide. The ordering is not rigid, but it is wise to cover all of the steps in one\u2019s mind when starting and again when finishing up a study. Using the steps in the order listed here almost always works well.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_12",
            "content": "(1) When starting with existing experimental data, plot and display the data so that one can rapidly review and compare multiple data sets. This also prepares for comparing with later model results.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_13",
            "content": "(2) Develop the model, the mathematical formulation of the hypothesis. One may start with one or more existing models or modules of a similar nature (retrieved from a model repository or archival format) and modify it. Construct illustrations of model structure to aid the conceptual approach.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_14",
            "content": "(3) Verify unitary balance in the model equations, an easy first check for model self-consistency.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_15",
            "content": "(4) Select appropriate methods for solving model equations (e.g. differential equation solvers).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_16",
            "content": "(5) Display model solutions graphically and in text listings. Inspect.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_17",
            "content": "(6) Verify the mathematical accuracy of solutions. Check that results are not dependent on temporal or spatial step sizes, that mass or charge is appropriately conserved, and that limiting cases match analytical solutions.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_18",
            "content": "(7) Explore model behavior over wide ranges of parameter values in state-space. (We think of \u201cstate space\u201d as being the N-dimensional space enclosing the ranges of values of all of the parameters within which the model is correct numerically and sensible scientifically.)",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_19",
            "content": "(8) Perform sensitivity analyses, examining the fractional change in model solutions with fractional change in each parameter.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_20",
            "content": "(9) Adjust parameters to fit model solution to data, manually or using an optimizer. Start from different places in parameter space and vary the optimization method to test solution uniqueness.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_21",
            "content": "(10) Assess goodness of model fit to data. Plot residual differences to expose systematic biases.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_22",
            "content": "(11) Examine parameter correlations to identify highly correlated parameters and reduce the number of free parameters in optimizations. Reoptimize.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_23",
            "content": "(12) Evaluate parameter confidence ranges. The sensitivities at the \u201cbest fit\u201d, expressed as the local curvature of the optimization cost function give a practical estimate. This can be refined using a Monte Carlo evaluation of parameter likelihoods as probability density functions.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_24",
            "content": "(13) Preserve the source code, multiple data sets, multiple analyses and parameter sets, the settings (for initial and boundary conditions, parameter scans, displays, solver choices, optimizers, Monte Carlo, etc.), the graphs of results, the investigator\u2019s notes and descriptions of procedures, plots, etc., all in a single, reproducible, exportable package. Share this package openly with collaborators, reviewers, and the public, a moral and perhaps ethical requirement when the support comes from public funds.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_25",
            "content": "Interpretation of analyses",
            "ntype": "title",
            "meta": {
                "section": "2.1",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_26",
            "content": "What one wants primarily from modeling analysis is insight into mechanisms. JSim is efficient for model development and testing. The fitting of experimental data by model solutions does not provide proof that the model is correct. It says merely that the model can serve as a descriptor under limited range of circumstances, namely those examined in the experimentation. Validity is never provable. Likewise, causation may be identified, but deeper levels may exist to be revealed later.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_27",
            "content": "What does the model predict? Every model, with a little ingenuity, can be queried. What would be the responses to different inputs? How would the system respond if a component were missing or damaged? Predictions then form the basis for the design of the next experimental test. Correct predictions, failing to invalidate the model, do strengthen the confidence in the model but only to the degree commensurate with the comprehensiveness of the particular prediction.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_28",
            "content": "Background",
            "ntype": "title",
            "meta": {
                "section": "2.2",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_29",
            "content": "JSim is the latest in a series of modeling/data analysis programs dating back to SimCon ( Knopp et al. , 1970 ) (named for Simulation Control). SimCon provided a text and graphics interface to models written in Fortran. Between 1967 and 1993, the basic methods of data analysis (e.g. function generators, loops, sensitivity, optimization) were developed and refined within the SimCon framework. In 1993, SimCon was replaced by XSim ( King et al. , 1995 ), which implemented the same functionality under X-Windows on several Unix-like operating systems (SunOS, IRIX, Linux, AIX). XSim also added custom graphic model interfaces, on-demand expression graphing, worlds-within-worlds graphics ( Harris et al. , 1994 ), remote (client-server) computation and limited multi-processing. JSim development efforts began in 1999 and augmented the functionality developed in SimCon and XSim by adding simplified model specification (using the MML modeling language), facilities for data analysis and for distribution of results and of models (using project files), popular desktop and laptop support (Windows, Macintosh & Linux) and fully integrated multiprocessing for shared memory systems ( Raymond et al. , 2003 ).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_30",
            "content": "JSim overview",
            "ntype": "title",
            "meta": {
                "section": "2.3",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_31",
            "content": "JSim is quite general, and while designed for evaluating models against experimental data, it also serves pure model development quite well. It is built around a \u201cproject file\u201d (.proj), that may hold many data sets, several different models and the results of multiple types of analyses testing models against the data and against each other. JSim\u2019s handling of ODEs (ordinary differential equations) suits it for traditional compartmental modeling and SBML ( Hucka et al. , 2003 ), CellML ( Cuellar et al. , 2003 ), and pharmacokinetic (PK) models in general. Solving PDEs (partial differential equations) hugely expands the range of processes that can be modeled in physiology and clinical medicine ( Goresky, 1963 ; Bassingthwaighte, 1974 ), biophysics, and PKPD modeling ( Roberts & Rowland, 1986 ). JSim handles spatial diffusion ( Barta et al. , 2000 ; Safford & Bassingthwaighte, 1977 ) and convection-diffusion problems. From soon after its release in 1999, JSim provided automated unit consistency checking in all equations and also automated unit conversion (such as minutes to seconds) in calculations ( Chizeck et al. , 2009 ). This pair of features automates the first stage of verification of the model\u2019s mathematical implementation by making sure that every equation has unitary balance. Modeling taking account of the anatomical quantitative constraints is now recognized as critical and is facilitated by the automated unit checking ( Vinnakota & Bassingthwaighte, 2004 ). The second phase of compilation parses the details of the equations and sequences them for efficient computation. For an example, a cardiovascular-respiratory system model ( Neal & Bassingthwaighte, 2007 ), ran under JSim exactly 300 times faster than a Matlab-Simulink version of the identical model (Howard Chizeck/Stephen Hawley: personal communication).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_32",
            "content": "MML (Mathematical Modeling Language) is the declarative modeling language developed for JSim and used for composing models. Its archival version is XMML, in the XML style of SBML and CellML. In MML, one writes mathematical equations directly into the code, and the MML compiler handles converting the set of equations into a sequence of computations. Since the equation representation is closely related to the conceptual formulation of the model, MML models are easily understood, and pieces of the model are readily interpretable as particular processes. The fact that one can write several models into a single MML program allows one to compare competing hypotheses (models). Having a standard layout for graphs and for ASCII text output of model solutions is convenient. For special purposes, as for a model to be used in clinical practice or teaching, an alternative graphical user interface specifically designed for the model can be readily substituted for the default layout. If a particular model absolutely requires procedural code, this can be developed in C, or Fortran or Java, and invoked as part of the model computation.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_33",
            "content": "JSim problem domain",
            "ntype": "title",
            "meta": {
                "section": "2.4",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_34",
            "content": "JSim is a general purpose simulation and data analysis software system. It handles a wide range of mathematical problems including algebraic equations, ordinary differential equations, and parabolic, hyperbolic and elliptic partial differential equations. It contains 8 ODE and 3 PDE solvers implementing a variety of algorithms which allow the flexibility to strike a balance between accuracy and computational speed. It performs time series analyses including forward and backwards Fourier transforms. MML can handle multi-dimensional PDEs but the solvers currently implemented support only two dimensions (typically time and one spatial dimension). For two spatial dimensions the problem needs to be formulated into either ODE nodes or PDEs in one spatial dimension linked by ODEs in the other spatial dimension. JSim does not support complex numbers or matrix notation and associated matrix operators; in JSim all matrices must be written explicitly as a set of equations.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_35",
            "content": "JSim can be used in any discipline where mathematical equations are used for modeling and analyzing data. JSim was originally developed to model and analyze physiological phenomena and many of the built-in tools were developed to handle physiological problems. But all of the JSim tools can be applied to any other scientific discipline. JSim excels at analyzing time course and spatial domain data in complex systems ( Beard & Bassingthwaighte, 2000 ; Beard et al. , 2005 ; Bassingthwaighte et al. , 2006b ; Suenson et al. , 1974 ; Safford & Bassingthwaighte, 1977 ). Examples include modeling pharmacokinetic/dynamic (PK/PD), radiological (CT, PET, MRI) and multiple indicator dilution (MID) data.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_36",
            "content": "JSim\u2019s Mathematical Modeling Language, MML",
            "ntype": "title",
            "meta": {
                "section": "2.5",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_37",
            "content": "JSim uses the Mathematical Modeling Language (MML) to describe models. When JSim imports other model formats (e.g. SBML, CellML, Antimony), it translates them to MML. MML is a concise, ASCII text language for defining parameters and variables and for writing the equations describing a model. MML is a declarative language (as opposed to procedural or imperative languages such as MATLAB, Java, Python, and FORTRAN), meaning that, in MML, equations represent mathematical equality, rather than providing a directive to calculate the left-hand side variable from the expression on the right. In MML, it makes no difference if terms in an equation appear on the left or right hand side. Such equations are a direct representation of the mathematical ideas in a model rather than a procedural formulation. This improves readability and allows for more extensive consistency checks than procedural formulations. The MML compiler checks to ensure that all variables are completely, but not overly, specified \u2013 a check unavailable in procedural languages. The compiler sequences the calculations based on the dependencies of the variables to be computed, thus eliminating order-of-operations errors that are possible in procedural languages. MML variables are (optionally) labeled with physical units, enabling the compiler to reject equations with unitary imbalances; this also allows the automated insertion of appropriate unit conversion factors when needed ( Chizeck et al. , 2009 ) (e.g. mmHg to kPa). This relieves the modeler of the burden of adding unit conversion factors (another potential source of error) and aids readability, since equations need not be cluttered with conversion factors. MML\u2019s design supports the model development and unit balance aspects of modeling steps 2 and 3 above. An example of MML code is shown below as Box 1 , which codes a \u201cprogress curve\u201d, the concentration-time curves for hypoxanthine to xanthine to uric acid catalyzed by the enzyme xanthine oxidase through the two oxidation steps. MML code for partial differential equations is given in Box 2 .",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_38",
            "content": "Box 1.",
            "ntype": "label",
            "meta": {
                "id": "B1",
                "caption": "Model code for a reaction sequence (Model #320 at www.physiome.org ).",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_39",
            "content": "<boxed-text xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"B1\"> <caption> <title>Model code for a reaction sequence (Model #320 at <ext-link ext-link-type=\"uri\" xlink:href=\"http://www.physiome.org\">www.physiome.org</ext-link>).</title> </caption> <p>// Model Name: MM2irrev (From reference JBBass13, data of Escribano ( <xref ref-type=\"bibr\" rid=\"ref-28\">Escribano <italic>et al.</italic>, 1988</xref>))</p> <p>/* Brief Description: The &#8220;MM2irrev&#8221; program codes a sequential pair of irreversible Michaelis-Menten enzymatic reactions, Hx &#8594; Xa &#8594; Ua, wherein the one enzyme, xanthine oxidase, serves both steps. Hx and Xa compete for its active site. */</p> <p>import nsrunit; unit conversion on;</p> <p>math MM2irrev {</p> <p> realDomain t sec; t.min=0; t.max=5000.0; t.delta=1.00; // t is independent variable</p> <p>// PARAMETERS: (denoted param(t) if time-variable) (all changeable at run-time)</p> <p>&#160;&#160;&#160;&#160;&#160;real Vhmax = 1.84 uM/s; &#160;&#160;&#160;&#160;&#160;&#160;// Vmax for enzymatic conversion of Hx -&gt; Xa</p> <p>&#160;&#160;&#160;&#160;&#160;real Kmh = 3.67 uM; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Km for assumed instant binding of Hx to enzyme</p> <p>&#160;&#160;&#160;&#160;&#160;real Vxmax = 1.96 uM/s; &#160;&#160;&#160;&#160;&#160;// Vmax for Xa -&gt; Ua</p> <p>&#160;&#160;&#160;&#160;&#160;real Kmx = 5.94 uM; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Km for assumed instant binding of Xa to enzyme</p> <p>&#160;&#160;&#160;&#160;&#160;real Hzero = 46.3 uM, Xzero = 0 uM, Uzero = 0 uM; // initial conditions</p> <p>// VARIABLES (specified as functions of time by (t) appended in defining the name)</p> <p>&#160;&#160;&#160;&#160;&#160;real H(t) uM; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// concentration of Hx (HypoXanthine)</p> <p>&#160;&#160;&#160;&#160;&#160;real X(t) uM; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// concentration of Xa (Xanthine)</p> <p>&#160;&#160;&#160;&#160;&#160;real U(t) uM; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// concentration of Ua (Uric acid)</p> <p>// INITIAL CONDITIONS (t.min can differ from t = 0 sec.)</p> <p>&#160;&#160;&#160;&#160;&#160;when (t=t.min){ H= Hzero; X = Xzero; U = Uzero;}</p> <p>// SYSTEM OF EQUATIONS (3 ODEs) (Derivative dH/dt written as H:t)</p> <p>&#160;&#160;&#160;&#160;H:t = - (Vhmax*H/Kmh) / (1 + H/Kmh + X/Kmx);&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Hx&#8594;Xa</p> <p>&#160;&#160;&#160;&#160;X:t = ((Vhmax*H/Kmh) - (Vxmax*X/Kmx)) / (1 + H/Kmh + X/Kmx);&#160;&#160;&#160;&#160;// Xa&#8594;</p> <p>&#160;&#160;&#160;&#160;U:t = (Vxmax*X/Kmx) / (1 + H/Kmh + X/Kmx);&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#8594;Ua</p> <p>} // PROGRAM END</p> </boxed-text>",
            "ntype": "boxed-text",
            "meta": {
                "id": "B1",
                "caption": "Model code for a reaction sequence (Model #320 at www.physiome.org ).",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_40",
            "content": "Numeric solvers",
            "ntype": "title",
            "meta": {
                "section": "2.6",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_41",
            "content": "MML is designed without reference to the numerical algorithms that will be used for simulation. Rather, the user selects the numerical methods in the JSim run time user interface. At present JSim provides 8 algorithms for solving ODEs ( Table 1 ) and 3 for PDEs ( Table 2 ). Numerical methods for stochastic simulation are variants on the Gillespie algorithm ( Gillespie, 1977 ). JSim\u2019s solvers support modeling steps 4 to 6 above.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_42",
            "content": "Table 1.",
            "ntype": "label",
            "meta": {
                "id": "T1",
                "caption": "JSim ODE solvers.",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_43",
            "content": "<table-wrap xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"T1\" position=\"anchor\"> <caption> <title>JSim ODE solvers.</title> </caption> <table content-type=\"article-table\" frame=\"hsides\"> <tbody> <tr> <td>Auto</td> <td>Starts with Dopri5, if Dopri5 fails, switches to Radau</td> </tr> <tr> <td>Dopri5</td> <td>Dormand-Prince explicit Runge-Kutta method of <break/>order 5(4) for non-stiff equations ( <xref ref-type=\"bibr\" rid=\"ref-35\">Hairer <italic>et al.</italic>, 1993</xref>)</td> </tr> <tr> <td>Radau</td> <td>Implicit Runge-Kutta method (Radau IIA) of <break/>variable order (switches automatically between <break/>orders 5, 9, and 13) ( <xref ref-type=\"bibr\" rid=\"ref-36\">Hairer &amp; Wanner, 1996</xref>)</td> </tr> <tr> <td>KM</td> <td>Five stage, 4th order accurate Merson-modified <break/>Runge-Kutta method with adaptive steps ( <xref ref-type=\"bibr\" rid=\"ref-50\">Merson, 1957</xref>)</td> </tr> <tr> <td>Fehlberg</td> <td>Fifth order accurate Runge-Kutta-Fehlberg Method <break/>with adaptive stepsize, also known as RK45 <break/>( <xref ref-type=\"bibr\" rid=\"ref-30\">Fehlberg, 1969</xref>)</td> </tr> <tr> <td>Euler</td> <td>Explicit forward Euler Method, first order accurate <break/>( <xref ref-type=\"bibr\" rid=\"ref-29\">Euler, 1768&#8211;1770</xref>; <xref ref-type=\"bibr\" rid=\"ref-47\">LeVeque, 2007</xref>)</td> </tr> <tr> <td>RK2</td> <td>Two-stage explicit Runge-Kutta method, 2nd order <break/>accurate ( <xref ref-type=\"bibr\" rid=\"ref-47\">LeVeque, 2007</xref>) </td> </tr> <tr> <td>RK4</td> <td>Classical Runge-Kutta explicit 4th order four-stage <break/>method ( <xref ref-type=\"bibr\" rid=\"ref-47\">LeVeque, 2007</xref>)</td> </tr> <tr> <td>CVode</td> <td>CVODE, a publicly available stiff ODE solver ( <xref ref-type=\"bibr\" rid=\"ref-23\">Cohen</xref> <break/> <xref ref-type=\"bibr\" rid=\"ref-23\">&amp; Hindmarsh, 1995</xref>)</td> </tr> </tbody> </table> </table-wrap>",
            "ntype": "table-wrap",
            "meta": {
                "id": "T1",
                "caption": "JSim ODE solvers.",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_44",
            "content": "Table 2.",
            "ntype": "label",
            "meta": {
                "id": "T2",
                "caption": "JSim PDE solvers.",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_45",
            "content": "<table-wrap xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"T2\" position=\"anchor\"> <caption> <title>JSim PDE solvers.</title> </caption> <table content-type=\"article-table\" frame=\"hsides\"> <tbody> <tr> <td>LSFEA</td> <td>Lagrangian Sliding Fluid Element Algorithm <break/>( <xref ref-type=\"bibr\" rid=\"ref-4\">Bassingthwaighte, 1974</xref>; <xref ref-type=\"bibr\" rid=\"ref-8\">Bassingthwaighte <italic>et al.</italic> </xref>, <break/> <xref ref-type=\"bibr\" rid=\"ref-8\">1992</xref>; <xref ref-type=\"bibr\" rid=\"ref-55\">Poulain <italic>et al.</italic>, 1997</xref>). The convecting step is <break/>solved separately from the other processes</td> </tr> <tr> <td>MacCormack</td> <td>2nd order accurate finite difference method for <break/>solving hyperbolic differential equations <break/>( <xref ref-type=\"bibr\" rid=\"ref-49\">MacCormack, 1969</xref>)</td> </tr> <tr> <td>TOMS731</td> <td>Finite element discretization akin to a nonlinear <break/>Galerkin method 2nd order accurate in space <break/>( <xref ref-type=\"bibr\" rid=\"ref-19\">Blom &amp; Zegeling, 1994</xref>)</td> </tr> </tbody> </table> </table-wrap>",
            "ntype": "table-wrap",
            "meta": {
                "id": "T2",
                "caption": "JSim PDE solvers.",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_46",
            "content": "To solve differential equations one needs initial conditions, and JSim\u2019s parser (precompiler) demands these, as in Box 1 . Partial differential equations require also boundary conditions, as seen in the code for a two-region convection-diffusion-permeation-reaction model ( Box 2 ).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_47",
            "content": "Function generators",
            "ntype": "title",
            "meta": {
                "section": "2.7",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_48",
            "content": "Many physiological systems or components (e.g. one for the uptake of a metabolite) can be considered as operators. The operator takes an input function (e.g. inflowing solute concentration) and produces an output function (e.g. outflowing solute and metabolite concentrations). Model behavior can be tested by using various input waveforms (e.g. as in Box 2 \u201cextern real Cin(t)\u201d) described by JSim \u201cfunction generators\u201d. These might be time series signals of diverse form (pulses, pulse combinations, sines, shaped sawtooth), probability density functions (Gaussian, exponential, Poisson, lognormal, gamma variate, random walk, etc.), or come directly from experimental data. When the system is linear (output area equals input) and stationary (response same at another time), then the output is the convolution of the operator\u2019s transfer function (the response to an infinitely short pulse input) with the input function. Users select input functions at run time for testing numerical algorithms for correctness (verification testing), for model exploration (behavioral analysis) or for analyzing data as for steps 6 and 7 in our \u201c13-Step\u201d process.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_49",
            "content": "Model behavioral analysis and visualization",
            "ntype": "title",
            "meta": {
                "section": "2.8",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_50",
            "content": "We will use a simple convection-diffusion reaction model ( Bassingthwaighte, 1974 ; Bassingthwaighte & Goresky, 1984 ) to illustrate some facilities for visualizing model solutions and the effect of varying parameter values on them. The system is diagrammed in Figure 1 and the code is provided in Box 2 .",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_51",
            "content": "Figure 1.",
            "ntype": "label",
            "meta": {
                "id": "f1",
                "caption": "Capillary-tissue exchange unit. Fluid flows with velocity F cap *L/V cap along the capillary from the entrance at x = 0 to the exit at x = L, and exchanges across the capillary wall into a stagnant extravascular region with conductance PS, the permeability-surface area product. The input is a bolus of solute, C in (t), entering the capillary with the flow, F cap . Axial gradients along the capillary are diminished by diffusion, D p and D isf . Tissue consumption occurs at rate G isf *C isf . This is a simplified version of models used for indicator dilution studies and PET clinical studies ( Beard & Bassingthwaighte, 2000 ; Bassingthwaighte et al. , 1989 ; Bassingthwaighte et al. , 1992 ; Bassingthwaighte et al. , 2006b ).",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure1.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_52",
            "content": "<fig xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fig-type=\"figure\" id=\"f1\" position=\"float\"> <caption> <title>Capillary-tissue exchange unit.</title> <p>Fluid flows with velocity F <sub>cap</sub>*L/V <sub>cap</sub> along the capillary from the entrance at x = 0 to the exit at x = L, and exchanges across the capillary wall into a stagnant extravascular region with conductance PS, the permeability-surface area product. The input is a bolus of solute, C <sub>in</sub>(t), entering the capillary with the flow, F <sub>cap</sub>. Axial gradients along the capillary are diminished by diffusion, D <sub>p</sub> and D <sub>isf</sub>. Tissue consumption occurs at rate G <sub>isf</sub>*C <sub>isf</sub>. This is a simplified version of models used for indicator dilution studies and PET clinical studies ( <xref ref-type=\"bibr\" rid=\"ref-16\">Beard &amp; Bassingthwaighte, 2000</xref>; <xref ref-type=\"bibr\" rid=\"ref-7\">Bassingthwaighte <italic>et al.</italic>, 1989</xref>; <xref ref-type=\"bibr\" rid=\"ref-8\">Bassingthwaighte <italic>et al.</italic>, 1992</xref>; <xref ref-type=\"bibr\" rid=\"ref-12\">Bassingthwaighte <italic>et al.</italic>, 2006b</xref>).</p> </caption> <graphic xlink:href=\"https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure1.gif\"/> </fig>",
            "ntype": "fig",
            "meta": {
                "id": "f1",
                "caption": "Capillary-tissue exchange unit. Fluid flows with velocity F cap *L/V cap along the capillary from the entrance at x = 0 to the exit at x = L, and exchanges across the capillary wall into a stagnant extravascular region with conductance PS, the permeability-surface area product. The input is a bolus of solute, C in (t), entering the capillary with the flow, F cap . Axial gradients along the capillary are diminished by diffusion, D p and D isf . Tissue consumption occurs at rate G isf *C isf . This is a simplified version of models used for indicator dilution studies and PET clinical studies ( Beard & Bassingthwaighte, 2000 ; Bassingthwaighte et al. , 1989 ; Bassingthwaighte et al. , 1992 ; Bassingthwaighte et al. , 2006b ).",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure1.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_53",
            "content": "Box 2.",
            "ntype": "label",
            "meta": {
                "id": "B2",
                "caption": "Code for a 2-region Blood-Tissue Exchange Model.",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_54",
            "content": "<boxed-text xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"B2\"> <caption> <title>Code for a 2-region Blood-Tissue Exchange Model.</title> </caption> <p>// MODEL NUMBER: 0190 at <ext-link ext-link-type=\"uri\" xlink:href=\"http://www.physiome.org\">www.physiome.org</ext-link> ( <xref ref-type=\"bibr\" rid=\"ref-4\">Bassingthwaighte, 1974</xref>)</p> <p>// MODEL NAME: BTEX20simple</p> <p>// SHORT DESCRIPTION: Simple Model of an axially distributed two-region</p> <p>//&#160;&#160;capillary Blood-Tissue EXchange unit with consumption in interstitium</p> <p>import nsrunit; unit conversion on;</p> <p>math btex20simple {</p> <p>// &#160;INDEPENDENT VARIABLES:</p> <p>realDomain t sec ; t.min = 0; t.max = 30; t.delta = 0.1;</p> <p>realDomain x cm; real L= 0.1 cm, Ngrid = 31; x.min = 0; x.max = L; x.ct = Ngrid;</p> <p>//&#160;&#160; <bold>Parameters and Keys to Names:</bold> </p> <p>real Fcap&#160;&#160; = 1 ml/(g*min), &#160;&#160;// Capillary (cap) plasma flow</p> <p>&#160;&#160;&#160;Vcap&#160;&#160; = 0.05 ml/g, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Capillary Volume</p> <p>&#160;&#160;&#160;Visf &#160;&#160; = 0.15 ml/g, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Interstitial Fluid (isf) Volume</p> <p>&#160;&#160;&#160;PS&#160;&#160; = 1 ml/(g*min), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Permeability-surface area product: cap &lt;--&gt; isf</p> <p>&#160;&#160;&#160;Gisf &#160;&#160; = 0 ml/(g*min), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// consumption rate in isf region (Gulosity)</p> <p>&#160;&#160;&#160;Dcap&#160;&#160; = 1.0e-5 cm^2/sec, // cap axial diffusion coefficient</p> <p>&#160;&#160;&#160;Disf&#160;&#160; = 1.0e-6 cm^2/sec; // isf axial diffusion coefficient</p> <p>//&#160; <bold>Inflow Concentration, Input Function:</bold> </p> <p>extern real Cin(t) mM;</p> <p>//&#160; <bold>Concentration Variables:</bold> </p> <p>real Ccap(t,x) mM, &#160;&#160;&#160;&#160;&#160;&#160;// capillary concentration at position x</p> <p>&#160;&#160;&#160;&#160;&#160;Cisf(t,x) mM, &#160;&#160;&#160;&#160;&#160;// isf&#160;&#160;&#160;&#160;&#160;concentration at position x</p> <p>&#160;&#160;&#160;&#160;&#160;Cout(t) mM; &#160;&#160;&#160;&#160;&#160;// Outflow Concentration from capillary at x=L</p> <p>// <bold>Boundary Conditions:</bold> (Note total flux BC for inflowing region.)</p> <p>when (x=x.min) { (-Fcap*L/Vcap)*(Ccap-Cin)+Dcap*Ccap:x = 0; Cisf:x = 0; }</p> <p>when (x=x.max) { Ccap:x = 0; Cisf:x = 0; Cout = Ccap; } // reflecting boundary</p> <p>// <bold>Initial Conditions:</bold> </p> <p>when (t=t.min) { Ccap = 0; Cisf = 0; } // sets initial concentrations to zero</p> <p>// <bold>Partial Differential Equations:</bold> Ccap:t is dCcap/dt in JSim&#8217;s MML (ODE or PDE)</p> <p>&#160;&#160;&#160;Ccap:t = -Fcap*L*Ccap:x/Vcap + Dcap*Ccap:x:x + PS*(Cisf-Ccap)/Vcap; // dCcap/dt</p> <p>&#160;&#160;&#160;Cisf:t = -Gisf*Cisf/Visf&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;+ Disf*Cisf:x:x&#160;&#160;&#160;&#160;&#160;+ PS*(Ccap-Cisf)/Visf;&#160;&#160;// dCisf/dt</p> <p>}&#160;&#160;&#160; //program end</p> </boxed-text>",
            "ntype": "boxed-text",
            "meta": {
                "id": "B2",
                "caption": "Code for a 2-region Blood-Tissue Exchange Model.",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_55",
            "content": "Plot pages",
            "ntype": "title",
            "meta": {
                "section": "2.9",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_56",
            "content": "JSim provides several mechanisms for visualization, providing insight about model dynamics. The most basic are plot pages, each of which may contain line, scatter, contour and colormap plots. One may plot experimental data and model solutions (from one or more models), scaled automatically or manually, linear or logarithmic, plotted as they are being computed or displayed or edited later. Multiple plot page configurations are stored in each project, enabling reproducible analysis (e.g. all the data and graphs for a particular journal article). JSim plot pages support modeling steps 1, 5, 6, 7, 8 and 10 above (display of experimental data and model solutions, verify solution accuracy, explore model behavior, display of sensitivity curves and assessments of goodness of fit).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_57",
            "content": "LOOPS: Iterating solutions to exhibit behavior",
            "ntype": "title",
            "meta": {
                "section": "2.10",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_58",
            "content": "Model loops are a feature for behavioral analysis that plot data from a family of model runs using a user-chosen sequence of parameter values. For example, Figure 2 , \u201clooping over\u201d, i.e. making a sequence of changes in a parameter value for the membrane permeability in a tracer uptake model yields a family of plots showing how outflow tracer concentration curves would vary with varying permeability. The curves, of course, depend upon the settings for the other parameters of the model, so the looping sequence should be initiated under widely divergent conditions in order to understand the \u201cconditions\u201d (the regions of state space) where the chosen parameter may have little influence or maximum influence. JSim\u2019s loops facility support modeling steps 6 and 7 above (verify solution accuracy, explore model state space). A convenient feature of the LOOPS function is that the user can stop the solution, automatically starting the next one, whenever desired, speeding up the review of solutions. This is especially important in large models with long computation times.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_59",
            "content": "Figure 2.",
            "ntype": "label",
            "meta": {
                "id": "f2",
                "caption": "Using LOOPS to explore parameter influences. With the permeability surface area product (PS) = 0 (taller solid curve) the outflow concentration-time curve, C out , represents the response function via the vascular space alone. The mean transit time for this is V cap /F cap . With finite PS there is extraction of solute during transcapillary passage, shown by the successive diminutions of the heights of the initial peaks as PS increases. At low PSs the form of the outflow starts as a reduced version of the curve with PS = 0; in this state the flux into the tissue is purely \"barrier limited\". When PS is 4 or greater ml/(g*min), the sixth curve, the initial peak is no longer discernable; at yet higher PSs a second peak arises, and at PSs above 128 ml/(g*min) increasing the PS further has no effect on the shape of the outflow curve; in this state the exchange flux is purely \"flow-limited\", where changing the flow shifts C out , but changing PS does not.",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure2.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_60",
            "content": "<fig xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fig-type=\"figure\" id=\"f2\" position=\"float\"> <caption> <title>Using LOOPS to explore parameter influences.</title> <p>With the permeability surface area product (PS) = 0 (taller solid curve) the outflow concentration-time curve, C <sub>out</sub>, represents the response function via the vascular space alone. The mean transit time for this is V <sub>cap</sub>/F <sub>cap</sub>. With finite PS there is extraction of solute during transcapillary passage, shown by the successive diminutions of the heights of the initial peaks as PS increases. At low PSs the form of the outflow starts as a reduced version of the curve with PS = 0; in this state the flux into the tissue is purely \"barrier limited\". When PS is 4 or greater ml/(g*min), the sixth curve, the initial peak is no longer discernable; at yet higher PSs a second peak arises, and at PSs above 128 ml/(g*min) increasing the PS further has no effect on the shape of the outflow curve; in this state the exchange flux is purely \"flow-limited\", where changing the flow shifts C <sub>out</sub>, but changing PS does not.</p> </caption> <graphic xlink:href=\"https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure2.gif\"/> </fig>",
            "ntype": "fig",
            "meta": {
                "id": "f2",
                "caption": "Using LOOPS to explore parameter influences. With the permeability surface area product (PS) = 0 (taller solid curve) the outflow concentration-time curve, C out , represents the response function via the vascular space alone. The mean transit time for this is V cap /F cap . With finite PS there is extraction of solute during transcapillary passage, shown by the successive diminutions of the heights of the initial peaks as PS increases. At low PSs the form of the outflow starts as a reduced version of the curve with PS = 0; in this state the flux into the tissue is purely \"barrier limited\". When PS is 4 or greater ml/(g*min), the sixth curve, the initial peak is no longer discernable; at yet higher PSs a second peak arises, and at PSs above 128 ml/(g*min) increasing the PS further has no effect on the shape of the outflow curve; in this state the exchange flux is purely \"flow-limited\", where changing the flow shifts C out , but changing PS does not.",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure2.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_61",
            "content": "Nested plots",
            "ntype": "title",
            "meta": {
                "section": "2.11",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_62",
            "content": "Nested plots ( Figure 3 ) are JSim\u2019s version of worlds-within-worlds graphics ( Harris et al. , 1994 ). Each nested plot is a 2-dimensional array of plots, each of which represents the form of a set of model solutions with a pair of distinct parameter value. Nested plots enable simultaneous visualization of the effect of up to six independently varying parameters. JSim nested plots support modeling steps 6\u20138 above (verify accuracy, explore model state space, sensitivity analysis).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_63",
            "content": "Figure 3.",
            "ntype": "label",
            "meta": {
                "id": "f3",
                "caption": "Nested plots. Behavior of the two-region model when varying capillary permeability, PS, and tissue consumption, G isf . Each panel is a contour plot with the position between the capillary entrance at x =0 to the exit at x =0.1 cm on the abscissa, and time, t , on the ordinate. At each time step (ordinate) the horizontal line from 0 to 20 is colored (using color profile \u201crainbow\u201d in this case) in accord with the concentration at each point in x . Convection moves the entering solute along the tube from left to right to larger x on this graph. With successive times the colored horizontal lines construct a shaped profile above the x-t plane; contour lines with units in mM are superimposed. The columns from left to right show contours with PS increasing by factors of 5 (see labels at top of column) from PS = 0.3 to 37.5 ml/(g*min). The consumption G isf increases from 0.2 in the bottom row by factors of 5 to the top row with G isf = 25 ml/(g*min); see labels on right ordinate. With low PS , leftmost column, very little of the solute escapes into the tissue, so the injected bolus remains relatively compact even while undergoing some diffusional spread ( D cap = D isf = 10 -4 cm 2 /sec), and the influence of the consumption is negligible since so little enters the ISF. With increasing PS more solute enters the ISF where it is consumed. With high PS and high G isf , the right uppermost panel, the solute is all consumed before it can reach the capillary exit at the right edge of the panel. [This plot is set up under \u201cProject\u201d, \u201cAdd\u201d, \u201cNew Nested Plot\u201d using LOOPS, inner and outer, to set the values for the parameters, and on the NestedPlot, then clicking on \u201cXY plot\u201d to choose \u201ccontour\u201d. Instructions are under Running JSim \u2013 Data Analysis \u2013 Nested plots: www/physiome.org/jsim/docs/User.html ].",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure3.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_64",
            "content": "<fig xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fig-type=\"figure\" id=\"f3\" position=\"float\"> <caption> <title>Nested plots.</title> <p>Behavior of the two-region model when varying capillary permeability, <italic>PS,</italic> and tissue consumption, <italic>G</italic> <sub>isf</sub>. Each panel is a contour plot with the position between the capillary entrance at <italic>x</italic>=0 to the exit at <italic>x</italic>=0.1 cm on the abscissa, and time, <italic>t</italic>, on the ordinate. At each time step (ordinate) the horizontal line from 0 to 20 is colored (using color profile &#8220;rainbow&#8221; in this case) in accord with the concentration at each point in <italic>x</italic>. Convection moves the entering solute along the tube from left to right to larger <italic>x</italic> on this graph. With successive times the colored horizontal lines construct a shaped profile above the <italic>x-t</italic> plane; contour lines with units in mM are superimposed. The columns from left to right show contours with <italic>PS</italic> increasing by factors of 5 (see labels at top of column) from <italic>PS</italic> = 0.3 to 37.5 ml/(g*min). The consumption <italic>G</italic> <sub>isf</sub> increases from 0.2 in the bottom row by factors of 5 to the top row with <italic>G</italic> <sub>isf</sub> = 25 ml/(g*min); see labels on right ordinate. With low <italic>PS</italic>, leftmost column, very little of the solute escapes into the tissue, so the injected bolus remains relatively compact even while undergoing some diffusional spread ( <italic>D</italic> <sub>cap</sub> = <italic>D</italic> <sub>isf</sub> = 10 <sup>-4</sup> cm <sup>2</sup>/sec), and the influence of the consumption is negligible since so little enters the ISF. With increasing <italic>PS</italic> more solute enters the ISF where it is consumed. With high <italic>PS</italic> and high <italic>G</italic> <sub>isf</sub>, the right uppermost panel, the solute is all consumed before it can reach the capillary exit at the right edge of the panel. [This plot is set up under &#8220;Project&#8221;, &#8220;Add&#8221;, &#8220;New Nested Plot&#8221; using LOOPS, inner and outer, to set the values for the parameters, and on the NestedPlot, then clicking on &#8220;XY plot&#8221; to choose &#8220;contour&#8221;. Instructions are under Running JSim &#8211; Data Analysis &#8211; Nested plots: <ext-link ext-link-type=\"uri\" xlink:href=\"http://www/physiome.org/jsim/docs/User.html\">www/physiome.org/jsim/docs/User.html</ext-link>].</p> </caption> <graphic xlink:href=\"https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure3.gif\"/> </fig>",
            "ntype": "fig",
            "meta": {
                "id": "f3",
                "caption": "Nested plots. Behavior of the two-region model when varying capillary permeability, PS, and tissue consumption, G isf . Each panel is a contour plot with the position between the capillary entrance at x =0 to the exit at x =0.1 cm on the abscissa, and time, t , on the ordinate. At each time step (ordinate) the horizontal line from 0 to 20 is colored (using color profile \u201crainbow\u201d in this case) in accord with the concentration at each point in x . Convection moves the entering solute along the tube from left to right to larger x on this graph. With successive times the colored horizontal lines construct a shaped profile above the x-t plane; contour lines with units in mM are superimposed. The columns from left to right show contours with PS increasing by factors of 5 (see labels at top of column) from PS = 0.3 to 37.5 ml/(g*min). The consumption G isf increases from 0.2 in the bottom row by factors of 5 to the top row with G isf = 25 ml/(g*min); see labels on right ordinate. With low PS , leftmost column, very little of the solute escapes into the tissue, so the injected bolus remains relatively compact even while undergoing some diffusional spread ( D cap = D isf = 10 -4 cm 2 /sec), and the influence of the consumption is negligible since so little enters the ISF. With increasing PS more solute enters the ISF where it is consumed. With high PS and high G isf , the right uppermost panel, the solute is all consumed before it can reach the capillary exit at the right edge of the panel. [This plot is set up under \u201cProject\u201d, \u201cAdd\u201d, \u201cNew Nested Plot\u201d using LOOPS, inner and outer, to set the values for the parameters, and on the NestedPlot, then clicking on \u201cXY plot\u201d to choose \u201ccontour\u201d. Instructions are under Running JSim \u2013 Data Analysis \u2013 Nested plots: www/physiome.org/jsim/docs/User.html ].",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure3.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_65",
            "content": "Sensitivity analysis",
            "ntype": "title",
            "meta": {
                "section": "2.12",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_66",
            "content": "By \u201csensitivity analysis\u201d we mean the examination of the influences of individual parameters on the model responses under a wide variety of conditions. The sensitivity function, S(t) is the change in magnitude, dQ, of variable Q, to a small change in a parameter value, dP. It may be expressed in a normalized form, (dQ/Q)/(dP/P), or unnormalized form, dQ/dP. As an example consider the same model as was explored in Figure 3 . Figure 4 shows the sensitivities of the outflow concentration of a solute to a change in interstitial fluid volume (V isf ) or capillary wall conductance (PS) following an injection of that solute at the capillary entrance. The upper panel shows the outflow concentration without parameter perturbation. The middle panel plots the unnormalized sensitivity functions, and the bottom plot shows the normalized sensitivity functions (with the early part of the curves removed when C out is negligible). Increasing PS will lower the height of C out for the first 10 seconds with the greatest reduction at the peak of C out at ~8 seconds (due to greater flux of metabolite into the ISF); after 10 seconds, the height of C out will be increased (back flux of metabolite from ISF). Increasing V isf has the effect of lowering C out for the first 24 seconds, then raising it after 24 seconds. JSim\u2019s sensitivity analysis supports modeling step 7 above.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_67",
            "content": "Figure 4.",
            "ntype": "label",
            "meta": {
                "id": "f4",
                "caption": "Sensitivity analysis using the same model as in Box 2 and Figure 2 and Figure 3 . Upper panel : Model solution for outflow from capillary. Parameters were as in Box 2 , the default parameters. Middle panel : Sensitivity function, df/dp , the change in C out with a 1% increase in the capillary wall conductance (PS), black curve or the interstitial volume (V isf ). Lower panel: Normalized sensitivity function, ( df/f)/(dp/p) , the fractional change in C out divided by the fractional change in each parameter, again for a 1% change in the parameter value.",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure4.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_68",
            "content": "<fig xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fig-type=\"figure\" id=\"f4\" position=\"float\"> <caption> <title>Sensitivity analysis using the same model as in <xref ref-type=\"boxed-text\" rid=\"B2\">Box 2</xref> and <xref ref-type=\"fig\" rid=\"f2\">Figure 2</xref> and <xref ref-type=\"fig\" rid=\"f3\">Figure 3</xref>.</title> <p> <italic>Upper panel</italic>: Model solution for outflow from capillary. Parameters were as in <xref ref-type=\"boxed-text\" rid=\"B2\">Box 2</xref>, the default parameters. <italic>Middle panel</italic>: Sensitivity function, <italic>df/dp</italic>, the change in C <sub>out</sub> with a 1% increase in the capillary wall conductance (PS), black curve or the interstitial volume (V <sub>isf</sub>). <italic>Lower panel:</italic> Normalized sensitivity function, ( <italic>df/f)/(dp/p)</italic>, the fractional change in C <sub>out</sub> divided by the fractional change in each parameter, again for a 1% change in the parameter value.</p> </caption> <graphic xlink:href=\"https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure4.gif\"/> </fig>",
            "ntype": "fig",
            "meta": {
                "id": "f4",
                "caption": "Sensitivity analysis using the same model as in Box 2 and Figure 2 and Figure 3 . Upper panel : Model solution for outflow from capillary. Parameters were as in Box 2 , the default parameters. Middle panel : Sensitivity function, df/dp , the change in C out with a 1% increase in the capillary wall conductance (PS), black curve or the interstitial volume (V isf ). Lower panel: Normalized sensitivity function, ( df/f)/(dp/p) , the fractional change in C out divided by the fractional change in each parameter, again for a 1% change in the parameter value.",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure4.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_69",
            "content": "Optimization",
            "ntype": "title",
            "meta": {
                "section": "2.13",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_70",
            "content": "Manual parameter adjustment to fit the model to experimental data is encouraged as a means of gaining insight into model behavior. Automated parameter optimization is usually much faster; eight methods are provided (See Table 3 ); we recommend testing several in order to test speed and reliability with respect to the particular types of data and model. Given that some parameters are known or highly constrained, one may obtain the best model fit to the data for a particular subset of model parameters, and one may also, for some but not all of the optimizers, constrain the range for each parameter value, applying scientific judgment. Optimization helps in finding systematic misfits to the data (and the possible rejection of the hypothesis), and in estimating parameter values.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_71",
            "content": "Table 3.",
            "ntype": "label",
            "meta": {
                "id": "T3",
                "caption": "JSim\u2019s optimizers.",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_72",
            "content": "<table-wrap xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"T3\" position=\"anchor\"> <caption> <title>JSim&#8217;s optimizers.</title> </caption> <table content-type=\"article-table\" frame=\"hsides\"> <tbody> <tr> <td>Simplex</td> <td>A bounded, non-linear steepest-descent algorithm ( <xref ref-type=\"bibr\" rid=\"ref-25\">Dantzig <italic>et al.</italic>, 1995</xref>)</td> </tr> <tr> <td>GGopt</td> <td>Derivative-free non-linear optimizer. Uses adjustable mesh and linear least <break/>squares to find smoothed values of function, gradient and Hessian at center <break/>of mesh. Values drive a descent method that estimates optimal parameters, <break/>but is unbounded ( <xref ref-type=\"bibr\" rid=\"ref-6\">Bassingthwaighte <italic>et al.</italic>, 1988</xref>)</td> </tr> <tr> <td>GridSearch</td> <td>A bounded, parallel algorithm. Operates via progressively restricted search <break/>of parameter space on a regularly spaced grid of N points per dimension <break/>( <xref ref-type=\"bibr\" rid=\"ref-45\">Kolda <italic>et al.</italic>, 2003</xref>)</td> </tr> <tr> <td>NelderMead</td> <td>Unbounded, steepest descent similar to Simplex ( <xref ref-type=\"bibr\" rid=\"ref-52\">Nelder &amp; Mead, 1965</xref>)</td> </tr> <tr> <td>NL2SOL</td> <td>An adaptive nonlinear least-squares algorithm ( <xref ref-type=\"bibr\" rid=\"ref-26\">Dennis <italic>et al.</italic>, 1981</xref>; <xref ref-type=\"bibr\" rid=\"ref-27\">Dennis &amp; Schnabel, 1983</xref>). Unbounded</td> </tr> <tr> <td>SENSOP</td> <td>A weighted nonlinear least squares optimizer using a variant of the <break/>Levenberg-Marquardt method to calculate the direction and the length of the <break/>step change in the parameter vector ( <xref ref-type=\"bibr\" rid=\"ref-20\">Chan <italic>et al.</italic>, 1993</xref>). Bounded</td> </tr> <tr> <td>SimAnneal</td> <td>Simulated annealing for finding the global optimum of a function in a large <break/>multi-dimensional parameter search space which is first randomly sampled <break/>with step-size decreasing with time ( <xref ref-type=\"bibr\" rid=\"ref-43\">Kirkpatrick <italic>et al.</italic>, 1983</xref>)</td> </tr> <tr> <td>Genetic</td> <td>Genetic algorithms are a family of algorithms that generate a population of <break/>candidate solutions selecting the best solutions in each iteration to &#8220;mutate&#8221; <break/>and &#8220;cross over&#8221;, creating a new generation of solutions in an iterative <break/>process. ( <xref ref-type=\"bibr\" rid=\"ref-39\">Holland, 1992</xref>)</td> </tr> </tbody> </table> </table-wrap>",
            "ntype": "table-wrap",
            "meta": {
                "id": "T3",
                "caption": "JSim\u2019s optimizers.",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_73",
            "content": "The optimizer works to minimize an objective function, usually a weighted sum of squares of the differences between the model solution and the experimental data at each observation time or spatial position. This may require freeing up most parameters for optimization to make sure that an assumed constraint isn\u2019t creating a biased solution. JSim provides a graph of residuals (the differences between model and data); sign tests and other statistical appraisals of the residuals as a function of time help to distinguish systematic from random deviations. JSim\u2019s optimization facilities support modeling steps 9\u201312 above (fitting solutions, assessing goodness of fit, examining parameter correlations, evaluating confidence limits).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_74",
            "content": "Parameter confidence ranges",
            "ntype": "title",
            "meta": {
                "section": "2.14",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_75",
            "content": "Model fitting to the data is never unique but is guided by the weighting of the observed data points and the noise in the data. Parameter estimates are not exact, but merely estimated, and even possibly biased by the user\u2019s choice of the weights on individual data points. How to obtain a \u201cbest fit\u201d of model function to data is always, in a sense, a personal choice. Guidelines include weighting inversely to the likely standard deviation of each data point, or unweighting outliers. Viewing the graph of residuals (the differences between data and model) is most helpful in identifying systematic misfits.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_76",
            "content": "Ignoring how one got to the point of \u201cbest fit\u201d, one desires an evaluation of the parameter values. If the optimized parameters do generate outputs that closely match the experimental data, the question becomes what confidence can be placed on these estimates. One simple method is to optimize using several different numerical method, i.e. different optimization algorithms and different weighting schemes, to see how much the \u201cbest fit\u201d parameter estimates change. Other methods of estimating parameter confidence limits include using the Jacobian and using Monte Carlo methods.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_77",
            "content": "Using the Jacobian : The Jacobian matrix is the matrix of the sensitivity functions for all the parameters open to optimization, as calculated at the location of the minimized objective function, the \u201cbest fit\u201d. This matrix, which JSim calculates after each optimization provides the basis for determining correlations among parameters, and the confidence limits (standard deviations and expected ranges based on Gaussian assumptions). The calculation assumes symmetry and linearity, and so makes only local calculations, and gives no guarantee that the \u201cbest fit\u201d is a global best fit. While getting to the \u201cbest fit\u201d point in parameter space is data-dependent, this confidence range estimation procedure is not at all, for it is estimated solely from the shapes of the local sensitivity functions. Thus it behooves one to get the differing estimates obtained from different optimizers, different numbers of parameters searched, and even to move the parameter \u201cbest fit\u201d values a little away from the optimizer\u2019s choice and recalculate the confidence ranges.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_78",
            "content": "Using a Monte Carlo method : A more robust, but more demanding, confidence limit calculation uses Monte Carlo methods. The procedure is to 1) Select a noise profile for each experimental data point, ideally based on what you believe the real noise is, e.g. 5% proportional Gaussian random noise. 2) Generate a perturbation for each experimental data point by drawing randomly from the selected noise profile. 3) Re-optimize the model against the new set of perturbed data points to obtain another estimate for each parameter. 4) Repeat steps 2 and 3 many times (e.g. 1000). From these results, one obtains a histogram of estimates for each optimized parameter, and robust confidence limits can be drawn directly from these histograms without assuming symmetry and linearity as in the Jacobian method. JSim displays these histograms to show the distributions of parameter estimates in full detail, and 2-parameter scatter plots to show covariance. (JSim\u2019s confidence limit calculations support modeling step 12 above.)",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_79",
            "content": "Network graphs",
            "ntype": "title",
            "meta": {
                "section": "2.15",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_80",
            "content": "JSim\u2019s model \u201cbrowser\u201d provides a visual representation of model variables as \u201cnodes\u201d and their dependencies or connectivity with each other as connecting lines or \u201cedges\u201d. See Figure 5 . The graphs can be selected to include model parameters, or selected classes of variables, e.g. pressures, strains, concentrations. This capability is based on work by Yngve ( Yngve et al. , 2007 ). JSim\u2019s model browser supports modeling step 2 above (development of the model).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_81",
            "content": "Figure 5.",
            "ntype": "label",
            "meta": {
                "id": "f5",
                "caption": "Connectivity graph for a modified version of the model program in Box 1 . For Hx\u2192Xa\u2192Ua, the oxidation of hypoxanthine to xanthine to uric acid, catalyzed by xanthine oxidase. The connectivity is shown for a dual solution version of the code for fitting two different sets of experimental data simultaneously with a common group of parameters so as to obtain a minimally biased set of parameter confidence ranges.",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure5.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_82",
            "content": "<fig xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fig-type=\"figure\" id=\"f5\" position=\"float\"> <caption> <title>Connectivity graph for a modified version of the model program in <xref ref-type=\"boxed-text\" rid=\"B1\">Box 1</xref>.</title> <p>For Hx&#8594;Xa&#8594;Ua, the oxidation of hypoxanthine to xanthine to uric acid, catalyzed by xanthine oxidase. The connectivity is shown for a dual solution version of the code for fitting two different sets of experimental data simultaneously with a common group of parameters so as to obtain a minimally biased set of parameter confidence ranges.</p> </caption> <graphic xlink:href=\"https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure5.gif\"/> </fig>",
            "ntype": "fig",
            "meta": {
                "id": "f5",
                "caption": "Connectivity graph for a modified version of the model program in Box 1 . For Hx\u2192Xa\u2192Ua, the oxidation of hypoxanthine to xanthine to uric acid, catalyzed by xanthine oxidase. The connectivity is shown for a dual solution version of the code for fitting two different sets of experimental data simultaneously with a common group of parameters so as to obtain a minimally biased set of parameter confidence ranges.",
                "uri": "https://f1000researchdata.s3.amazonaws.com/manuscripts/3152/57cea0d3-d1de-487d-9265-6eeb01a5d3fa_figure5.gif",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_83",
            "content": "Implementation",
            "ntype": "title",
            "meta": {
                "section": "3",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_84",
            "content": "JSim is implemented in the Java computer language ( Gosling & McGilton, 2003 ). The major factors affecting this choice are Java's platform independent GUI (allowing Windows, Macintosh and Linux versions to be developed in a single code base), object-oriented features and garbage collection (simplifying complex coding), advanced utilities (associative arrays, dynamic linking, remote procedure calls), strong type checking (allowing many common coding errors to be caught at compile time) and robust exception mechanism (simplifying coding and enabling a virtually crash-proof GUI). Native code (C and Fortran) is used in certain restricted circumstances using the Java Native Interface (JNI) ( Liang, 1999 ) to reduce computational overhead (transcendental functions, 2D array access) and the availability of legacy code libraries (ODE, PDE and optimization numerical methods).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_85",
            "content": "The MML language is parsed using JLex scanner generator and the CUP parser generator ( Appel, 1998 ). These tools, similar to the classic Unix lex and yacc ( Aho et al. , 1988 ), were among the few parser generation tools available for Java when JSim was first developed. Using a formal parser generator allows MML to be concise, intuitive, consistent and extensible. MML's declarative structure is an intuitive expression of a model's underlying mathematics (simplifying the modeler\u2019s learning) and allows the overall structure of the model to be examined for mathematical correctness (detecting overspecification or underspecification) in a way that is not possible with a procedural specification. Units and unit checking ( Chizeck et al. , 2009 ) were added to MML soon after its initial design to further improve model conciseness and assure unit balance in the equations as a first step in verifying that the mathematics is rendered correctly by the numerics.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_86",
            "content": "MML is compiled into Java model computational code for run-time execution. This results in faster model execution (in comparison to table-driven computations) and allows more flexible model computational structure (multiple time sweeps, indexed loops). JSim models run asynchronously to the GUI in contrast to most simulators which alternate computational and graphical update steps. This approach dramatically improves performance and user response, especially when remote computation is used. JSim's remote computation is implemented using Java Remote Method Invocation (RMI) ( Harold, 1997 ), providing reliable access to networked computational servers. This approach also isolates the JNI methods (above) in the computational engine, allowing the JSim GUI to run as a pure Java browser applet. JSim multiprocessing is implemented using Java threads ( Oaks & Wong, 2004 ) providing excellent performance and seamless integration with the Java memory management and exception mechanisms (providing application stability). MML code is stored as XMML for distribution, and has automated translators into XMML, SBML, CellML, and with limitations into Matlab ( Smith et al. , 2013 ).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_87",
            "content": "Reproducibility",
            "ntype": "title",
            "meta": {
                "section": "4",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_88",
            "content": "The issue of reproducibility, or should we say the all-too-frequent failures of attempts to reproduce published results, are beginning to be recognized as a critical problem in advancing the biological sciences. It is easy to understand biological studies, with inherently great variability in materials and analysis procedures, should be less exact than those in the physical sciences, but it is not so forgivable that reproducing mathematical models of biological systems is a major problem. The two major repositories of published biological models, Biomodels ( http://www.ebi.ac.uk/biomodels-main/ ) using SBML ( www.sbml.org ) and CellML (models.cellml.org), together have about 1000 curated models: there were errors in the publications requiring corrections in all but 5 of these, before the models could be demonstrated to run appropriately. These models all used algebraic, ODEs, or differential-algebraic equations and so must be regarded as relatively simple computationally compared to finite-element models or spatially dependent models. That only 0.5% of the not very complex models were reproducible is truly alarming, and demonstrates the lack of dedication to making scientific advances useful to others. Some open access journals, such as F1000Research, are aiming to improve this sad state, by requiring open source code to be deposited, hopefully along with the data that provide tests of the model hypotheses. A Special Section in Science ( Stone & Jasny, 2013 ) is devoted to the issues of open access, addressing open access, peer review, the changing publishing scenario, and encouraging broader methods of communication. F1000s founder, Victor Tracz, is featured as the \u201cSeer of Science Publishing\u201d, prodding us to do better.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_89",
            "content": "Project files",
            "ntype": "title",
            "meta": {
                "section": "4.1",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_90",
            "content": "JSim project files store a set of codes for models, illustrative figures or diagrams, parameter sets, multiple data sets, the settings for looping, sensitivities, behavioral analysis, and optimizations, plot page configurations, and for project notes. Many models in the Physiome Repository (most of which are JSim-based) have experimental data in the project files for validation testing. Project files support the reproduction of a set of simulations and analyses for their sharing across JSim\u2019s supported platforms (Windows, Mac OS, Linux). Project files support the modeling steps 1 and 13 above (from importation of data, to preservation and distribution of analyses). The MML, XMML and all the data and analyses are preserved in an ASCII format; thus the files tend to be small. The models described above take < 100 kB; large models with several hundred ODEs take up < 500 kB even with large time series of physiological data. These files are all human readable, and ready to run when opened in JSim. They contain everything used by the program: the notes, the source code, and the control parameters for all the steps in the analysis. They are editable in any word processor, but one avoids doing that since it is easier to enter code and notes under JSim and not risk disturbing the format in the XMML file that JSim reads.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_91",
            "content": "There are many models on the Physiome Repository ( www.physiome.org ) with multiple data sets, model fits to data, and optimization results. Examples are that of Kuikka et al. on glucose uptake by myocardium ( Kuikka et al. , 1986 ), [models 163 and 173], xanthine oxidase reactions ( Bassingthwaighte & Chinn, 2013 ), [model 324], and lung endothelial serotonin uptake ( Jardine & Bassingthwaighte, 2013 ), [model 198]. All the JSim project files are stored in a Concurrent Versions System (CVS) archive so that the latest versions, as well as older versions, are always available. The models themselves are copyrighted but researchers are given the freedom to download, modify, and to construct new models from them so long as original authorship is acknowledged.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_92",
            "content": "Modeling over the web",
            "ntype": "title",
            "meta": {
                "section": "4.2",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_93",
            "content": "The archived JSim models at www.physiome.org can be run over the web, with complete freedom to vary the parameters, modify the code, compile and run, import one\u2019s own data for analysis, and save a modified and augmented file to one\u2019s own computer for further use. (Models based on MATLAB or FORTRAN, a small fraction of the repository, cannot be run over the web but can be downloaded).",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_94",
            "content": "Summary",
            "ntype": "title",
            "meta": {
                "section": "5",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_95",
            "content": "JSim is a tool for hypothesis exploration and for analyzing data. Many of the steps in data analysis are built into JSim. It\u2019s declarative modeling language, automatic unit balance checking, and built-in tools for solving ODEs, PDEs, and implicit equations greatly facilitate generating mathematically and physiologically consistent models. The built-in optimizers and associated statistical data reporting, along with behavior tools, such as parameter looping and sensitivity analysis, allow one to verify and explore model behavior in the context of experimental data and simulated data from previous models. With the ability to save these model \u2018explorations\u2019 as parameter sets within the JSim project file anyone can easily create a modeling and data analysis package that is easy to reproduce and distribute to others.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_96",
            "content": "As a research tool, JSim has been developed and refined to accelerate the processes of modeling and data analysis. Adherence to quality standards augments efficiency ( Smith et al. , 2007 ). The time savings don\u2019t simply reduce the time necessary to get to a result, they also end up improving the quality of the science in two ways. First, when it only takes a few seconds to tweak a model, re-run it, and view the results, researchers are more likely to explore many \u201cwhat if\u201d scenarios and develop a deeper understanding of model behavior, and in turn, a deeper understanding of the system being modeled. Second, researchers are more likely to do better verification checks and higher-level analyses if they are easy to do. When a few mouse clicks are all it takes to change solvers, time step sizes, optimization parameters, or even perform a complex Monte Carlo analysis to assess parameter correlations and confidence intervals, researchers are more likely to actually do those critical numerical checks and to take the model analysis beyond simply reporting a single parameter value.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_97",
            "content": "In addition to its use as a research tool, JSim is also very useful as a teaching tool. JSim has been used in classes for high school, undergraduate, and graduate students, as well as many workshops for faculty members. The fact that JSim is open source, quick to download and install, as well as executable over the web, means that it is easily available to students. The simplicity of JSim\u2019s model specification language, where users can focus on writing and working with the mathematical equations themselves rather than controlling program flow, means that students with no programming experience can rapidly begin to understand, create, and modify JSim models. Furthermore, JSim\u2019s interactive plotting interface and the easy access it provides to sophisticated analysis tools such as sensitivity and Monte Carlo analysis allow students to perform analyses which would ordinarily be too difficult and time consuming for them to do on their own.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_98",
            "content": "Future developments",
            "ntype": "title",
            "meta": {
                "section": "6",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_99",
            "content": "Modular modeling",
            "ntype": "title",
            "meta": {
                "section": "6.1",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_100",
            "content": "JSim has provided support for modular modeling from its inception ( Bassingthwaighte, 2000 ) using both mathematical and biological approaches, but now, with the developing recognition that models are more consistently understandable and more amenable to modular construction when they are annotated using identified ontology systems, libraries of modules present great opportunity for efficient construction of complex model systems. A module can be thought of as a self-contained model of an element of the larger system model and represents a specific physical, chemical or phenomenological process. A model might use multiple instances of the same module, for example, differently parameterized Michaelis-Menten type enzymatic reactions used for different reactants. One can build large models from a variety of modules representing physical or chemical processes such as the flux via a cell membrane transporter or ion channel or an enzymatic reaction, or a transcription regulatory pathway ( Beard et al. , 2005 ) incorporating knowledge of their connectivities. Allowing the modeler to draw pre-existing modules from a repository or extract them from previously developed models and enables the modeler to create new models quickly for hypothesis testing, a key to Physiome development ( Bassingthwaighte et al. , 2009 ). Below are two approaches to implementing modular modeling within JSim.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_101",
            "content": "Modular Program Constructor (MPC): MPC focuses on using easily understood directives to extract generically coded JSim MML equations from files, changing the names of the generic variables to ontologically informative names and assembling the resulting code into new equations ( Raymond & Bassingthwaighte, 2011 ). For example, MPC can take MML code representing a single tissue exchange region (26 lines), and generate a whole organ heterogeneous model for convection, diffusion, and reaction with 20 regions (1698 lines). See http://www.physiome.org/jsim/models/webmodel/NSR/MPC/ . MPC currently runs outside of JSim but is planned for incorporation into a future JSim release.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_102",
            "content": "Modular construction with SemSim: Precise semantic identification of variables and parameters is a prerequisite to merging of preconstructed submodels or modules into integrated systems or multiscale models. A future release of JSim will incorporate the tools for annotating models and their computational elements against biomedical ontologies and knowledge bases ( Rubin et al. , 2006 ). These annotations will make it easier for users to search the Physiome Model repository and to identify the biological phenomena modeled. Formatted according to the semantic simulation (SemSim) framework ( Gennari et al. , 2011 ), these annotations will also make it possible for tools to decompose and merge models in a more automated fashion, and allow the modeler to work at a biological, rather than computational level of abstraction ( Beard et al. , 2012 ). For example, selection of an ion pump, such as the NaKATPase, would bring up a set of modules from which the modeler would choose the version suited to the particular context, and then the code for the integrated model would be automatically generated from the annotated modules in the library.",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_103",
            "content": "Getting started with JSim",
            "ntype": "title",
            "meta": {
                "section": "6.2",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_104",
            "content": "Information for download and installation, running JSim, and writing JSim MML models can be found at http://www.physiome.org/jsim/ . Software is also permanently available from: 10.5281/zenodo.7635 .",
            "ntype": "p",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_105",
            "content": "Aho A Sethi R Ullman J : Compilers: Principles, Techniques and Tools . Addison-Wesley. 1988 . Reference Source",
            "ntype": "ref",
            "meta": {
                "id": "ref-1",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_106",
            "content": "Appel AW : Modern Compiler Implementation in Java . Cambridge University Press. 1998 . Reference Source",
            "ntype": "ref",
            "meta": {
                "id": "ref-2",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_107",
            "content": "Barta E Sideman S Bassingthwaighte JB : Facilitated diffusion and membrane permeation of fatty acid in albumin solutions. Ann Biomed Eng. 2000 ; 28 ( 3 ): 331 \u2013 345 . 10784097 10.1114/1.274 2872167",
            "ntype": "ref",
            "meta": {
                "id": "ref-3",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_108",
            "content": "Bassingthwaighte JB : A concurrent flow model for extraction during transcapillary passage. Circ Res. 1974 ; 35 ( 3 ): 483 \u2013 503 . 4608628 10.1161/01.RES.35.3.483 3077802",
            "ntype": "ref",
            "meta": {
                "id": "ref-4",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_109",
            "content": "Bassingthwaighte JB Goresky CA : Modeling in the analysis of solute and water exchange in the microvasculature . In: Handbook of Physiology. Sect. 2, The Cardiovascular System. Vol IV The Microcirculation, edited by Renkin EM and Michel CC. Bethesda, MD: Am Physiol Soc. 1984 ; pp 549 \u2013 626 .",
            "ntype": "ref",
            "meta": {
                "id": "ref-5",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_110",
            "content": "Bassingthwaighte JB : Strategies for the Physiome Project. Ann Biomed Eng. 2000 ; 28 ( 8 ): 1043 \u2013 1058 . 11144666 10.1114/1.1313771 3425440",
            "ntype": "ref",
            "meta": {
                "id": "ref-9",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_111",
            "content": "Bassingthwaighte JB Chizeck HJ Atlas LE : Multiscale modeling of cardiac cellular Energetics . In: The Communicative Cardiac Cell. edited by Sideman S, Beyar R and Landesberg A. Ann New York Acad Sci. 2005 ; 1047 : 395 \u2013 424 . 16093514 10.1196/annals.1341.035 2864600",
            "ntype": "ref",
            "meta": {
                "id": "ref-10",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_112",
            "content": "Bassingthwaighte JB Chizeck HJ Atlas LE : Strategies and Tactics in Multiscale Modeling of Cell-to-Organ Systems. Proc IEEE Inst Electr Electron Eng. 2006 ; 94 ( 4 ): 819 \u2013 830 . 20463841 10.1109/JPROC.2006.871775 2867355",
            "ntype": "ref",
            "meta": {
                "id": "ref-11",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_113",
            "content": "Bassingthwaighte JB Raymond GR Ploger JD : GENTEX, a general multiscale model for in vivo tissue exchanges and intraorgan metabolism. Philos Trans A Math Phys Eng Sci. 2006 ; 364 ( 1843 ): 1423 \u2013 1442 . 16766353 10.1098/rsta.2006.1779",
            "ntype": "ref",
            "meta": {
                "id": "ref-12",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_114",
            "content": "Bassingthwaighte J Noble D Hunter P : The Cardiac Physiome: perspectives for the future. Exp Physiol. 2009 ; 94 ( 5 ): 597 \u2013 605 . 19098089 10.1113/expphysiol.2008.044099 2854146",
            "ntype": "ref",
            "meta": {
                "id": "ref-13",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_115",
            "content": "Bassingthwaighte JB Chinn TM : Reexamining Michaelis-Menten enzyme kinetics for xanthine oxidase. Adv Physiol Educ. 2013 ; 37 ( 1 ): 37 \u2013 48 . 23471247 10.1152/advan.00107.2012 3776473",
            "ntype": "ref",
            "meta": {
                "id": "ref-15",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_116",
            "content": "Beard DA Bassingthwaighte JB : The fractal nature of myocardial blood flow emerges from a whole-organ model of arterial network. J Vasc Res. 2000 ; 37 ( 4 ): 282 \u2013 296 . 10965227 10.1159/000025742",
            "ntype": "ref",
            "meta": {
                "id": "ref-16",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_117",
            "content": "Beard DA Bassingthwaighte JB Greene A : Computational modeling of physiological systems. Physiol Genomics. 2005 ; 23 ( 1 ): 1 \u2013 3 . 16179418 10.1152/physiolgenomics.00117.2005",
            "ntype": "ref",
            "meta": {
                "id": "ref-17",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_118",
            "content": "Beard DA Neal ML Tabesh-Saleki N : Multiscale modeling and data integration in the virtual physiological rat project. Ann Biomed Eng. 2012 ; 40 ( 11 ): 2365 \u2013 2378 . 22805979 10.1007/s10439-012-0611-7 3463790",
            "ntype": "ref",
            "meta": {
                "id": "ref-18",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_119",
            "content": "Chizeck HJ Butterworth E Bassingthwaighte JB : Error detection and unit conversion. Automated unit balancing in modeling interface systems. IEEE Eng Med Biol. 2009 ; 28 ( 3 ): 50 \u2013 58 . 21462417 10.1109/MEMB.2009.932477 3420958",
            "ntype": "ref",
            "meta": {
                "id": "ref-21",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_120",
            "content": "Coatrieux JL Bassingthwaighte JB : Special Issue on the Physiome and Beyond. Proc IEEE. 2006 ; 94 : 671 \u2013 677 . Reference Source",
            "ntype": "ref",
            "meta": {
                "id": "ref-22",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_121",
            "content": "Cuellar AA Lloyd CM Nielsen PF : An Overview of CellML 1.1, a Biological Model Description Language. SIMULATION. 2003 ; 79 ( 12 ): 740 \u2013 747 . 10.1177/0037549703040939",
            "ntype": "ref",
            "meta": {
                "id": "ref-24",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_122",
            "content": "Gennari JH Neal ML Galdzicki M : Multiple ontologies in action: Composite annotations for biosimulation models. J Biomed Inform. 2011 ; 44 ( 1 ): 146 \u2013 154 . 20601121 10.1016/j.jbi.2010.06.007 2989341",
            "ntype": "ref",
            "meta": {
                "id": "ref-31",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_123",
            "content": "Gillespie DT : Exact stochastic simulation of coupled chemical reactions. J Phys Chem. 1977 ; 81 ( 25 ): 2340 \u2013 2361 . 10.1021/j100540a008",
            "ntype": "ref",
            "meta": {
                "id": "ref-32",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_124",
            "content": "Goresky CA : A linear method for determining liver sinusoidal and extravascular volumes. Am J Physiol. 1963 ; 204 : 626 \u2013 640 . 13949263",
            "ntype": "ref",
            "meta": {
                "id": "ref-33",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_125",
            "content": "Gosling J McGilton H : The Java language environment: A white paper, 1995. Sun Microsystems. 2003 ; 85 . Reference Source",
            "ntype": "ref",
            "meta": {
                "id": "ref-34",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_126",
            "content": "Harold ER : Java Network Programming . O'Reilly. 1977 . Reference Source",
            "ntype": "ref",
            "meta": {
                "id": "ref-37",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_127",
            "content": "Harris PA Bosan S Harris TR : Parameter identification in coronary pressure flow models: a graphical approach. Ann Biomed Eng. 1994 ; 22 ( 6 ): 622 \u2013 637 . 7872572",
            "ntype": "ref",
            "meta": {
                "id": "ref-38",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_128",
            "content": "Hucka M Finney A Sauro HM : SBML Forum. The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models. Bioinformatics. 2003 ; 19 ( 4 ): 524 \u2013 31 . 12611808 10.1093/bioinformatics/btg015",
            "ntype": "ref",
            "meta": {
                "id": "ref-40",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_129",
            "content": "Jardine B Bassingthwaighte JB : Modeling serotonin uptake in the lung shows endothelial transporters dominate over cleft permeation. Am J Physiol Lung Cell Mol Physiol. 2013 ; 305 ( 1 ): L42 \u2013 L55 . 23645496 10.1152/ajplung.00420.2012 3726944",
            "ntype": "ref",
            "meta": {
                "id": "ref-41",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_130",
            "content": "King RB Butterworth EA Weissman LJ : A graphical user interface for computer simulation. FASEB J. 1995 ; 9 : A14 . (XSim).",
            "ntype": "ref",
            "meta": {
                "id": "ref-42",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_131",
            "content": "Knopp TJ Anderson DU Bassingthwaighte JB : SIMCON--Simulation control to optimize man-machine interaction. Simulation. 1970 ; 14 ( 2 ): 81 \u2013 86 . 21423785 10.1177/003754977001400205 3059310",
            "ntype": "ref",
            "meta": {
                "id": "ref-44",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_132",
            "content": "Kuikka J Levin M Bassingthwaighte JB : Multiple tracer dilution estimates of D- and 2-deoxy-D-glucose uptake by the heart. Am J Physiol. 1986 ; 250 ( 1 Pt 2 ): H29 \u2013 H42 . 3510568 3496757",
            "ntype": "ref",
            "meta": {
                "id": "ref-46",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_133",
            "content": "Liang S : The Java Native Interface: Programmer's Guide and Specification . Addison-Wesley. 1999 ; 303 . Reference Source",
            "ntype": "ref",
            "meta": {
                "id": "ref-48",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_134",
            "content": "Neal ML Bassingthwaighte JB : Subject-specific model estimation of cardiac output and blood volume during hemorrhage. Cardiovasc Eng. 2007 ; 7 ( 3 ): 97 \u2013 120 . 17846886 10.1007/s10558-007-9035-7 3629970",
            "ntype": "ref",
            "meta": {
                "id": "ref-51",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_135",
            "content": "Oaks S Wong H : Java Threads (Third Edition) . O'Reilly. 2004 . Reference Source",
            "ntype": "ref",
            "meta": {
                "id": "ref-53",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_136",
            "content": "Platt JR : Strong inference: Certain systematic methods of scientific thinking may produce much more rapid progress than others. Science. 1964 ; 146 ( 3642 ): 347 \u2013 353 . 17739513 10.1126/science.146.3642.347",
            "ntype": "ref",
            "meta": {
                "id": "ref-54",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_137",
            "content": "Raymond GM Butterworth E Bassingthwaighte JB : JSIM: Free software package for teaching physiological modeling and research. Exper Biol. 2003 ; 280 ( 5 ): 102 .",
            "ntype": "ref",
            "meta": {
                "id": "ref-56",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_138",
            "content": "Raymond GM Bassingthwaighte JB : Automated modular model construction using JSim. Experimental Biology. 2011 ; 863 ( 9 ).",
            "ntype": "ref",
            "meta": {
                "id": "ref-57",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_139",
            "content": "Roberts MS Rowland M : A dispersion model of hepatic elimination: 1. Formulation of the model and bolus considerations. J Pharmacokinet Biopharm. 1986 ; 14 ( 3 ): 227 \u2013 260 . 3783446",
            "ntype": "ref",
            "meta": {
                "id": "ref-58",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_140",
            "content": "Rubin DR Grossman D Neal ML : Ontology-based representation of simulation models of physiology. AMIA Annu Symp Proc. 2006 ; 664 \u2013 668 . 17238424 1839612",
            "ntype": "ref",
            "meta": {
                "id": "ref-59",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_141",
            "content": "Safford RE Bassingthwaighte JB : Calcium diffusion in transient and steady states in muscle. Biophys J. 1977 ; 20 ( 1 ): 113 \u2013 136 . 901900 10.1016/S0006-3495(77)85539-2 1473340",
            "ntype": "ref",
            "meta": {
                "id": "ref-60",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_142",
            "content": "Smith NA Crampin EJ Niederer SA : Computational biology of the cardiac myocyte: proposed standards for the physiome. J Exper Biol. 2007 ; 210 ( Pt 9 ): 1576 \u2013 1583 . 17449822 10.1242/jeb.000133 2866297",
            "ntype": "ref",
            "meta": {
                "id": "ref-61",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_143",
            "content": "Smith L Butterworth E Bassingthwaighte JB : SBML and CellML translation in Antimony and JSim. Bioinformatics. 2013 . (In press). 24215024 10.1093/bioinformatics/btt641",
            "ntype": "ref",
            "meta": {
                "id": "ref-62",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_144",
            "content": "Stone R Jasny B : Scientific Discourse: Buckling at the Seams. Science. 2013 ; 342 ( 6154 ): 57 \u2013 82 . (Eight articles covering new views on improving scientific communication and accelerating research through openness and clarity.). 10.1126/science.342.6154.56",
            "ntype": "ref",
            "meta": {
                "id": "ref-63",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_145",
            "content": "Suenson M Richmond DR Bassingthwaighte JB : Diffusion of sucrose, sodium, and water in ventricular myocardium. Am J Physiol. 1974 ; 227 ( 5 ): 1116 \u2013 1123 . 4440753 3024886",
            "ntype": "ref",
            "meta": {
                "id": "ref-64",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_146",
            "content": "Vinnakota KC Bassingthwaighte JB : Myocardial density and composition: a basis for calculating intracellular metabolite concentrations. Am J Physiol Heart Circ Physiol. 2004 ; 286 ( 5 ): H1742 \u2013 H1749 . 14693681 10.1152/ajpheart.00478.2003",
            "ntype": "ref",
            "meta": {
                "id": "ref-65",
                "created_by": "F1000XMLParser"
            }
        },
        {
            "ix": "2-288_v1_147",
            "content": "Yngve G Brinkley JF Cook D : A model browser for biosimulation. AMIA Annu Symp Proc. 2007 ; 2007 : 836 \u2013 840 . 18693954 2655884",
            "ntype": "ref",
            "meta": {
                "id": "ref-66",
                "created_by": "F1000XMLParser"
            }
        }
    ],
    "span_nodes": [
        {
            "ix": "2-288_v1_0@0",
            "content": "JSim, an open-source modeling system for data analysis",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_0",
            "start": 0,
            "end": 53,
            "label": {}
        },
        {
            "ix": "2-288_v1_1@0",
            "content": "Abstract",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_1",
            "start": 0,
            "end": 7,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@0",
            "content": "JSim is a simulation system for developing models, designing experiments, and evaluating hypotheses on physiological and pharmacological systems through the testing of model solutions against data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 0,
            "end": 196,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@1",
            "content": "It is designed for interactive, iterative manipulation of the model code, handling of multiple data sets and parameter sets, and for making comparisons among different models running simultaneously or separately.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 198,
            "end": 409,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@2",
            "content": "Interactive use is supported by a large collection of graphical user interfaces for model writing and compilation diagnostics, defining input functions, model runs, selection of algorithms solving ordinary and partial differential equations, run-time multidimensional graphics, parameter optimization (8 methods), sensitivity analysis, and Monte Carlo simulation for defining confidence ranges.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 411,
            "end": 804,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@3",
            "content": "JSim uses Mathematical Modeling Language (MML) a declarative syntax specifying algebraic and differential equations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 806,
            "end": 921,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@4",
            "content": "Imperative constructs written in other languages (MATLAB, FORTRAN, C++, etc.) are accessed through procedure calls.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 923,
            "end": 1037,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@5",
            "content": "MML syntax is simple, basically defining the parameters and variables, then writing the equations in a straightforward, easily read and understood mathematical form.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 1039,
            "end": 1203,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@6",
            "content": "This makes JSim good for teaching modeling as well as for model analysis for research.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 1205,
            "end": 1290,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@7",
            "content": "For high throughput applications, JSim can be run as a batch job.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 1292,
            "end": 1356,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@8",
            "content": "JSim can automatically translate models from the repositories for Systems Biology Markup Language (SBML) and CellML models.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 1358,
            "end": 1480,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@9",
            "content": "Stochastic modeling is supported.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 1482,
            "end": 1514,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@10",
            "content": "MML supports assigning physical units to constants and variables and automates checking dimensional balance as the first step in verification testing.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 1516,
            "end": 1665,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@11",
            "content": "Automatic unit scaling follows, e.g. seconds to minutes, if needed.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 1667,
            "end": 1733,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@12",
            "content": "The JSim Project File sets a standard for reproducible modeling analysis: it includes in one file everything for analyzing a set of experiments: the data, the models, the data fitting, and evaluation of parameter confidence ranges.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 1735,
            "end": 1965,
            "label": {}
        },
        {
            "ix": "2-288_v1_2@13",
            "content": "JSim is open source; it and about 400 human readable open source physiological/biophysical models are available at http://www.physiome.org/jsim/.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_2",
            "start": 1967,
            "end": 2111,
            "label": {}
        },
        {
            "ix": "2-288_v1_3@0",
            "content": "Introduction",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_3",
            "start": 0,
            "end": 11,
            "label": {}
        },
        {
            "ix": "2-288_v1_4@0",
            "content": "The modeling of biological processes starts with defining the hypothesis to be tested in an experiment.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_4",
            "start": 0,
            "end": 102,
            "label": {}
        },
        {
            "ix": "2-288_v1_4@1",
            "content": "To make scientific progress, Platt ( Platt, 1964 ) emphasized defining at least two distinct hypotheses and then designing an experiment with the power to clearly distinguish between these hypotheses.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_4",
            "start": 104,
            "end": 303,
            "label": {}
        },
        {
            "ix": "2-288_v1_4@2",
            "content": "By so doing, at least one of the hypotheses must then be rejected: the rejection marks a stepping-stone in science.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_4",
            "start": 305,
            "end": 419,
            "label": {}
        },
        {
            "ix": "2-288_v1_4@3",
            "content": "If a hypothesis is not rejected then it remains as a potential working hypothesis, the target of further experimentation that eventually will lead to its rejection or improvement.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_4",
            "start": 421,
            "end": 599,
            "label": {}
        },
        {
            "ix": "2-288_v1_5@0",
            "content": "The virtue of the mathematically-defined hypothesis is that it is clear and precise, and therefore susceptible to contradiction.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_5",
            "start": 0,
            "end": 127,
            "label": {}
        },
        {
            "ix": "2-288_v1_5@1",
            "content": "Arguably, one should use mathematical \u201cin numero experimentation\u201d to define the critical laboratory experiment.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_5",
            "start": 129,
            "end": 239,
            "label": {}
        },
        {
            "ix": "2-288_v1_5@2",
            "content": "Given that the experiment tests whether or not the working hypothesis is compatible with experimental data, then failure to fit leads to rejection.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_5",
            "start": 241,
            "end": 387,
            "label": {}
        },
        {
            "ix": "2-288_v1_5@3",
            "content": "Revision of the conjecture follows: science is advanced.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_5",
            "start": 389,
            "end": 444,
            "label": {}
        },
        {
            "ix": "2-288_v1_6@0",
            "content": "The hypothesis testing cycle is an iterative procedure: design hypothesis (and alternative hypotheses) \u2192 execute experiment \u2192 evaluate goodness of fit of model to data \u2192 either reject the hypothesis and restart, or, alternatively, \u2192 accept the model as the current working hypothesis and assess the parameters for the specific situation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_6",
            "start": 0,
            "end": 336,
            "label": {}
        },
        {
            "ix": "2-288_v1_6@1",
            "content": "The working model serves as the current belief until deeper thinking leads to an alternative hypothesis and one restarts the cycle.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_6",
            "start": 338,
            "end": 468,
            "label": {}
        },
        {
            "ix": "2-288_v1_6@2",
            "content": "This philosophical and procedural point of view, more or less guaranteed to make efficient progress in the field, creates definable results step by step, and gives investigators a sense of satisfactory success.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_6",
            "start": 470,
            "end": 679,
            "label": {}
        },
        {
            "ix": "2-288_v1_7@0",
            "content": "As in physics, models are posed in order to gain deeper understanding.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_7",
            "start": 0,
            "end": 69,
            "label": {}
        },
        {
            "ix": "2-288_v1_7@1",
            "content": "Cause-and-effect models of biological systems are usually deterministic; they are fundamentally different from observationally-based probabilistic associations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_7",
            "start": 71,
            "end": 230,
            "label": {}
        },
        {
            "ix": "2-288_v1_7@2",
            "content": "The desire is to represent sequences of operations within a dynamic system leading to, and explaining, the observed data ( Coatrieux & Bassingthwaighte, 2006 ; Bassingthwaighte et al. , 2006a ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_7",
            "start": 232,
            "end": 425,
            "label": {}
        },
        {
            "ix": "2-288_v1_7@3",
            "content": "Standard statistical methods are not central to deciding whether or not to reject the hypothesis, but are indeed very helpful in assessing goodness of fit, estimating confidence ranges and co-variances among parameters, and in guiding the investigator in identifying errors or in finding ways to simplify the model.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_7",
            "start": 427,
            "end": 741,
            "label": {}
        },
        {
            "ix": "2-288_v1_8@0",
            "content": "Over the years we have developed sets of tools to serve these processes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_8",
            "start": 0,
            "end": 71,
            "label": {}
        },
        {
            "ix": "2-288_v1_8@1",
            "content": "In this article we describe the features of a simulation analysis system, JSim; it is the product of evolutionary improvements in the hypothesis testing cycle.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_8",
            "start": 73,
            "end": 231,
            "label": {}
        },
        {
            "ix": "2-288_v1_8@2",
            "content": "The central goals are to facilitate attempts to fit models to data, and to support the efficient development of computational models that describe and explain the behavior of biological systems ( Bassingthwaighte & Goresky, 1984 ; Bassingthwaighte et al. , 2005 ; Beard et al. , 2005 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_8",
            "start": 233,
            "end": 518,
            "label": {}
        },
        {
            "ix": "2-288_v1_9@0",
            "content": "Our perspective is embedded in JSim: it is an open-source simulation analysis platform, freely downloadable, running on Linux, Macintosh, and Windows, providing tools for the steps in the modeling analysis of data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_9",
            "start": 0,
            "end": 213,
            "label": {}
        },
        {
            "ix": "2-288_v1_9@1",
            "content": "There is a naturally occurring sequence of steps to take when one starts with an unanalyzed data set and has the goal of modeling the cause and effect relationships.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_9",
            "start": 215,
            "end": 379,
            "label": {}
        },
        {
            "ix": "2-288_v1_9@2",
            "content": "We have found it useful to follow a simplified summary: The THIRTEEN STEPS:",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_9",
            "start": 381,
            "end": 455,
            "label": {}
        },
        {
            "ix": "2-288_v1_10@0",
            "content": "The THIRTEEN STEPS in the modeling process",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_10",
            "start": 0,
            "end": 41,
            "label": {}
        },
        {
            "ix": "2-288_v1_11@0",
            "content": "These are proposed as a guide.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_11",
            "start": 0,
            "end": 29,
            "label": {}
        },
        {
            "ix": "2-288_v1_11@1",
            "content": "The ordering is not rigid, but it is wise to cover all of the steps in one\u2019s mind when starting and again when finishing up a study.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_11",
            "start": 31,
            "end": 162,
            "label": {}
        },
        {
            "ix": "2-288_v1_11@2",
            "content": "Using the steps in the order listed here almost always works well.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_11",
            "start": 164,
            "end": 229,
            "label": {}
        },
        {
            "ix": "2-288_v1_12@0",
            "content": "(1) When starting with existing experimental data, plot and display the data so that one can rapidly review and compare multiple data sets.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_12",
            "start": 0,
            "end": 138,
            "label": {}
        },
        {
            "ix": "2-288_v1_12@1",
            "content": "This also prepares for comparing with later model results.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_12",
            "start": 140,
            "end": 197,
            "label": {}
        },
        {
            "ix": "2-288_v1_13@0",
            "content": "(2) Develop the model, the mathematical formulation of the hypothesis.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_13",
            "start": 0,
            "end": 69,
            "label": {}
        },
        {
            "ix": "2-288_v1_13@1",
            "content": "One may start with one or more existing models or modules of a similar nature (retrieved from a model repository or archival format) and modify it.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_13",
            "start": 71,
            "end": 217,
            "label": {}
        },
        {
            "ix": "2-288_v1_13@2",
            "content": "Construct illustrations of model structure to aid the conceptual approach.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_13",
            "start": 219,
            "end": 292,
            "label": {}
        },
        {
            "ix": "2-288_v1_14@0",
            "content": "(3) Verify unitary balance in the model equations, an easy first check for model self-consistency.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_14",
            "start": 0,
            "end": 97,
            "label": {}
        },
        {
            "ix": "2-288_v1_15@0",
            "content": "(4) Select appropriate methods for solving model equations (e.g. differential equation solvers).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_15",
            "start": 0,
            "end": 95,
            "label": {}
        },
        {
            "ix": "2-288_v1_16@0",
            "content": "(5) Display model solutions graphically and in text listings.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_16",
            "start": 0,
            "end": 60,
            "label": {}
        },
        {
            "ix": "2-288_v1_16@1",
            "content": "Inspect.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_16",
            "start": 62,
            "end": 69,
            "label": {}
        },
        {
            "ix": "2-288_v1_17@0",
            "content": "(6) Verify the mathematical accuracy of solutions.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_17",
            "start": 0,
            "end": 49,
            "label": {}
        },
        {
            "ix": "2-288_v1_17@1",
            "content": "Check that results are not dependent on temporal or spatial step sizes, that mass or charge is appropriately conserved, and that limiting cases match analytical solutions.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_17",
            "start": 51,
            "end": 221,
            "label": {}
        },
        {
            "ix": "2-288_v1_18@0",
            "content": "(7) Explore model behavior over wide ranges of parameter values in state-space. (We think of \u201cstate space\u201d as being the N-dimensional space enclosing the ranges of values of all of the parameters within which the model is correct numerically and sensible scientifically.)",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_18",
            "start": 0,
            "end": 270,
            "label": {}
        },
        {
            "ix": "2-288_v1_19@0",
            "content": "(8) Perform sensitivity analyses, examining the fractional change in model solutions with fractional change in each parameter.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_19",
            "start": 0,
            "end": 125,
            "label": {}
        },
        {
            "ix": "2-288_v1_20@0",
            "content": "(9) Adjust parameters to fit model solution to data, manually or using an optimizer.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_20",
            "start": 0,
            "end": 83,
            "label": {}
        },
        {
            "ix": "2-288_v1_20@1",
            "content": "Start from different places in parameter space and vary the optimization method to test solution uniqueness.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_20",
            "start": 85,
            "end": 192,
            "label": {}
        },
        {
            "ix": "2-288_v1_21@0",
            "content": "(10) Assess goodness of model fit to data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_21",
            "start": 0,
            "end": 41,
            "label": {}
        },
        {
            "ix": "2-288_v1_21@1",
            "content": "Plot residual differences to expose systematic biases.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_21",
            "start": 43,
            "end": 96,
            "label": {}
        },
        {
            "ix": "2-288_v1_22@0",
            "content": "(11) Examine parameter correlations to identify highly correlated parameters and reduce the number of free parameters in optimizations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_22",
            "start": 0,
            "end": 134,
            "label": {}
        },
        {
            "ix": "2-288_v1_22@1",
            "content": "Reoptimize.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_22",
            "start": 136,
            "end": 146,
            "label": {}
        },
        {
            "ix": "2-288_v1_23@0",
            "content": "(12) Evaluate parameter confidence ranges.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_23",
            "start": 0,
            "end": 41,
            "label": {}
        },
        {
            "ix": "2-288_v1_23@1",
            "content": "The sensitivities at the \u201cbest fit\u201d, expressed as the local curvature of the optimization cost function give a practical estimate.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_23",
            "start": 43,
            "end": 172,
            "label": {}
        },
        {
            "ix": "2-288_v1_23@2",
            "content": "This can be refined using a Monte Carlo evaluation of parameter likelihoods as probability density functions.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_23",
            "start": 174,
            "end": 282,
            "label": {}
        },
        {
            "ix": "2-288_v1_24@0",
            "content": "(13) Preserve the source code, multiple data sets, multiple analyses and parameter sets, the settings (for initial and boundary conditions, parameter scans, displays, solver choices, optimizers, Monte Carlo, etc.), the graphs of results, the investigator\u2019s notes and descriptions of procedures, plots, etc., all in a single, reproducible, exportable package.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_24",
            "start": 0,
            "end": 357,
            "label": {}
        },
        {
            "ix": "2-288_v1_24@1",
            "content": "Share this package openly with collaborators, reviewers, and the public, a moral and perhaps ethical requirement when the support comes from public funds.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_24",
            "start": 359,
            "end": 512,
            "label": {}
        },
        {
            "ix": "2-288_v1_25@0",
            "content": "Interpretation of analyses",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_25",
            "start": 0,
            "end": 25,
            "label": {}
        },
        {
            "ix": "2-288_v1_26@0",
            "content": "What one wants primarily from modeling analysis is insight into mechanisms.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_26",
            "start": 0,
            "end": 74,
            "label": {}
        },
        {
            "ix": "2-288_v1_26@1",
            "content": "JSim is efficient for model development and testing.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_26",
            "start": 76,
            "end": 127,
            "label": {}
        },
        {
            "ix": "2-288_v1_26@2",
            "content": "The fitting of experimental data by model solutions does not provide proof that the model is correct.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_26",
            "start": 129,
            "end": 229,
            "label": {}
        },
        {
            "ix": "2-288_v1_26@3",
            "content": "It says merely that the model can serve as a descriptor under limited range of circumstances, namely those examined in the experimentation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_26",
            "start": 231,
            "end": 369,
            "label": {}
        },
        {
            "ix": "2-288_v1_26@4",
            "content": "Validity is never provable.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_26",
            "start": 371,
            "end": 397,
            "label": {}
        },
        {
            "ix": "2-288_v1_26@5",
            "content": "Likewise, causation may be identified, but deeper levels may exist to be revealed later.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_26",
            "start": 399,
            "end": 486,
            "label": {}
        },
        {
            "ix": "2-288_v1_27@0",
            "content": "What does the model predict? Every model, with a little ingenuity, can be queried.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_27",
            "start": 0,
            "end": 81,
            "label": {}
        },
        {
            "ix": "2-288_v1_27@1",
            "content": "What would be the responses to different inputs? How would the system respond if a component were missing or damaged? Predictions then form the basis for the design of the next experimental test.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_27",
            "start": 83,
            "end": 277,
            "label": {}
        },
        {
            "ix": "2-288_v1_27@2",
            "content": "Correct predictions, failing to invalidate the model, do strengthen the confidence in the model but only to the degree commensurate with the comprehensiveness of the particular prediction.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_27",
            "start": 279,
            "end": 466,
            "label": {}
        },
        {
            "ix": "2-288_v1_28@0",
            "content": "Background",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_28",
            "start": 0,
            "end": 9,
            "label": {}
        },
        {
            "ix": "2-288_v1_29@0",
            "content": "JSim is the latest in a series of modeling/data analysis programs dating back to SimCon ( Knopp et al. , 1970 ) (named for Simulation Control).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_29",
            "start": 0,
            "end": 142,
            "label": {}
        },
        {
            "ix": "2-288_v1_29@1",
            "content": "SimCon provided a text and graphics interface to models written in Fortran.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_29",
            "start": 144,
            "end": 218,
            "label": {}
        },
        {
            "ix": "2-288_v1_29@2",
            "content": "Between 1967 and 1993, the basic methods of data analysis (e.g. function generators, loops, sensitivity, optimization) were developed and refined within the SimCon framework.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_29",
            "start": 220,
            "end": 393,
            "label": {}
        },
        {
            "ix": "2-288_v1_29@3",
            "content": "In 1993, SimCon was replaced by XSim ( King et al. , 1995 ), which implemented the same functionality under X-Windows on several Unix-like operating systems (SunOS, IRIX, Linux, AIX).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_29",
            "start": 395,
            "end": 577,
            "label": {}
        },
        {
            "ix": "2-288_v1_29@4",
            "content": "XSim also added custom graphic model interfaces, on-demand expression graphing, worlds-within-worlds graphics ( Harris et al. , 1994 ), remote (client-server) computation and limited multi-processing.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_29",
            "start": 579,
            "end": 778,
            "label": {}
        },
        {
            "ix": "2-288_v1_29@5",
            "content": "JSim development efforts began in 1999 and augmented the functionality developed in SimCon and XSim by adding simplified model specification (using the MML modeling language), facilities for data analysis and for distribution of results and of models (using project files), popular desktop and laptop support (Windows, Macintosh & Linux) and fully integrated multiprocessing for shared memory systems ( Raymond et al. , 2003 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_29",
            "start": 780,
            "end": 1206,
            "label": {}
        },
        {
            "ix": "2-288_v1_30@0",
            "content": "JSim overview",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_30",
            "start": 0,
            "end": 12,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@0",
            "content": "JSim is quite general, and while designed for evaluating models against experimental data, it also serves pure model development quite well.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 0,
            "end": 139,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@1",
            "content": "It is built around a \u201cproject file\u201d (.proj), that may hold many data sets, several different models and the results of multiple types of analyses testing models against the data and against each other.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 141,
            "end": 341,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@2",
            "content": "JSim\u2019s handling of ODEs (ordinary differential equations) suits it for traditional compartmental modeling and SBML ( Hucka et al. , 2003 ), CellML ( Cuellar et al. , 2003 ), and pharmacokinetic (PK) models in general.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 343,
            "end": 559,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@3",
            "content": "Solving PDEs (partial differential equations) hugely expands the range of processes that can be modeled in physiology and clinical medicine ( Goresky, 1963 ; Bassingthwaighte, 1974 ), biophysics, and PKPD modeling ( Roberts & Rowland, 1986 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 561,
            "end": 802,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@4",
            "content": "JSim handles spatial diffusion ( Barta et al. , 2000 ; Safford & Bassingthwaighte, 1977 ) and convection-diffusion problems.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 804,
            "end": 927,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@5",
            "content": "From soon after its release in 1999, JSim provided automated unit consistency checking in all equations and also automated unit conversion (such as minutes to seconds) in calculations ( Chizeck et al. , 2009 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 929,
            "end": 1138,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@6",
            "content": "This pair of features automates the first stage of verification of the model\u2019s mathematical implementation by making sure that every equation has unitary balance.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 1140,
            "end": 1301,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@7",
            "content": "Modeling taking account of the anatomical quantitative constraints is now recognized as critical and is facilitated by the automated unit checking ( Vinnakota & Bassingthwaighte, 2004 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 1303,
            "end": 1488,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@8",
            "content": "The second phase of compilation parses the details of the equations and sequences them for efficient computation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 1490,
            "end": 1602,
            "label": {}
        },
        {
            "ix": "2-288_v1_31@9",
            "content": "For an example, a cardiovascular-respiratory system model ( Neal & Bassingthwaighte, 2007 ), ran under JSim exactly 300 times faster than a Matlab-Simulink version of the identical model (Howard Chizeck/Stephen Hawley: personal communication).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_31",
            "start": 1604,
            "end": 1846,
            "label": {}
        },
        {
            "ix": "2-288_v1_32@0",
            "content": "MML (Mathematical Modeling Language) is the declarative modeling language developed for JSim and used for composing models.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_32",
            "start": 0,
            "end": 122,
            "label": {}
        },
        {
            "ix": "2-288_v1_32@1",
            "content": "Its archival version is XMML, in the XML style of SBML and CellML.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_32",
            "start": 124,
            "end": 189,
            "label": {}
        },
        {
            "ix": "2-288_v1_32@2",
            "content": "In MML, one writes mathematical equations directly into the code, and the MML compiler handles converting the set of equations into a sequence of computations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_32",
            "start": 191,
            "end": 349,
            "label": {}
        },
        {
            "ix": "2-288_v1_32@3",
            "content": "Since the equation representation is closely related to the conceptual formulation of the model, MML models are easily understood, and pieces of the model are readily interpretable as particular processes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_32",
            "start": 351,
            "end": 555,
            "label": {}
        },
        {
            "ix": "2-288_v1_32@4",
            "content": "The fact that one can write several models into a single MML program allows one to compare competing hypotheses (models).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_32",
            "start": 557,
            "end": 677,
            "label": {}
        },
        {
            "ix": "2-288_v1_32@5",
            "content": "Having a standard layout for graphs and for ASCII text output of model solutions is convenient.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_32",
            "start": 679,
            "end": 773,
            "label": {}
        },
        {
            "ix": "2-288_v1_32@6",
            "content": "For special purposes, as for a model to be used in clinical practice or teaching, an alternative graphical user interface specifically designed for the model can be readily substituted for the default layout.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_32",
            "start": 775,
            "end": 982,
            "label": {}
        },
        {
            "ix": "2-288_v1_32@7",
            "content": "If a particular model absolutely requires procedural code, this can be developed in C, or Fortran or Java, and invoked as part of the model computation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_32",
            "start": 984,
            "end": 1135,
            "label": {}
        },
        {
            "ix": "2-288_v1_33@0",
            "content": "JSim problem domain",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_33",
            "start": 0,
            "end": 18,
            "label": {}
        },
        {
            "ix": "2-288_v1_34@0",
            "content": "JSim is a general purpose simulation and data analysis software system.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_34",
            "start": 0,
            "end": 70,
            "label": {}
        },
        {
            "ix": "2-288_v1_34@1",
            "content": "It handles a wide range of mathematical problems including algebraic equations, ordinary differential equations, and parabolic, hyperbolic and elliptic partial differential equations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_34",
            "start": 72,
            "end": 254,
            "label": {}
        },
        {
            "ix": "2-288_v1_34@2",
            "content": "It contains 8 ODE and 3 PDE solvers implementing a variety of algorithms which allow the flexibility to strike a balance between accuracy and computational speed.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_34",
            "start": 256,
            "end": 417,
            "label": {}
        },
        {
            "ix": "2-288_v1_34@3",
            "content": "It performs time series analyses including forward and backwards Fourier transforms.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_34",
            "start": 419,
            "end": 502,
            "label": {}
        },
        {
            "ix": "2-288_v1_34@4",
            "content": "MML can handle multi-dimensional PDEs but the solvers currently implemented support only two dimensions (typically time and one spatial dimension).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_34",
            "start": 504,
            "end": 650,
            "label": {}
        },
        {
            "ix": "2-288_v1_34@5",
            "content": "For two spatial dimensions the problem needs to be formulated into either ODE nodes or PDEs in one spatial dimension linked by ODEs in the other spatial dimension.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_34",
            "start": 652,
            "end": 814,
            "label": {}
        },
        {
            "ix": "2-288_v1_34@6",
            "content": "JSim does not support complex numbers or matrix notation and associated matrix operators; in JSim all matrices must be written explicitly as a set of equations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_34",
            "start": 816,
            "end": 975,
            "label": {}
        },
        {
            "ix": "2-288_v1_35@0",
            "content": "JSim can be used in any discipline where mathematical equations are used for modeling and analyzing data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_35",
            "start": 0,
            "end": 104,
            "label": {}
        },
        {
            "ix": "2-288_v1_35@1",
            "content": "JSim was originally developed to model and analyze physiological phenomena and many of the built-in tools were developed to handle physiological problems.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_35",
            "start": 106,
            "end": 259,
            "label": {}
        },
        {
            "ix": "2-288_v1_35@2",
            "content": "But all of the JSim tools can be applied to any other scientific discipline.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_35",
            "start": 261,
            "end": 336,
            "label": {}
        },
        {
            "ix": "2-288_v1_35@3",
            "content": "JSim excels at analyzing time course and spatial domain data in complex systems ( Beard & Bassingthwaighte, 2000 ; Beard et al. , 2005 ; Bassingthwaighte et al. , 2006b ; Suenson et al. , 1974 ; Safford & Bassingthwaighte, 1977 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_35",
            "start": 338,
            "end": 567,
            "label": {}
        },
        {
            "ix": "2-288_v1_35@4",
            "content": "Examples include modeling pharmacokinetic/dynamic (PK/PD), radiological (CT, PET, MRI) and multiple indicator dilution (MID) data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_35",
            "start": 569,
            "end": 698,
            "label": {}
        },
        {
            "ix": "2-288_v1_36@0",
            "content": "JSim\u2019s Mathematical Modeling Language, MML",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_36",
            "start": 0,
            "end": 41,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@0",
            "content": "JSim uses the Mathematical Modeling Language (MML) to describe models.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 0,
            "end": 69,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@1",
            "content": "When JSim imports other model formats (e.g. SBML, CellML, Antimony), it translates them to MML.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 71,
            "end": 165,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@2",
            "content": "MML is a concise, ASCII text language for defining parameters and variables and for writing the equations describing a model.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 167,
            "end": 291,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@3",
            "content": "MML is a declarative language (as opposed to procedural or imperative languages such as MATLAB, Java, Python, and FORTRAN), meaning that, in MML, equations represent mathematical equality, rather than providing a directive to calculate the left-hand side variable from the expression on the right.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 293,
            "end": 589,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@4",
            "content": "In MML, it makes no difference if terms in an equation appear on the left or right hand side.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 591,
            "end": 683,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@5",
            "content": "Such equations are a direct representation of the mathematical ideas in a model rather than a procedural formulation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 685,
            "end": 801,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@6",
            "content": "This improves readability and allows for more extensive consistency checks than procedural formulations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 803,
            "end": 906,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@7",
            "content": "The MML compiler checks to ensure that all variables are completely, but not overly, specified \u2013 a check unavailable in procedural languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 908,
            "end": 1048,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@8",
            "content": "The compiler sequences the calculations based on the dependencies of the variables to be computed, thus eliminating order-of-operations errors that are possible in procedural languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 1050,
            "end": 1234,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@9",
            "content": "MML variables are (optionally) labeled with physical units, enabling the compiler to reject equations with unitary imbalances; this also allows the automated insertion of appropriate unit conversion factors when needed ( Chizeck et al. , 2009 ) (e.g. mmHg to kPa).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 1236,
            "end": 1499,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@10",
            "content": "This relieves the modeler of the burden of adding unit conversion factors (another potential source of error) and aids readability, since equations need not be cluttered with conversion factors.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 1501,
            "end": 1694,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@11",
            "content": "MML\u2019s design supports the model development and unit balance aspects of modeling steps 2 and 3 above.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 1696,
            "end": 1796,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@12",
            "content": "An example of MML code is shown below as Box 1 , which codes a \u201cprogress curve\u201d, the concentration-time curves for hypoxanthine to xanthine to uric acid catalyzed by the enzyme xanthine oxidase through the two oxidation steps.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 1798,
            "end": 2023,
            "label": {}
        },
        {
            "ix": "2-288_v1_37@13",
            "content": "MML code for partial differential equations is given in Box 2 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_37",
            "start": 2025,
            "end": 2087,
            "label": {}
        },
        {
            "ix": "2-288_v1_38@0",
            "content": "Box 1.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_38",
            "start": 0,
            "end": 5,
            "label": {}
        },
        {
            "ix": "2-288_v1_40@0",
            "content": "Numeric solvers",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_40",
            "start": 0,
            "end": 14,
            "label": {}
        },
        {
            "ix": "2-288_v1_41@0",
            "content": "MML is designed without reference to the numerical algorithms that will be used for simulation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_41",
            "start": 0,
            "end": 94,
            "label": {}
        },
        {
            "ix": "2-288_v1_41@1",
            "content": "Rather, the user selects the numerical methods in the JSim run time user interface.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_41",
            "start": 96,
            "end": 178,
            "label": {}
        },
        {
            "ix": "2-288_v1_41@2",
            "content": "At present JSim provides 8 algorithms for solving ODEs ( Table 1 ) and 3 for PDEs ( Table 2 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_41",
            "start": 180,
            "end": 273,
            "label": {}
        },
        {
            "ix": "2-288_v1_41@3",
            "content": "Numerical methods for stochastic simulation are variants on the Gillespie algorithm ( Gillespie, 1977 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_41",
            "start": 275,
            "end": 378,
            "label": {}
        },
        {
            "ix": "2-288_v1_41@4",
            "content": "JSim\u2019s solvers support modeling steps 4 to 6 above.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_41",
            "start": 380,
            "end": 430,
            "label": {}
        },
        {
            "ix": "2-288_v1_42@0",
            "content": "Table 1.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_42",
            "start": 0,
            "end": 7,
            "label": {}
        },
        {
            "ix": "2-288_v1_44@0",
            "content": "Table 2.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_44",
            "start": 0,
            "end": 7,
            "label": {}
        },
        {
            "ix": "2-288_v1_46@0",
            "content": "To solve differential equations one needs initial conditions, and JSim\u2019s parser (precompiler) demands these, as in Box 1 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_46",
            "start": 0,
            "end": 121,
            "label": {}
        },
        {
            "ix": "2-288_v1_46@1",
            "content": "Partial differential equations require also boundary conditions, as seen in the code for a two-region convection-diffusion-permeation-reaction model ( Box 2 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_46",
            "start": 123,
            "end": 281,
            "label": {}
        },
        {
            "ix": "2-288_v1_47@0",
            "content": "Function generators",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_47",
            "start": 0,
            "end": 18,
            "label": {}
        },
        {
            "ix": "2-288_v1_48@0",
            "content": "Many physiological systems or components (e.g. one for the uptake of a metabolite) can be considered as operators.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_48",
            "start": 0,
            "end": 113,
            "label": {}
        },
        {
            "ix": "2-288_v1_48@1",
            "content": "The operator takes an input function (e.g. inflowing solute concentration) and produces an output function (e.g. outflowing solute and metabolite concentrations).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_48",
            "start": 115,
            "end": 276,
            "label": {}
        },
        {
            "ix": "2-288_v1_48@2",
            "content": "Model behavior can be tested by using various input waveforms (e.g. as in Box 2 \u201cextern real Cin(t)\u201d) described by JSim \u201cfunction generators\u201d.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_48",
            "start": 278,
            "end": 419,
            "label": {}
        },
        {
            "ix": "2-288_v1_48@3",
            "content": "These might be time series signals of diverse form (pulses, pulse combinations, sines, shaped sawtooth), probability density functions (Gaussian, exponential, Poisson, lognormal, gamma variate, random walk, etc.), or come directly from experimental data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_48",
            "start": 421,
            "end": 674,
            "label": {}
        },
        {
            "ix": "2-288_v1_48@4",
            "content": "When the system is linear (output area equals input) and stationary (response same at another time), then the output is the convolution of the operator\u2019s transfer function (the response to an infinitely short pulse input) with the input function.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_48",
            "start": 676,
            "end": 921,
            "label": {}
        },
        {
            "ix": "2-288_v1_48@5",
            "content": "Users select input functions at run time for testing numerical algorithms for correctness (verification testing), for model exploration (behavioral analysis) or for analyzing data as for steps 6 and 7 in our \u201c13-Step\u201d process.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_48",
            "start": 923,
            "end": 1148,
            "label": {}
        },
        {
            "ix": "2-288_v1_49@0",
            "content": "Model behavioral analysis and visualization",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_49",
            "start": 0,
            "end": 42,
            "label": {}
        },
        {
            "ix": "2-288_v1_50@0",
            "content": "We will use a simple convection-diffusion reaction model ( Bassingthwaighte, 1974 ; Bassingthwaighte & Goresky, 1984 ) to illustrate some facilities for visualizing model solutions and the effect of varying parameter values on them.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_50",
            "start": 0,
            "end": 231,
            "label": {}
        },
        {
            "ix": "2-288_v1_50@1",
            "content": "The system is diagrammed in Figure 1 and the code is provided in Box 2 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_50",
            "start": 233,
            "end": 304,
            "label": {}
        },
        {
            "ix": "2-288_v1_51@0",
            "content": "Figure 1.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_51",
            "start": 0,
            "end": 8,
            "label": {}
        },
        {
            "ix": "2-288_v1_53@0",
            "content": "Box 2.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_53",
            "start": 0,
            "end": 5,
            "label": {}
        },
        {
            "ix": "2-288_v1_55@0",
            "content": "Plot pages",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_55",
            "start": 0,
            "end": 9,
            "label": {}
        },
        {
            "ix": "2-288_v1_56@0",
            "content": "JSim provides several mechanisms for visualization, providing insight about model dynamics.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_56",
            "start": 0,
            "end": 90,
            "label": {}
        },
        {
            "ix": "2-288_v1_56@1",
            "content": "The most basic are plot pages, each of which may contain line, scatter, contour and colormap plots.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_56",
            "start": 92,
            "end": 190,
            "label": {}
        },
        {
            "ix": "2-288_v1_56@2",
            "content": "One may plot experimental data and model solutions (from one or more models), scaled automatically or manually, linear or logarithmic, plotted as they are being computed or displayed or edited later.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_56",
            "start": 192,
            "end": 390,
            "label": {}
        },
        {
            "ix": "2-288_v1_56@3",
            "content": "Multiple plot page configurations are stored in each project, enabling reproducible analysis (e.g. all the data and graphs for a particular journal article).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_56",
            "start": 392,
            "end": 548,
            "label": {}
        },
        {
            "ix": "2-288_v1_56@4",
            "content": "JSim plot pages support modeling steps 1, 5, 6, 7, 8 and 10 above (display of experimental data and model solutions, verify solution accuracy, explore model behavior, display of sensitivity curves and assessments of goodness of fit).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_56",
            "start": 550,
            "end": 782,
            "label": {}
        },
        {
            "ix": "2-288_v1_57@0",
            "content": "LOOPS: Iterating solutions to exhibit behavior",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_57",
            "start": 0,
            "end": 45,
            "label": {}
        },
        {
            "ix": "2-288_v1_58@0",
            "content": "Model loops are a feature for behavioral analysis that plot data from a family of model runs using a user-chosen sequence of parameter values.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_58",
            "start": 0,
            "end": 141,
            "label": {}
        },
        {
            "ix": "2-288_v1_58@1",
            "content": "For example, Figure 2 , \u201clooping over\u201d, i.e. making a sequence of changes in a parameter value for the membrane permeability in a tracer uptake model yields a family of plots showing how outflow tracer concentration curves would vary with varying permeability.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_58",
            "start": 143,
            "end": 402,
            "label": {}
        },
        {
            "ix": "2-288_v1_58@2",
            "content": "The curves, of course, depend upon the settings for the other parameters of the model, so the looping sequence should be initiated under widely divergent conditions in order to understand the \u201cconditions\u201d (the regions of state space) where the chosen parameter may have little influence or maximum influence.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_58",
            "start": 404,
            "end": 711,
            "label": {}
        },
        {
            "ix": "2-288_v1_58@3",
            "content": "JSim\u2019s loops facility support modeling steps 6 and 7 above (verify solution accuracy, explore model state space).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_58",
            "start": 713,
            "end": 825,
            "label": {}
        },
        {
            "ix": "2-288_v1_58@4",
            "content": "A convenient feature of the LOOPS function is that the user can stop the solution, automatically starting the next one, whenever desired, speeding up the review of solutions.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_58",
            "start": 827,
            "end": 1000,
            "label": {}
        },
        {
            "ix": "2-288_v1_58@5",
            "content": "This is especially important in large models with long computation times.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_58",
            "start": 1002,
            "end": 1074,
            "label": {}
        },
        {
            "ix": "2-288_v1_59@0",
            "content": "Figure 2.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_59",
            "start": 0,
            "end": 8,
            "label": {}
        },
        {
            "ix": "2-288_v1_61@0",
            "content": "Nested plots",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_61",
            "start": 0,
            "end": 11,
            "label": {}
        },
        {
            "ix": "2-288_v1_62@0",
            "content": "Nested plots ( Figure 3 ) are JSim\u2019s version of worlds-within-worlds graphics ( Harris et al. , 1994 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_62",
            "start": 0,
            "end": 102,
            "label": {}
        },
        {
            "ix": "2-288_v1_62@1",
            "content": "Each nested plot is a 2-dimensional array of plots, each of which represents the form of a set of model solutions with a pair of distinct parameter value.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_62",
            "start": 104,
            "end": 257,
            "label": {}
        },
        {
            "ix": "2-288_v1_62@2",
            "content": "Nested plots enable simultaneous visualization of the effect of up to six independently varying parameters.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_62",
            "start": 259,
            "end": 365,
            "label": {}
        },
        {
            "ix": "2-288_v1_62@3",
            "content": "JSim nested plots support modeling steps 6\u20138 above (verify accuracy, explore model state space, sensitivity analysis).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_62",
            "start": 367,
            "end": 484,
            "label": {}
        },
        {
            "ix": "2-288_v1_63@0",
            "content": "Figure 3.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_63",
            "start": 0,
            "end": 8,
            "label": {}
        },
        {
            "ix": "2-288_v1_65@0",
            "content": "Sensitivity analysis",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_65",
            "start": 0,
            "end": 19,
            "label": {}
        },
        {
            "ix": "2-288_v1_66@0",
            "content": "By \u201csensitivity analysis\u201d we mean the examination of the influences of individual parameters on the model responses under a wide variety of conditions.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_66",
            "start": 0,
            "end": 150,
            "label": {}
        },
        {
            "ix": "2-288_v1_66@1",
            "content": "The sensitivity function, S(t) is the change in magnitude, dQ, of variable Q, to a small change in a parameter value, dP. It may be expressed in a normalized form, (dQ/Q)/(dP/P), or unnormalized form, dQ/dP. As an example consider the same model as was explored in Figure 3 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_66",
            "start": 152,
            "end": 426,
            "label": {}
        },
        {
            "ix": "2-288_v1_66@2",
            "content": "Figure 4 shows the sensitivities of the outflow concentration of a solute to a change in interstitial fluid volume (V isf ) or capillary wall conductance (PS) following an injection of that solute at the capillary entrance.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_66",
            "start": 428,
            "end": 650,
            "label": {}
        },
        {
            "ix": "2-288_v1_66@3",
            "content": "The upper panel shows the outflow concentration without parameter perturbation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_66",
            "start": 652,
            "end": 730,
            "label": {}
        },
        {
            "ix": "2-288_v1_66@4",
            "content": "The middle panel plots the unnormalized sensitivity functions, and the bottom plot shows the normalized sensitivity functions (with the early part of the curves removed when C out is negligible).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_66",
            "start": 732,
            "end": 926,
            "label": {}
        },
        {
            "ix": "2-288_v1_66@5",
            "content": "Increasing PS will lower the height of C out for the first 10 seconds with the greatest reduction at the peak of C out at ~8 seconds (due to greater flux of metabolite into the ISF); after 10 seconds, the height of C out will be increased (back flux of metabolite from ISF).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_66",
            "start": 928,
            "end": 1201,
            "label": {}
        },
        {
            "ix": "2-288_v1_66@6",
            "content": "Increasing V isf has the effect of lowering C out for the first 24 seconds, then raising it after 24 seconds.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_66",
            "start": 1203,
            "end": 1311,
            "label": {}
        },
        {
            "ix": "2-288_v1_66@7",
            "content": "JSim\u2019s sensitivity analysis supports modeling step 7 above.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_66",
            "start": 1313,
            "end": 1371,
            "label": {}
        },
        {
            "ix": "2-288_v1_67@0",
            "content": "Figure 4.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_67",
            "start": 0,
            "end": 8,
            "label": {}
        },
        {
            "ix": "2-288_v1_69@0",
            "content": "Optimization",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_69",
            "start": 0,
            "end": 11,
            "label": {}
        },
        {
            "ix": "2-288_v1_70@0",
            "content": "Manual parameter adjustment to fit the model to experimental data is encouraged as a means of gaining insight into model behavior.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_70",
            "start": 0,
            "end": 129,
            "label": {}
        },
        {
            "ix": "2-288_v1_70@1",
            "content": "Automated parameter optimization is usually much faster; eight methods are provided (See Table 3 ); we recommend testing several in order to test speed and reliability with respect to the particular types of data and model.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_70",
            "start": 131,
            "end": 353,
            "label": {}
        },
        {
            "ix": "2-288_v1_70@2",
            "content": "Given that some parameters are known or highly constrained, one may obtain the best model fit to the data for a particular subset of model parameters, and one may also, for some but not all of the optimizers, constrain the range for each parameter value, applying scientific judgment.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_70",
            "start": 355,
            "end": 638,
            "label": {}
        },
        {
            "ix": "2-288_v1_70@3",
            "content": "Optimization helps in finding systematic misfits to the data (and the possible rejection of the hypothesis), and in estimating parameter values.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_70",
            "start": 640,
            "end": 783,
            "label": {}
        },
        {
            "ix": "2-288_v1_71@0",
            "content": "Table 3.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_71",
            "start": 0,
            "end": 7,
            "label": {}
        },
        {
            "ix": "2-288_v1_73@0",
            "content": "The optimizer works to minimize an objective function, usually a weighted sum of squares of the differences between the model solution and the experimental data at each observation time or spatial position.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_73",
            "start": 0,
            "end": 205,
            "label": {}
        },
        {
            "ix": "2-288_v1_73@1",
            "content": "This may require freeing up most parameters for optimization to make sure that an assumed constraint isn\u2019t creating a biased solution.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_73",
            "start": 207,
            "end": 340,
            "label": {}
        },
        {
            "ix": "2-288_v1_73@2",
            "content": "JSim provides a graph of residuals (the differences between model and data); sign tests and other statistical appraisals of the residuals as a function of time help to distinguish systematic from random deviations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_73",
            "start": 342,
            "end": 555,
            "label": {}
        },
        {
            "ix": "2-288_v1_73@3",
            "content": "JSim\u2019s optimization facilities support modeling steps 9\u201312 above (fitting solutions, assessing goodness of fit, examining parameter correlations, evaluating confidence limits).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_73",
            "start": 557,
            "end": 732,
            "label": {}
        },
        {
            "ix": "2-288_v1_74@0",
            "content": "Parameter confidence ranges",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_74",
            "start": 0,
            "end": 26,
            "label": {}
        },
        {
            "ix": "2-288_v1_75@0",
            "content": "Model fitting to the data is never unique but is guided by the weighting of the observed data points and the noise in the data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_75",
            "start": 0,
            "end": 126,
            "label": {}
        },
        {
            "ix": "2-288_v1_75@1",
            "content": "Parameter estimates are not exact, but merely estimated, and even possibly biased by the user\u2019s choice of the weights on individual data points.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_75",
            "start": 128,
            "end": 271,
            "label": {}
        },
        {
            "ix": "2-288_v1_75@2",
            "content": "How to obtain a \u201cbest fit\u201d of model function to data is always, in a sense, a personal choice.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_75",
            "start": 273,
            "end": 366,
            "label": {}
        },
        {
            "ix": "2-288_v1_75@3",
            "content": "Guidelines include weighting inversely to the likely standard deviation of each data point, or unweighting outliers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_75",
            "start": 368,
            "end": 483,
            "label": {}
        },
        {
            "ix": "2-288_v1_75@4",
            "content": "Viewing the graph of residuals (the differences between data and model) is most helpful in identifying systematic misfits.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_75",
            "start": 485,
            "end": 606,
            "label": {}
        },
        {
            "ix": "2-288_v1_76@0",
            "content": "Ignoring how one got to the point of \u201cbest fit\u201d, one desires an evaluation of the parameter values.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_76",
            "start": 0,
            "end": 98,
            "label": {}
        },
        {
            "ix": "2-288_v1_76@1",
            "content": "If the optimized parameters do generate outputs that closely match the experimental data, the question becomes what confidence can be placed on these estimates.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_76",
            "start": 100,
            "end": 259,
            "label": {}
        },
        {
            "ix": "2-288_v1_76@2",
            "content": "One simple method is to optimize using several different numerical method, i.e. different optimization algorithms and different weighting schemes, to see how much the \u201cbest fit\u201d parameter estimates change.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_76",
            "start": 261,
            "end": 465,
            "label": {}
        },
        {
            "ix": "2-288_v1_76@3",
            "content": "Other methods of estimating parameter confidence limits include using the Jacobian and using Monte Carlo methods.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_76",
            "start": 467,
            "end": 579,
            "label": {}
        },
        {
            "ix": "2-288_v1_77@0",
            "content": "Using the Jacobian : The Jacobian matrix is the matrix of the sensitivity functions for all the parameters open to optimization, as calculated at the location of the minimized objective function, the \u201cbest fit\u201d.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_77",
            "start": 0,
            "end": 210,
            "label": {}
        },
        {
            "ix": "2-288_v1_77@1",
            "content": "This matrix, which JSim calculates after each optimization provides the basis for determining correlations among parameters, and the confidence limits (standard deviations and expected ranges based on Gaussian assumptions).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_77",
            "start": 212,
            "end": 434,
            "label": {}
        },
        {
            "ix": "2-288_v1_77@2",
            "content": "The calculation assumes symmetry and linearity, and so makes only local calculations, and gives no guarantee that the \u201cbest fit\u201d is a global best fit.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_77",
            "start": 436,
            "end": 585,
            "label": {}
        },
        {
            "ix": "2-288_v1_77@3",
            "content": "While getting to the \u201cbest fit\u201d point in parameter space is data-dependent, this confidence range estimation procedure is not at all, for it is estimated solely from the shapes of the local sensitivity functions.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_77",
            "start": 587,
            "end": 798,
            "label": {}
        },
        {
            "ix": "2-288_v1_77@4",
            "content": "Thus it behooves one to get the differing estimates obtained from different optimizers, different numbers of parameters searched, and even to move the parameter \u201cbest fit\u201d values a little away from the optimizer\u2019s choice and recalculate the confidence ranges.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_77",
            "start": 800,
            "end": 1058,
            "label": {}
        },
        {
            "ix": "2-288_v1_78@0",
            "content": "Using a Monte Carlo method : A more robust, but more demanding, confidence limit calculation uses Monte Carlo methods.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_78",
            "start": 0,
            "end": 117,
            "label": {}
        },
        {
            "ix": "2-288_v1_78@1",
            "content": "The procedure is to 1) Select a noise profile for each experimental data point, ideally based on what you believe the real noise is, e.g. 5% proportional Gaussian random noise.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_78",
            "start": 119,
            "end": 294,
            "label": {}
        },
        {
            "ix": "2-288_v1_78@2",
            "content": "2) Generate a perturbation for each experimental data point by drawing randomly from the selected noise profile.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_78",
            "start": 296,
            "end": 407,
            "label": {}
        },
        {
            "ix": "2-288_v1_78@3",
            "content": "3) Re-optimize the model against the new set of perturbed data points to obtain another estimate for each parameter.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_78",
            "start": 409,
            "end": 524,
            "label": {}
        },
        {
            "ix": "2-288_v1_78@4",
            "content": "4) Repeat steps 2 and 3 many times (e.g. 1000).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_78",
            "start": 526,
            "end": 572,
            "label": {}
        },
        {
            "ix": "2-288_v1_78@5",
            "content": "From these results, one obtains a histogram of estimates for each optimized parameter, and robust confidence limits can be drawn directly from these histograms without assuming symmetry and linearity as in the Jacobian method.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_78",
            "start": 574,
            "end": 799,
            "label": {}
        },
        {
            "ix": "2-288_v1_78@6",
            "content": "JSim displays these histograms to show the distributions of parameter estimates in full detail, and 2-parameter scatter plots to show covariance.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_78",
            "start": 801,
            "end": 945,
            "label": {}
        },
        {
            "ix": "2-288_v1_78@7",
            "content": "(JSim\u2019s confidence limit calculations support modeling step 12 above.)",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_78",
            "start": 947,
            "end": 1016,
            "label": {}
        },
        {
            "ix": "2-288_v1_79@0",
            "content": "Network graphs",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_79",
            "start": 0,
            "end": 13,
            "label": {}
        },
        {
            "ix": "2-288_v1_80@0",
            "content": "JSim\u2019s model \u201cbrowser\u201d provides a visual representation of model variables as \u201cnodes\u201d and their dependencies or connectivity with each other as connecting lines or \u201cedges\u201d.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_80",
            "start": 0,
            "end": 171,
            "label": {}
        },
        {
            "ix": "2-288_v1_80@1",
            "content": "See Figure 5 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_80",
            "start": 173,
            "end": 186,
            "label": {}
        },
        {
            "ix": "2-288_v1_80@2",
            "content": "The graphs can be selected to include model parameters, or selected classes of variables, e.g. pressures, strains, concentrations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_80",
            "start": 188,
            "end": 317,
            "label": {}
        },
        {
            "ix": "2-288_v1_80@3",
            "content": "This capability is based on work by Yngve ( Yngve et al. , 2007 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_80",
            "start": 319,
            "end": 384,
            "label": {}
        },
        {
            "ix": "2-288_v1_80@4",
            "content": "JSim\u2019s model browser supports modeling step 2 above (development of the model).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_80",
            "start": 386,
            "end": 464,
            "label": {}
        },
        {
            "ix": "2-288_v1_81@0",
            "content": "Figure 5.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_81",
            "start": 0,
            "end": 8,
            "label": {}
        },
        {
            "ix": "2-288_v1_83@0",
            "content": "Implementation",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_83",
            "start": 0,
            "end": 13,
            "label": {}
        },
        {
            "ix": "2-288_v1_84@0",
            "content": "JSim is implemented in the Java computer language ( Gosling & McGilton, 2003 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_84",
            "start": 0,
            "end": 78,
            "label": {}
        },
        {
            "ix": "2-288_v1_84@1",
            "content": "The major factors affecting this choice are Java's platform independent GUI (allowing Windows, Macintosh and Linux versions to be developed in a single code base), object-oriented features and garbage collection (simplifying complex coding), advanced utilities (associative arrays, dynamic linking, remote procedure calls), strong type checking (allowing many common coding errors to be caught at compile time) and robust exception mechanism (simplifying coding and enabling a virtually crash-proof GUI).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_84",
            "start": 80,
            "end": 583,
            "label": {}
        },
        {
            "ix": "2-288_v1_84@2",
            "content": "Native code (C and Fortran) is used in certain restricted circumstances using the Java Native Interface (JNI) ( Liang, 1999 ) to reduce computational overhead (transcendental functions, 2D array access) and the availability of legacy code libraries (ODE, PDE and optimization numerical methods).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_84",
            "start": 585,
            "end": 879,
            "label": {}
        },
        {
            "ix": "2-288_v1_85@0",
            "content": "The MML language is parsed using JLex scanner generator and the CUP parser generator ( Appel, 1998 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_85",
            "start": 0,
            "end": 100,
            "label": {}
        },
        {
            "ix": "2-288_v1_85@1",
            "content": "These tools, similar to the classic Unix lex and yacc ( Aho et al. , 1988 ), were among the few parser generation tools available for Java when JSim was first developed.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_85",
            "start": 102,
            "end": 270,
            "label": {}
        },
        {
            "ix": "2-288_v1_85@2",
            "content": "Using a formal parser generator allows MML to be concise, intuitive, consistent and extensible.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_85",
            "start": 272,
            "end": 366,
            "label": {}
        },
        {
            "ix": "2-288_v1_85@3",
            "content": "MML's declarative structure is an intuitive expression of a model's underlying mathematics (simplifying the modeler\u2019s learning) and allows the overall structure of the model to be examined for mathematical correctness (detecting overspecification or underspecification) in a way that is not possible with a procedural specification.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_85",
            "start": 368,
            "end": 699,
            "label": {}
        },
        {
            "ix": "2-288_v1_85@4",
            "content": "Units and unit checking ( Chizeck et al. , 2009 ) were added to MML soon after its initial design to further improve model conciseness and assure unit balance in the equations as a first step in verifying that the mathematics is rendered correctly by the numerics.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_85",
            "start": 701,
            "end": 964,
            "label": {}
        },
        {
            "ix": "2-288_v1_86@0",
            "content": "MML is compiled into Java model computational code for run-time execution.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_86",
            "start": 0,
            "end": 73,
            "label": {}
        },
        {
            "ix": "2-288_v1_86@1",
            "content": "This results in faster model execution (in comparison to table-driven computations) and allows more flexible model computational structure (multiple time sweeps, indexed loops).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_86",
            "start": 75,
            "end": 251,
            "label": {}
        },
        {
            "ix": "2-288_v1_86@2",
            "content": "JSim models run asynchronously to the GUI in contrast to most simulators which alternate computational and graphical update steps.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_86",
            "start": 253,
            "end": 382,
            "label": {}
        },
        {
            "ix": "2-288_v1_86@3",
            "content": "This approach dramatically improves performance and user response, especially when remote computation is used.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_86",
            "start": 384,
            "end": 493,
            "label": {}
        },
        {
            "ix": "2-288_v1_86@4",
            "content": "JSim's remote computation is implemented using Java Remote Method Invocation (RMI) ( Harold, 1997 ), providing reliable access to networked computational servers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_86",
            "start": 495,
            "end": 656,
            "label": {}
        },
        {
            "ix": "2-288_v1_86@5",
            "content": "This approach also isolates the JNI methods (above) in the computational engine, allowing the JSim GUI to run as a pure Java browser applet.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_86",
            "start": 658,
            "end": 797,
            "label": {}
        },
        {
            "ix": "2-288_v1_86@6",
            "content": "JSim multiprocessing is implemented using Java threads ( Oaks & Wong, 2004 ) providing excellent performance and seamless integration with the Java memory management and exception mechanisms (providing application stability).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_86",
            "start": 799,
            "end": 1023,
            "label": {}
        },
        {
            "ix": "2-288_v1_86@7",
            "content": "MML code is stored as XMML for distribution, and has automated translators into XMML, SBML, CellML, and with limitations into Matlab ( Smith et al. , 2013 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_86",
            "start": 1025,
            "end": 1181,
            "label": {}
        },
        {
            "ix": "2-288_v1_87@0",
            "content": "Reproducibility",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_87",
            "start": 0,
            "end": 14,
            "label": {}
        },
        {
            "ix": "2-288_v1_88@0",
            "content": "The issue of reproducibility, or should we say the all-too-frequent failures of attempts to reproduce published results, are beginning to be recognized as a critical problem in advancing the biological sciences.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_88",
            "start": 0,
            "end": 210,
            "label": {}
        },
        {
            "ix": "2-288_v1_88@1",
            "content": "It is easy to understand biological studies, with inherently great variability in materials and analysis procedures, should be less exact than those in the physical sciences, but it is not so forgivable that reproducing mathematical models of biological systems is a major problem.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_88",
            "start": 212,
            "end": 492,
            "label": {}
        },
        {
            "ix": "2-288_v1_88@2",
            "content": "The two major repositories of published biological models, Biomodels ( http://www.ebi.ac.uk/biomodels-main/ ) using SBML ( www.sbml.org ) and CellML (models.cellml.org), together have about 1000 curated models: there were errors in the publications requiring corrections in all but 5 of these, before the models could be demonstrated to run appropriately.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_88",
            "start": 494,
            "end": 848,
            "label": {}
        },
        {
            "ix": "2-288_v1_88@3",
            "content": "These models all used algebraic, ODEs, or differential-algebraic equations and so must be regarded as relatively simple computationally compared to finite-element models or spatially dependent models.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_88",
            "start": 850,
            "end": 1049,
            "label": {}
        },
        {
            "ix": "2-288_v1_88@4",
            "content": "That only 0.5% of the not very complex models were reproducible is truly alarming, and demonstrates the lack of dedication to making scientific advances useful to others.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_88",
            "start": 1051,
            "end": 1220,
            "label": {}
        },
        {
            "ix": "2-288_v1_88@5",
            "content": "Some open access journals, such as F1000Research, are aiming to improve this sad state, by requiring open source code to be deposited, hopefully along with the data that provide tests of the model hypotheses.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_88",
            "start": 1222,
            "end": 1429,
            "label": {}
        },
        {
            "ix": "2-288_v1_88@6",
            "content": "A Special Section in Science ( Stone & Jasny, 2013 ) is devoted to the issues of open access, addressing open access, peer review, the changing publishing scenario, and encouraging broader methods of communication.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_88",
            "start": 1431,
            "end": 1644,
            "label": {}
        },
        {
            "ix": "2-288_v1_88@7",
            "content": "F1000s founder, Victor Tracz, is featured as the \u201cSeer of Science Publishing\u201d, prodding us to do better.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_88",
            "start": 1646,
            "end": 1749,
            "label": {}
        },
        {
            "ix": "2-288_v1_89@0",
            "content": "Project files",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_89",
            "start": 0,
            "end": 12,
            "label": {}
        },
        {
            "ix": "2-288_v1_90@0",
            "content": "JSim project files store a set of codes for models, illustrative figures or diagrams, parameter sets, multiple data sets, the settings for looping, sensitivities, behavioral analysis, and optimizations, plot page configurations, and for project notes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_90",
            "start": 0,
            "end": 250,
            "label": {}
        },
        {
            "ix": "2-288_v1_90@1",
            "content": "Many models in the Physiome Repository (most of which are JSim-based) have experimental data in the project files for validation testing.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_90",
            "start": 252,
            "end": 388,
            "label": {}
        },
        {
            "ix": "2-288_v1_90@2",
            "content": "Project files support the reproduction of a set of simulations and analyses for their sharing across JSim\u2019s supported platforms (Windows, Mac OS, Linux).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_90",
            "start": 390,
            "end": 542,
            "label": {}
        },
        {
            "ix": "2-288_v1_90@3",
            "content": "Project files support the modeling steps 1 and 13 above (from importation of data, to preservation and distribution of analyses).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_90",
            "start": 544,
            "end": 672,
            "label": {}
        },
        {
            "ix": "2-288_v1_90@4",
            "content": "The MML, XMML and all the data and analyses are preserved in an ASCII format; thus the files tend to be small.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_90",
            "start": 674,
            "end": 783,
            "label": {}
        },
        {
            "ix": "2-288_v1_90@5",
            "content": "The models described above take < 100 kB; large models with several hundred ODEs take up < 500 kB even with large time series of physiological data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_90",
            "start": 785,
            "end": 932,
            "label": {}
        },
        {
            "ix": "2-288_v1_90@6",
            "content": "These files are all human readable, and ready to run when opened in JSim.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_90",
            "start": 934,
            "end": 1006,
            "label": {}
        },
        {
            "ix": "2-288_v1_90@7",
            "content": "They contain everything used by the program: the notes, the source code, and the control parameters for all the steps in the analysis.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_90",
            "start": 1008,
            "end": 1141,
            "label": {}
        },
        {
            "ix": "2-288_v1_90@8",
            "content": "They are editable in any word processor, but one avoids doing that since it is easier to enter code and notes under JSim and not risk disturbing the format in the XMML file that JSim reads.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_90",
            "start": 1143,
            "end": 1331,
            "label": {}
        },
        {
            "ix": "2-288_v1_91@0",
            "content": "There are many models on the Physiome Repository ( www.physiome.org ) with multiple data sets, model fits to data, and optimization results.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_91",
            "start": 0,
            "end": 139,
            "label": {}
        },
        {
            "ix": "2-288_v1_91@1",
            "content": "Examples are that of Kuikka et al. on glucose uptake by myocardium ( Kuikka et al. , 1986 ), [models 163 and 173], xanthine oxidase reactions ( Bassingthwaighte & Chinn, 2013 ), [model 324], and lung endothelial serotonin uptake ( Jardine & Bassingthwaighte, 2013 ), [model 198].",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_91",
            "start": 141,
            "end": 419,
            "label": {}
        },
        {
            "ix": "2-288_v1_91@2",
            "content": "All the JSim project files are stored in a Concurrent Versions System (CVS) archive so that the latest versions, as well as older versions, are always available.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_91",
            "start": 421,
            "end": 581,
            "label": {}
        },
        {
            "ix": "2-288_v1_91@3",
            "content": "The models themselves are copyrighted but researchers are given the freedom to download, modify, and to construct new models from them so long as original authorship is acknowledged.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_91",
            "start": 583,
            "end": 764,
            "label": {}
        },
        {
            "ix": "2-288_v1_92@0",
            "content": "Modeling over the web",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_92",
            "start": 0,
            "end": 20,
            "label": {}
        },
        {
            "ix": "2-288_v1_93@0",
            "content": "The archived JSim models at www.physiome.org can be run over the web, with complete freedom to vary the parameters, modify the code, compile and run, import one\u2019s own data for analysis, and save a modified and augmented file to one\u2019s own computer for further use.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_93",
            "start": 0,
            "end": 262,
            "label": {}
        },
        {
            "ix": "2-288_v1_93@1",
            "content": "(Models based on MATLAB or FORTRAN, a small fraction of the repository, cannot be run over the web but can be downloaded).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_93",
            "start": 264,
            "end": 385,
            "label": {}
        },
        {
            "ix": "2-288_v1_94@0",
            "content": "Summary",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_94",
            "start": 0,
            "end": 6,
            "label": {}
        },
        {
            "ix": "2-288_v1_95@0",
            "content": "JSim is a tool for hypothesis exploration and for analyzing data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_95",
            "start": 0,
            "end": 64,
            "label": {}
        },
        {
            "ix": "2-288_v1_95@1",
            "content": "Many of the steps in data analysis are built into JSim.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_95",
            "start": 66,
            "end": 120,
            "label": {}
        },
        {
            "ix": "2-288_v1_95@2",
            "content": "It\u2019s declarative modeling language, automatic unit balance checking, and built-in tools for solving ODEs, PDEs, and implicit equations greatly facilitate generating mathematically and physiologically consistent models.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_95",
            "start": 122,
            "end": 339,
            "label": {}
        },
        {
            "ix": "2-288_v1_95@3",
            "content": "The built-in optimizers and associated statistical data reporting, along with behavior tools, such as parameter looping and sensitivity analysis, allow one to verify and explore model behavior in the context of experimental data and simulated data from previous models.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_95",
            "start": 341,
            "end": 609,
            "label": {}
        },
        {
            "ix": "2-288_v1_95@4",
            "content": "With the ability to save these model \u2018explorations\u2019 as parameter sets within the JSim project file anyone can easily create a modeling and data analysis package that is easy to reproduce and distribute to others.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_95",
            "start": 611,
            "end": 822,
            "label": {}
        },
        {
            "ix": "2-288_v1_96@0",
            "content": "As a research tool, JSim has been developed and refined to accelerate the processes of modeling and data analysis.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_96",
            "start": 0,
            "end": 113,
            "label": {}
        },
        {
            "ix": "2-288_v1_96@1",
            "content": "Adherence to quality standards augments efficiency ( Smith et al. , 2007 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_96",
            "start": 115,
            "end": 189,
            "label": {}
        },
        {
            "ix": "2-288_v1_96@2",
            "content": "The time savings don\u2019t simply reduce the time necessary to get to a result, they also end up improving the quality of the science in two ways.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_96",
            "start": 191,
            "end": 332,
            "label": {}
        },
        {
            "ix": "2-288_v1_96@3",
            "content": "First, when it only takes a few seconds to tweak a model, re-run it, and view the results, researchers are more likely to explore many \u201cwhat if\u201d scenarios and develop a deeper understanding of model behavior, and in turn, a deeper understanding of the system being modeled.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_96",
            "start": 334,
            "end": 606,
            "label": {}
        },
        {
            "ix": "2-288_v1_96@4",
            "content": "Second, researchers are more likely to do better verification checks and higher-level analyses if they are easy to do.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_96",
            "start": 608,
            "end": 725,
            "label": {}
        },
        {
            "ix": "2-288_v1_96@5",
            "content": "When a few mouse clicks are all it takes to change solvers, time step sizes, optimization parameters, or even perform a complex Monte Carlo analysis to assess parameter correlations and confidence intervals, researchers are more likely to actually do those critical numerical checks and to take the model analysis beyond simply reporting a single parameter value.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_96",
            "start": 727,
            "end": 1089,
            "label": {}
        },
        {
            "ix": "2-288_v1_97@0",
            "content": "In addition to its use as a research tool, JSim is also very useful as a teaching tool.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_97",
            "start": 0,
            "end": 86,
            "label": {}
        },
        {
            "ix": "2-288_v1_97@1",
            "content": "JSim has been used in classes for high school, undergraduate, and graduate students, as well as many workshops for faculty members.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_97",
            "start": 88,
            "end": 218,
            "label": {}
        },
        {
            "ix": "2-288_v1_97@2",
            "content": "The fact that JSim is open source, quick to download and install, as well as executable over the web, means that it is easily available to students.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_97",
            "start": 220,
            "end": 367,
            "label": {}
        },
        {
            "ix": "2-288_v1_97@3",
            "content": "The simplicity of JSim\u2019s model specification language, where users can focus on writing and working with the mathematical equations themselves rather than controlling program flow, means that students with no programming experience can rapidly begin to understand, create, and modify JSim models.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_97",
            "start": 369,
            "end": 664,
            "label": {}
        },
        {
            "ix": "2-288_v1_97@4",
            "content": "Furthermore, JSim\u2019s interactive plotting interface and the easy access it provides to sophisticated analysis tools such as sensitivity and Monte Carlo analysis allow students to perform analyses which would ordinarily be too difficult and time consuming for them to do on their own.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_97",
            "start": 666,
            "end": 947,
            "label": {}
        },
        {
            "ix": "2-288_v1_98@0",
            "content": "Future developments",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_98",
            "start": 0,
            "end": 18,
            "label": {}
        },
        {
            "ix": "2-288_v1_99@0",
            "content": "Modular modeling",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_99",
            "start": 0,
            "end": 15,
            "label": {}
        },
        {
            "ix": "2-288_v1_100@0",
            "content": "JSim has provided support for modular modeling from its inception ( Bassingthwaighte, 2000 ) using both mathematical and biological approaches, but now, with the developing recognition that models are more consistently understandable and more amenable to modular construction when they are annotated using identified ontology systems, libraries of modules present great opportunity for efficient construction of complex model systems.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_100",
            "start": 0,
            "end": 433,
            "label": {}
        },
        {
            "ix": "2-288_v1_100@1",
            "content": "A module can be thought of as a self-contained model of an element of the larger system model and represents a specific physical, chemical or phenomenological process.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_100",
            "start": 435,
            "end": 601,
            "label": {}
        },
        {
            "ix": "2-288_v1_100@2",
            "content": "A model might use multiple instances of the same module, for example, differently parameterized Michaelis-Menten type enzymatic reactions used for different reactants.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_100",
            "start": 603,
            "end": 769,
            "label": {}
        },
        {
            "ix": "2-288_v1_100@3",
            "content": "One can build large models from a variety of modules representing physical or chemical processes such as the flux via a cell membrane transporter or ion channel or an enzymatic reaction, or a transcription regulatory pathway ( Beard et al. , 2005 ) incorporating knowledge of their connectivities.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_100",
            "start": 771,
            "end": 1067,
            "label": {}
        },
        {
            "ix": "2-288_v1_100@4",
            "content": "Allowing the modeler to draw pre-existing modules from a repository or extract them from previously developed models and enables the modeler to create new models quickly for hypothesis testing, a key to Physiome development ( Bassingthwaighte et al. , 2009 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_100",
            "start": 1069,
            "end": 1327,
            "label": {}
        },
        {
            "ix": "2-288_v1_100@5",
            "content": "Below are two approaches to implementing modular modeling within JSim.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_100",
            "start": 1329,
            "end": 1398,
            "label": {}
        },
        {
            "ix": "2-288_v1_101@0",
            "content": "Modular Program Constructor (MPC): MPC focuses on using easily understood directives to extract generically coded JSim MML equations from files, changing the names of the generic variables to ontologically informative names and assembling the resulting code into new equations ( Raymond & Bassingthwaighte, 2011 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_101",
            "start": 0,
            "end": 313,
            "label": {}
        },
        {
            "ix": "2-288_v1_101@1",
            "content": "For example, MPC can take MML code representing a single tissue exchange region (26 lines), and generate a whole organ heterogeneous model for convection, diffusion, and reaction with 20 regions (1698 lines).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_101",
            "start": 315,
            "end": 522,
            "label": {}
        },
        {
            "ix": "2-288_v1_101@2",
            "content": "See http://www.physiome.org/jsim/models/webmodel/NSR/MPC/ .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_101",
            "start": 524,
            "end": 582,
            "label": {}
        },
        {
            "ix": "2-288_v1_101@3",
            "content": "MPC currently runs outside of JSim but is planned for incorporation into a future JSim release.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_101",
            "start": 584,
            "end": 678,
            "label": {}
        },
        {
            "ix": "2-288_v1_102@0",
            "content": "Modular construction with SemSim: Precise semantic identification of variables and parameters is a prerequisite to merging of preconstructed submodels or modules into integrated systems or multiscale models.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_102",
            "start": 0,
            "end": 206,
            "label": {}
        },
        {
            "ix": "2-288_v1_102@1",
            "content": "A future release of JSim will incorporate the tools for annotating models and their computational elements against biomedical ontologies and knowledge bases ( Rubin et al. , 2006 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_102",
            "start": 208,
            "end": 388,
            "label": {}
        },
        {
            "ix": "2-288_v1_102@2",
            "content": "These annotations will make it easier for users to search the Physiome Model repository and to identify the biological phenomena modeled.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_102",
            "start": 390,
            "end": 526,
            "label": {}
        },
        {
            "ix": "2-288_v1_102@3",
            "content": "Formatted according to the semantic simulation (SemSim) framework ( Gennari et al. , 2011 ), these annotations will also make it possible for tools to decompose and merge models in a more automated fashion, and allow the modeler to work at a biological, rather than computational level of abstraction ( Beard et al. , 2012 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_102",
            "start": 528,
            "end": 852,
            "label": {}
        },
        {
            "ix": "2-288_v1_102@4",
            "content": "For example, selection of an ion pump, such as the NaKATPase, would bring up a set of modules from which the modeler would choose the version suited to the particular context, and then the code for the integrated model would be automatically generated from the annotated modules in the library.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_102",
            "start": 854,
            "end": 1147,
            "label": {}
        },
        {
            "ix": "2-288_v1_103@0",
            "content": "Getting started with JSim",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_103",
            "start": 0,
            "end": 24,
            "label": {}
        },
        {
            "ix": "2-288_v1_104@0",
            "content": "Information for download and installation, running JSim, and writing JSim MML models can be found at http://www.physiome.org/jsim/ .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_104",
            "start": 0,
            "end": 131,
            "label": {}
        },
        {
            "ix": "2-288_v1_104@1",
            "content": "Software is also permanently available from: 10.5281/zenodo.7635 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_104",
            "start": 133,
            "end": 198,
            "label": {}
        },
        {
            "ix": "2-288_v1_105@0",
            "content": "Aho A Sethi R Ullman J : Compilers: Principles, Techniques and Tools . Addison-Wesley. 1988 . Reference Source",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_105",
            "start": 0,
            "end": 109,
            "label": {}
        },
        {
            "ix": "2-288_v1_106@0",
            "content": "Appel AW : Modern Compiler Implementation in Java . Cambridge University Press. 1998 . Reference Source",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_106",
            "start": 0,
            "end": 102,
            "label": {}
        },
        {
            "ix": "2-288_v1_107@0",
            "content": "Barta E Sideman S Bassingthwaighte JB : Facilitated diffusion and membrane permeation of fatty acid in albumin solutions. Ann Biomed Eng. 2000 ; 28 ( 3 ): 331 \u2013 345 . 10784097 10.1114/1.274 2872167",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_107",
            "start": 0,
            "end": 196,
            "label": {}
        },
        {
            "ix": "2-288_v1_108@0",
            "content": "Bassingthwaighte JB : A concurrent flow model for extraction during transcapillary passage. Circ Res. 1974 ; 35 ( 3 ): 483 \u2013 503 . 4608628 10.1161/01.RES.35.3.483 3077802",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_108",
            "start": 0,
            "end": 169,
            "label": {}
        },
        {
            "ix": "2-288_v1_109@0",
            "content": "Bassingthwaighte JB Goresky CA : Modeling in the analysis of solute and water exchange in the microvasculature . In: Handbook of Physiology. Sect. 2, The Cardiovascular System. Vol IV The Microcirculation, edited by Renkin EM and Michel CC. Bethesda, MD: Am Physiol Soc. 1984 ; pp 549 \u2013 626 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_109",
            "start": 0,
            "end": 291,
            "label": {}
        },
        {
            "ix": "2-288_v1_110@0",
            "content": "Bassingthwaighte JB : Strategies for the Physiome Project. Ann Biomed Eng. 2000 ; 28 ( 8 ): 1043 \u2013 1058 . 11144666 10.1114/1.1313771 3425440",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_110",
            "start": 0,
            "end": 139,
            "label": {}
        },
        {
            "ix": "2-288_v1_111@0",
            "content": "Bassingthwaighte JB Chizeck HJ Atlas LE : Multiscale modeling of cardiac cellular Energetics . In: The Communicative Cardiac Cell. edited by Sideman S, Beyar R and Landesberg A. Ann New York Acad Sci. 2005 ; 1047 : 395 \u2013 424 . 16093514 10.1196/annals.1341.035 2864600",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_111",
            "start": 0,
            "end": 266,
            "label": {}
        },
        {
            "ix": "2-288_v1_112@0",
            "content": "Bassingthwaighte JB Chizeck HJ Atlas LE : Strategies and Tactics in Multiscale Modeling of Cell-to-Organ Systems. Proc IEEE Inst Electr Electron Eng. 2006 ; 94 ( 4 ): 819 \u2013 830 . 20463841 10.1109/JPROC.2006.871775 2867355",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_112",
            "start": 0,
            "end": 220,
            "label": {}
        },
        {
            "ix": "2-288_v1_113@0",
            "content": "Bassingthwaighte JB Raymond GR Ploger JD : GENTEX, a general multiscale model for in vivo tissue exchanges and intraorgan metabolism. Philos Trans A Math Phys Eng Sci. 2006 ; 364 ( 1843 ): 1423 \u2013 1442 . 16766353 10.1098/rsta.2006.1779",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_113",
            "start": 0,
            "end": 233,
            "label": {}
        },
        {
            "ix": "2-288_v1_114@0",
            "content": "Bassingthwaighte J Noble D Hunter P : The Cardiac Physiome: perspectives for the future. Exp Physiol. 2009 ; 94 ( 5 ): 597 \u2013 605 . 19098089 10.1113/expphysiol.2008.044099 2854146",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_114",
            "start": 0,
            "end": 177,
            "label": {}
        },
        {
            "ix": "2-288_v1_115@0",
            "content": "Bassingthwaighte JB Chinn TM : Reexamining Michaelis-Menten enzyme kinetics for xanthine oxidase. Adv Physiol Educ. 2013 ; 37 ( 1 ): 37 \u2013 48 . 23471247 10.1152/advan.00107.2012 3776473",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_115",
            "start": 0,
            "end": 183,
            "label": {}
        },
        {
            "ix": "2-288_v1_116@0",
            "content": "Beard DA Bassingthwaighte JB : The fractal nature of myocardial blood flow emerges from a whole-organ model of arterial network. J Vasc Res. 2000 ; 37 ( 4 ): 282 \u2013 296 . 10965227 10.1159/000025742",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_116",
            "start": 0,
            "end": 195,
            "label": {}
        },
        {
            "ix": "2-288_v1_117@0",
            "content": "Beard DA Bassingthwaighte JB Greene A : Computational modeling of physiological systems. Physiol Genomics. 2005 ; 23 ( 1 ): 1 \u2013 3 . 16179418 10.1152/physiolgenomics.00117.2005",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_117",
            "start": 0,
            "end": 174,
            "label": {}
        },
        {
            "ix": "2-288_v1_118@0",
            "content": "Beard DA Neal ML Tabesh-Saleki N : Multiscale modeling and data integration in the virtual physiological rat project. Ann Biomed Eng. 2012 ; 40 ( 11 ): 2365 \u2013 2378 . 22805979 10.1007/s10439-012-0611-7 3463790",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_118",
            "start": 0,
            "end": 207,
            "label": {}
        },
        {
            "ix": "2-288_v1_119@0",
            "content": "Chizeck HJ Butterworth E Bassingthwaighte JB : Error detection and unit conversion. Automated unit balancing in modeling interface systems. IEEE Eng Med Biol. 2009 ; 28 ( 3 ): 50 \u2013 58 . 21462417 10.1109/MEMB.2009.932477 3420958",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_119",
            "start": 0,
            "end": 226,
            "label": {}
        },
        {
            "ix": "2-288_v1_120@0",
            "content": "Coatrieux JL Bassingthwaighte JB : Special Issue on the Physiome and Beyond. Proc IEEE. 2006 ; 94 : 671 \u2013 677 . Reference Source",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_120",
            "start": 0,
            "end": 127,
            "label": {}
        },
        {
            "ix": "2-288_v1_121@0",
            "content": "Cuellar AA Lloyd CM Nielsen PF : An Overview of CellML 1.1, a Biological Model Description Language. SIMULATION. 2003 ; 79 ( 12 ): 740 \u2013 747 . 10.1177/0037549703040939",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_121",
            "start": 0,
            "end": 166,
            "label": {}
        },
        {
            "ix": "2-288_v1_122@0",
            "content": "Gennari JH Neal ML Galdzicki M : Multiple ontologies in action: Composite annotations for biosimulation models. J Biomed Inform. 2011 ; 44 ( 1 ): 146 \u2013 154 . 20601121 10.1016/j.jbi.2010.06.007 2989341",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_122",
            "start": 0,
            "end": 199,
            "label": {}
        },
        {
            "ix": "2-288_v1_123@0",
            "content": "Gillespie DT : Exact stochastic simulation of coupled chemical reactions. J Phys Chem. 1977 ; 81 ( 25 ): 2340 \u2013 2361 . 10.1021/j100540a008",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_123",
            "start": 0,
            "end": 137,
            "label": {}
        },
        {
            "ix": "2-288_v1_124@0",
            "content": "Goresky CA : A linear method for determining liver sinusoidal and extravascular volumes. Am J Physiol. 1963 ; 204 : 626 \u2013 640 . 13949263",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_124",
            "start": 0,
            "end": 135,
            "label": {}
        },
        {
            "ix": "2-288_v1_125@0",
            "content": "Gosling J McGilton H : The Java language environment: A white paper, 1995. Sun Microsystems. 2003 ; 85 . Reference Source",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_125",
            "start": 0,
            "end": 120,
            "label": {}
        },
        {
            "ix": "2-288_v1_126@0",
            "content": "Harold ER : Java Network Programming . O'Reilly. 1977 . Reference Source",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_126",
            "start": 0,
            "end": 71,
            "label": {}
        },
        {
            "ix": "2-288_v1_127@0",
            "content": "Harris PA Bosan S Harris TR : Parameter identification in coronary pressure flow models: a graphical approach. Ann Biomed Eng. 1994 ; 22 ( 6 ): 622 \u2013 637 . 7872572",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_127",
            "start": 0,
            "end": 162,
            "label": {}
        },
        {
            "ix": "2-288_v1_128@0",
            "content": "Hucka M Finney A Sauro HM : SBML Forum. The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models. Bioinformatics. 2003 ; 19 ( 4 ): 524 \u2013 31 . 12611808 10.1093/bioinformatics/btg015",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_128",
            "start": 0,
            "end": 237,
            "label": {}
        },
        {
            "ix": "2-288_v1_129@0",
            "content": "Jardine B Bassingthwaighte JB : Modeling serotonin uptake in the lung shows endothelial transporters dominate over cleft permeation. Am J Physiol Lung Cell Mol Physiol. 2013 ; 305 ( 1 ): L42 \u2013 L55 . 23645496 10.1152/ajplung.00420.2012 3726944",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_129",
            "start": 0,
            "end": 241,
            "label": {}
        },
        {
            "ix": "2-288_v1_130@0",
            "content": "King RB Butterworth EA Weissman LJ : A graphical user interface for computer simulation. FASEB J. 1995 ; 9 : A14 . (XSim).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_130",
            "start": 0,
            "end": 121,
            "label": {}
        },
        {
            "ix": "2-288_v1_131@0",
            "content": "Knopp TJ Anderson DU Bassingthwaighte JB : SIMCON--Simulation control to optimize man-machine interaction. Simulation. 1970 ; 14 ( 2 ): 81 \u2013 86 . 21423785 10.1177/003754977001400205 3059310",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_131",
            "start": 0,
            "end": 188,
            "label": {}
        },
        {
            "ix": "2-288_v1_132@0",
            "content": "Kuikka J Levin M Bassingthwaighte JB : Multiple tracer dilution estimates of D- and 2-deoxy-D-glucose uptake by the heart. Am J Physiol. 1986 ; 250 ( 1 Pt 2 ): H29 \u2013 H42 . 3510568 3496757",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_132",
            "start": 0,
            "end": 186,
            "label": {}
        },
        {
            "ix": "2-288_v1_133@0",
            "content": "Liang S : The Java Native Interface: Programmer's Guide and Specification . Addison-Wesley. 1999 ; 303 . Reference Source",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_133",
            "start": 0,
            "end": 120,
            "label": {}
        },
        {
            "ix": "2-288_v1_134@0",
            "content": "Neal ML Bassingthwaighte JB : Subject-specific model estimation of cardiac output and blood volume during hemorrhage. Cardiovasc Eng. 2007 ; 7 ( 3 ): 97 \u2013 120 . 17846886 10.1007/s10558-007-9035-7 3629970",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_134",
            "start": 0,
            "end": 202,
            "label": {}
        },
        {
            "ix": "2-288_v1_135@0",
            "content": "Oaks S Wong H : Java Threads (Third Edition) . O'Reilly. 2004 . Reference Source",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_135",
            "start": 0,
            "end": 79,
            "label": {}
        },
        {
            "ix": "2-288_v1_136@0",
            "content": "Platt JR : Strong inference: Certain systematic methods of scientific thinking may produce much more rapid progress than others. Science. 1964 ; 146 ( 3642 ): 347 \u2013 353 . 17739513 10.1126/science.146.3642.347",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_136",
            "start": 0,
            "end": 207,
            "label": {}
        },
        {
            "ix": "2-288_v1_137@0",
            "content": "Raymond GM Butterworth E Bassingthwaighte JB : JSIM: Free software package for teaching physiological modeling and research. Exper Biol. 2003 ; 280 ( 5 ): 102 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_137",
            "start": 0,
            "end": 159,
            "label": {}
        },
        {
            "ix": "2-288_v1_138@0",
            "content": "Raymond GM Bassingthwaighte JB : Automated modular model construction using JSim. Experimental Biology. 2011 ; 863 ( 9 ).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_138",
            "start": 0,
            "end": 120,
            "label": {}
        },
        {
            "ix": "2-288_v1_139@0",
            "content": "Roberts MS Rowland M : A dispersion model of hepatic elimination: 1. Formulation of the model and bolus considerations. J Pharmacokinet Biopharm. 1986 ; 14 ( 3 ): 227 \u2013 260 . 3783446",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_139",
            "start": 0,
            "end": 181,
            "label": {}
        },
        {
            "ix": "2-288_v1_140@0",
            "content": "Rubin DR Grossman D Neal ML : Ontology-based representation of simulation models of physiology. AMIA Annu Symp Proc. 2006 ; 664 \u2013 668 . 17238424 1839612",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_140",
            "start": 0,
            "end": 151,
            "label": {}
        },
        {
            "ix": "2-288_v1_141@0",
            "content": "Safford RE Bassingthwaighte JB : Calcium diffusion in transient and steady states in muscle. Biophys J. 1977 ; 20 ( 1 ): 113 \u2013 136 . 901900 10.1016/S0006-3495(77)85539-2 1473340",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_141",
            "start": 0,
            "end": 176,
            "label": {}
        },
        {
            "ix": "2-288_v1_142@0",
            "content": "Smith NA Crampin EJ Niederer SA : Computational biology of the cardiac myocyte: proposed standards for the physiome. J Exper Biol. 2007 ; 210 ( Pt 9 ): 1576 \u2013 1583 . 17449822 10.1242/jeb.000133 2866297",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_142",
            "start": 0,
            "end": 200,
            "label": {}
        },
        {
            "ix": "2-288_v1_143@0",
            "content": "Smith L Butterworth E Bassingthwaighte JB : SBML and CellML translation in Antimony and JSim. Bioinformatics. 2013 . (In press). 24215024 10.1093/bioinformatics/btt641",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_143",
            "start": 0,
            "end": 166,
            "label": {}
        },
        {
            "ix": "2-288_v1_144@0",
            "content": "Stone R Jasny B : Scientific Discourse: Buckling at the Seams. Science. 2013 ; 342 ( 6154 ): 57 \u2013 82 . (Eight articles covering new views on improving scientific communication and accelerating research through openness and clarity.). 10.1126/science.342.6154.56",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_144",
            "start": 0,
            "end": 260,
            "label": {}
        },
        {
            "ix": "2-288_v1_145@0",
            "content": "Suenson M Richmond DR Bassingthwaighte JB : Diffusion of sucrose, sodium, and water in ventricular myocardium. Am J Physiol. 1974 ; 227 ( 5 ): 1116 \u2013 1123 . 4440753 3024886",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_145",
            "start": 0,
            "end": 171,
            "label": {}
        },
        {
            "ix": "2-288_v1_146@0",
            "content": "Vinnakota KC Bassingthwaighte JB : Myocardial density and composition: a basis for calculating intracellular metabolite concentrations. Am J Physiol Heart Circ Physiol. 2004 ; 286 ( 5 ): H1742 \u2013 H1749 . 14693681 10.1152/ajpheart.00478.2003",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_146",
            "start": 0,
            "end": 238,
            "label": {}
        },
        {
            "ix": "2-288_v1_147@0",
            "content": "Yngve G Brinkley JF Cook D : A model browser for biosimulation. AMIA Annu Symp Proc. 2007 ; 2007 : 836 \u2013 840 . 18693954 2655884",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "2-288_v1_147",
            "start": 0,
            "end": 126,
            "label": {}
        }
    ],
    "edges": [
        {
            "src_ix": "2-288_v1_0",
            "tgt_ix": "2-288_v1_1",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_1",
            "tgt_ix": "2-288_v1_2",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_0",
            "tgt_ix": "2-288_v1_3",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_3",
            "tgt_ix": "2-288_v1_4",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_3",
            "tgt_ix": "2-288_v1_5",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_3",
            "tgt_ix": "2-288_v1_6",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_3",
            "tgt_ix": "2-288_v1_7",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_3",
            "tgt_ix": "2-288_v1_8",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_3",
            "tgt_ix": "2-288_v1_9",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_0",
            "tgt_ix": "2-288_v1_10",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_11",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_12",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_13",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_14",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_15",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_16",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_17",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_18",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_19",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_20",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_21",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_22",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_23",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_24",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_25",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_25",
            "tgt_ix": "2-288_v1_26",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_25",
            "tgt_ix": "2-288_v1_27",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_28",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_28",
            "tgt_ix": "2-288_v1_29",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_30",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_30",
            "tgt_ix": "2-288_v1_31",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_30",
            "tgt_ix": "2-288_v1_32",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_33",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_33",
            "tgt_ix": "2-288_v1_34",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_33",
            "tgt_ix": "2-288_v1_35",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_36",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_36",
            "tgt_ix": "2-288_v1_37",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_36",
            "tgt_ix": "2-288_v1_38",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_38",
            "tgt_ix": "2-288_v1_39",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_40",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_40",
            "tgt_ix": "2-288_v1_41",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_40",
            "tgt_ix": "2-288_v1_42",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_42",
            "tgt_ix": "2-288_v1_43",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_40",
            "tgt_ix": "2-288_v1_44",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_44",
            "tgt_ix": "2-288_v1_45",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_40",
            "tgt_ix": "2-288_v1_46",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_47",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_47",
            "tgt_ix": "2-288_v1_48",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_49",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_49",
            "tgt_ix": "2-288_v1_50",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_49",
            "tgt_ix": "2-288_v1_51",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_51",
            "tgt_ix": "2-288_v1_52",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_49",
            "tgt_ix": "2-288_v1_53",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_53",
            "tgt_ix": "2-288_v1_54",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_55",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_55",
            "tgt_ix": "2-288_v1_56",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_57",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_57",
            "tgt_ix": "2-288_v1_58",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_57",
            "tgt_ix": "2-288_v1_59",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_59",
            "tgt_ix": "2-288_v1_60",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_61",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_61",
            "tgt_ix": "2-288_v1_62",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_61",
            "tgt_ix": "2-288_v1_63",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_63",
            "tgt_ix": "2-288_v1_64",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_65",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_65",
            "tgt_ix": "2-288_v1_66",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_65",
            "tgt_ix": "2-288_v1_67",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_67",
            "tgt_ix": "2-288_v1_68",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_69",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_69",
            "tgt_ix": "2-288_v1_70",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_69",
            "tgt_ix": "2-288_v1_71",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_71",
            "tgt_ix": "2-288_v1_72",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_69",
            "tgt_ix": "2-288_v1_73",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_74",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_74",
            "tgt_ix": "2-288_v1_75",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_74",
            "tgt_ix": "2-288_v1_76",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_74",
            "tgt_ix": "2-288_v1_77",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_74",
            "tgt_ix": "2-288_v1_78",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_79",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_79",
            "tgt_ix": "2-288_v1_80",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_79",
            "tgt_ix": "2-288_v1_81",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_81",
            "tgt_ix": "2-288_v1_82",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_0",
            "tgt_ix": "2-288_v1_83",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_83",
            "tgt_ix": "2-288_v1_84",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_83",
            "tgt_ix": "2-288_v1_85",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_83",
            "tgt_ix": "2-288_v1_86",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_0",
            "tgt_ix": "2-288_v1_87",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_87",
            "tgt_ix": "2-288_v1_88",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_87",
            "tgt_ix": "2-288_v1_89",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_89",
            "tgt_ix": "2-288_v1_90",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_89",
            "tgt_ix": "2-288_v1_91",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_87",
            "tgt_ix": "2-288_v1_92",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_92",
            "tgt_ix": "2-288_v1_93",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_0",
            "tgt_ix": "2-288_v1_94",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_94",
            "tgt_ix": "2-288_v1_95",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_94",
            "tgt_ix": "2-288_v1_96",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_94",
            "tgt_ix": "2-288_v1_97",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_0",
            "tgt_ix": "2-288_v1_98",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_98",
            "tgt_ix": "2-288_v1_99",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_99",
            "tgt_ix": "2-288_v1_100",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_99",
            "tgt_ix": "2-288_v1_101",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_99",
            "tgt_ix": "2-288_v1_102",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_98",
            "tgt_ix": "2-288_v1_103",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_103",
            "tgt_ix": "2-288_v1_104",
            "etype": "parent",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_0",
            "tgt_ix": "2-288_v1_1",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_1",
            "tgt_ix": "2-288_v1_2",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_3",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_3",
            "tgt_ix": "2-288_v1_4",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_4",
            "tgt_ix": "2-288_v1_5",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_5",
            "tgt_ix": "2-288_v1_6",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_6",
            "tgt_ix": "2-288_v1_7",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_7",
            "tgt_ix": "2-288_v1_8",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_8",
            "tgt_ix": "2-288_v1_9",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_9",
            "tgt_ix": "2-288_v1_10",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_11",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_11",
            "tgt_ix": "2-288_v1_12",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_12",
            "tgt_ix": "2-288_v1_13",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_13",
            "tgt_ix": "2-288_v1_14",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_14",
            "tgt_ix": "2-288_v1_15",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_15",
            "tgt_ix": "2-288_v1_16",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_16",
            "tgt_ix": "2-288_v1_17",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_17",
            "tgt_ix": "2-288_v1_18",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_18",
            "tgt_ix": "2-288_v1_19",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_19",
            "tgt_ix": "2-288_v1_20",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_20",
            "tgt_ix": "2-288_v1_21",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_21",
            "tgt_ix": "2-288_v1_22",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_22",
            "tgt_ix": "2-288_v1_23",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_23",
            "tgt_ix": "2-288_v1_24",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_24",
            "tgt_ix": "2-288_v1_25",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_25",
            "tgt_ix": "2-288_v1_26",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_26",
            "tgt_ix": "2-288_v1_27",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_27",
            "tgt_ix": "2-288_v1_28",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_28",
            "tgt_ix": "2-288_v1_29",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_30",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_30",
            "tgt_ix": "2-288_v1_31",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_32",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_32",
            "tgt_ix": "2-288_v1_33",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_33",
            "tgt_ix": "2-288_v1_34",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_34",
            "tgt_ix": "2-288_v1_35",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_35",
            "tgt_ix": "2-288_v1_36",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_36",
            "tgt_ix": "2-288_v1_37",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_38",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_38",
            "tgt_ix": "2-288_v1_39",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_39",
            "tgt_ix": "2-288_v1_40",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_40",
            "tgt_ix": "2-288_v1_41",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_41",
            "tgt_ix": "2-288_v1_42",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_42",
            "tgt_ix": "2-288_v1_43",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_43",
            "tgt_ix": "2-288_v1_44",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_44",
            "tgt_ix": "2-288_v1_45",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_45",
            "tgt_ix": "2-288_v1_46",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_46",
            "tgt_ix": "2-288_v1_47",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_47",
            "tgt_ix": "2-288_v1_48",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_48",
            "tgt_ix": "2-288_v1_49",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_49",
            "tgt_ix": "2-288_v1_50",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_50",
            "tgt_ix": "2-288_v1_51",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_51",
            "tgt_ix": "2-288_v1_52",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_52",
            "tgt_ix": "2-288_v1_53",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_53",
            "tgt_ix": "2-288_v1_54",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_54",
            "tgt_ix": "2-288_v1_55",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_55",
            "tgt_ix": "2-288_v1_56",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_56",
            "tgt_ix": "2-288_v1_57",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_57",
            "tgt_ix": "2-288_v1_58",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_58",
            "tgt_ix": "2-288_v1_59",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_59",
            "tgt_ix": "2-288_v1_60",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_60",
            "tgt_ix": "2-288_v1_61",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_61",
            "tgt_ix": "2-288_v1_62",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_62",
            "tgt_ix": "2-288_v1_63",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_63",
            "tgt_ix": "2-288_v1_64",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_64",
            "tgt_ix": "2-288_v1_65",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_65",
            "tgt_ix": "2-288_v1_66",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_67",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_67",
            "tgt_ix": "2-288_v1_68",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_68",
            "tgt_ix": "2-288_v1_69",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_69",
            "tgt_ix": "2-288_v1_70",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_70",
            "tgt_ix": "2-288_v1_71",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_71",
            "tgt_ix": "2-288_v1_72",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_72",
            "tgt_ix": "2-288_v1_73",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_73",
            "tgt_ix": "2-288_v1_74",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_74",
            "tgt_ix": "2-288_v1_75",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_75",
            "tgt_ix": "2-288_v1_76",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_76",
            "tgt_ix": "2-288_v1_77",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_77",
            "tgt_ix": "2-288_v1_78",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_78",
            "tgt_ix": "2-288_v1_79",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_79",
            "tgt_ix": "2-288_v1_80",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_80",
            "tgt_ix": "2-288_v1_81",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_81",
            "tgt_ix": "2-288_v1_82",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_82",
            "tgt_ix": "2-288_v1_83",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_83",
            "tgt_ix": "2-288_v1_84",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_84",
            "tgt_ix": "2-288_v1_85",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_85",
            "tgt_ix": "2-288_v1_86",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_87",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_87",
            "tgt_ix": "2-288_v1_88",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_89",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_89",
            "tgt_ix": "2-288_v1_90",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_91",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_91",
            "tgt_ix": "2-288_v1_92",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_92",
            "tgt_ix": "2-288_v1_93",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_93",
            "tgt_ix": "2-288_v1_94",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_94",
            "tgt_ix": "2-288_v1_95",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_95",
            "tgt_ix": "2-288_v1_96",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_96",
            "tgt_ix": "2-288_v1_97",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_97",
            "tgt_ix": "2-288_v1_98",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_98",
            "tgt_ix": "2-288_v1_99",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_99",
            "tgt_ix": "2-288_v1_100",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_100",
            "tgt_ix": "2-288_v1_101",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_101",
            "tgt_ix": "2-288_v1_102",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_102",
            "tgt_ix": "2-288_v1_103",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_103",
            "tgt_ix": "2-288_v1_104",
            "etype": "next",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_85",
            "tgt_ix": "2-288_v1_105",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_85",
            "tgt_ix": "2-288_v1_106",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_107",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_108",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_8",
            "tgt_ix": "2-288_v1_109",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_100",
            "tgt_ix": "2-288_v1_110",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_8",
            "tgt_ix": "2-288_v1_111",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_7",
            "tgt_ix": "2-288_v1_112",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_35",
            "tgt_ix": "2-288_v1_113",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_100",
            "tgt_ix": "2-288_v1_114",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_91",
            "tgt_ix": "2-288_v1_115",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_35",
            "tgt_ix": "2-288_v1_116",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_8",
            "tgt_ix": "2-288_v1_117",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_102",
            "tgt_ix": "2-288_v1_118",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_119",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_7",
            "tgt_ix": "2-288_v1_120",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_121",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_102",
            "tgt_ix": "2-288_v1_122",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_41",
            "tgt_ix": "2-288_v1_123",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_124",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_84",
            "tgt_ix": "2-288_v1_125",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_126",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_127",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_128",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_91",
            "tgt_ix": "2-288_v1_129",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_130",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_131",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_91",
            "tgt_ix": "2-288_v1_132",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_84",
            "tgt_ix": "2-288_v1_133",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_134",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_135",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_4",
            "tgt_ix": "2-288_v1_136",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_137",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_101",
            "tgt_ix": "2-288_v1_138",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_139",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_102",
            "tgt_ix": "2-288_v1_140",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_141",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_96",
            "tgt_ix": "2-288_v1_142",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_143",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_144",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_35",
            "tgt_ix": "2-288_v1_145",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_146",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_80",
            "tgt_ix": "2-288_v1_147",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_39",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_41",
            "tgt_ix": "2-288_v1_43",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_41",
            "tgt_ix": "2-288_v1_45",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_50",
            "tgt_ix": "2-288_v1_52",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_54",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_58",
            "tgt_ix": "2-288_v1_60",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_62",
            "tgt_ix": "2-288_v1_64",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_68",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_70",
            "tgt_ix": "2-288_v1_72",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_80",
            "tgt_ix": "2-288_v1_82",
            "etype": "link",
            "meta": {
                "created_by": "F1000XMLParser"
            }
        },
        {
            "src_ix": "2-288_v1_0",
            "tgt_ix": "2-288_v1_0@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_1",
            "tgt_ix": "2-288_v1_1@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@9",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@10",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@11",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@12",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_2",
            "tgt_ix": "2-288_v1_2@13",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_3",
            "tgt_ix": "2-288_v1_3@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_4",
            "tgt_ix": "2-288_v1_4@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_4",
            "tgt_ix": "2-288_v1_4@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_4",
            "tgt_ix": "2-288_v1_4@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_4",
            "tgt_ix": "2-288_v1_4@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_5",
            "tgt_ix": "2-288_v1_5@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_5",
            "tgt_ix": "2-288_v1_5@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_5",
            "tgt_ix": "2-288_v1_5@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_5",
            "tgt_ix": "2-288_v1_5@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_6",
            "tgt_ix": "2-288_v1_6@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_6",
            "tgt_ix": "2-288_v1_6@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_6",
            "tgt_ix": "2-288_v1_6@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_7",
            "tgt_ix": "2-288_v1_7@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_7",
            "tgt_ix": "2-288_v1_7@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_7",
            "tgt_ix": "2-288_v1_7@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_7",
            "tgt_ix": "2-288_v1_7@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_8",
            "tgt_ix": "2-288_v1_8@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_8",
            "tgt_ix": "2-288_v1_8@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_8",
            "tgt_ix": "2-288_v1_8@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_9",
            "tgt_ix": "2-288_v1_9@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_9",
            "tgt_ix": "2-288_v1_9@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_9",
            "tgt_ix": "2-288_v1_9@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_10",
            "tgt_ix": "2-288_v1_10@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_11",
            "tgt_ix": "2-288_v1_11@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_11",
            "tgt_ix": "2-288_v1_11@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_11",
            "tgt_ix": "2-288_v1_11@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_12",
            "tgt_ix": "2-288_v1_12@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_12",
            "tgt_ix": "2-288_v1_12@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_13",
            "tgt_ix": "2-288_v1_13@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_13",
            "tgt_ix": "2-288_v1_13@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_13",
            "tgt_ix": "2-288_v1_13@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_14",
            "tgt_ix": "2-288_v1_14@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_15",
            "tgt_ix": "2-288_v1_15@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_16",
            "tgt_ix": "2-288_v1_16@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_16",
            "tgt_ix": "2-288_v1_16@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_17",
            "tgt_ix": "2-288_v1_17@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_17",
            "tgt_ix": "2-288_v1_17@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_18",
            "tgt_ix": "2-288_v1_18@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_19",
            "tgt_ix": "2-288_v1_19@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_20",
            "tgt_ix": "2-288_v1_20@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_20",
            "tgt_ix": "2-288_v1_20@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_21",
            "tgt_ix": "2-288_v1_21@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_21",
            "tgt_ix": "2-288_v1_21@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_22",
            "tgt_ix": "2-288_v1_22@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_22",
            "tgt_ix": "2-288_v1_22@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_23",
            "tgt_ix": "2-288_v1_23@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_23",
            "tgt_ix": "2-288_v1_23@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_23",
            "tgt_ix": "2-288_v1_23@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_24",
            "tgt_ix": "2-288_v1_24@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_24",
            "tgt_ix": "2-288_v1_24@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_25",
            "tgt_ix": "2-288_v1_25@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_26",
            "tgt_ix": "2-288_v1_26@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_26",
            "tgt_ix": "2-288_v1_26@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_26",
            "tgt_ix": "2-288_v1_26@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_26",
            "tgt_ix": "2-288_v1_26@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_26",
            "tgt_ix": "2-288_v1_26@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_26",
            "tgt_ix": "2-288_v1_26@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_27",
            "tgt_ix": "2-288_v1_27@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_27",
            "tgt_ix": "2-288_v1_27@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_27",
            "tgt_ix": "2-288_v1_27@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_28",
            "tgt_ix": "2-288_v1_28@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_29@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_29@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_29@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_29@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_29@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_29",
            "tgt_ix": "2-288_v1_29@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_30",
            "tgt_ix": "2-288_v1_30@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_31",
            "tgt_ix": "2-288_v1_31@9",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_32",
            "tgt_ix": "2-288_v1_32@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_32",
            "tgt_ix": "2-288_v1_32@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_32",
            "tgt_ix": "2-288_v1_32@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_32",
            "tgt_ix": "2-288_v1_32@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_32",
            "tgt_ix": "2-288_v1_32@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_32",
            "tgt_ix": "2-288_v1_32@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_32",
            "tgt_ix": "2-288_v1_32@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_32",
            "tgt_ix": "2-288_v1_32@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_33",
            "tgt_ix": "2-288_v1_33@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_34",
            "tgt_ix": "2-288_v1_34@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_34",
            "tgt_ix": "2-288_v1_34@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_34",
            "tgt_ix": "2-288_v1_34@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_34",
            "tgt_ix": "2-288_v1_34@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_34",
            "tgt_ix": "2-288_v1_34@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_34",
            "tgt_ix": "2-288_v1_34@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_34",
            "tgt_ix": "2-288_v1_34@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_35",
            "tgt_ix": "2-288_v1_35@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_35",
            "tgt_ix": "2-288_v1_35@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_35",
            "tgt_ix": "2-288_v1_35@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_35",
            "tgt_ix": "2-288_v1_35@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_35",
            "tgt_ix": "2-288_v1_35@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_36",
            "tgt_ix": "2-288_v1_36@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@9",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@10",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@11",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@12",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_37",
            "tgt_ix": "2-288_v1_37@13",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_38",
            "tgt_ix": "2-288_v1_38@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_40",
            "tgt_ix": "2-288_v1_40@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_41",
            "tgt_ix": "2-288_v1_41@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_41",
            "tgt_ix": "2-288_v1_41@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_41",
            "tgt_ix": "2-288_v1_41@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_41",
            "tgt_ix": "2-288_v1_41@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_41",
            "tgt_ix": "2-288_v1_41@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_42",
            "tgt_ix": "2-288_v1_42@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_44",
            "tgt_ix": "2-288_v1_44@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_46",
            "tgt_ix": "2-288_v1_46@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_46",
            "tgt_ix": "2-288_v1_46@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_47",
            "tgt_ix": "2-288_v1_47@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_48",
            "tgt_ix": "2-288_v1_48@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_48",
            "tgt_ix": "2-288_v1_48@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_48",
            "tgt_ix": "2-288_v1_48@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_48",
            "tgt_ix": "2-288_v1_48@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_48",
            "tgt_ix": "2-288_v1_48@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_48",
            "tgt_ix": "2-288_v1_48@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_49",
            "tgt_ix": "2-288_v1_49@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_50",
            "tgt_ix": "2-288_v1_50@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_50",
            "tgt_ix": "2-288_v1_50@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_51",
            "tgt_ix": "2-288_v1_51@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_53",
            "tgt_ix": "2-288_v1_53@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_55",
            "tgt_ix": "2-288_v1_55@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_56",
            "tgt_ix": "2-288_v1_56@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_56",
            "tgt_ix": "2-288_v1_56@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_56",
            "tgt_ix": "2-288_v1_56@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_56",
            "tgt_ix": "2-288_v1_56@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_56",
            "tgt_ix": "2-288_v1_56@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_57",
            "tgt_ix": "2-288_v1_57@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_58",
            "tgt_ix": "2-288_v1_58@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_58",
            "tgt_ix": "2-288_v1_58@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_58",
            "tgt_ix": "2-288_v1_58@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_58",
            "tgt_ix": "2-288_v1_58@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_58",
            "tgt_ix": "2-288_v1_58@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_58",
            "tgt_ix": "2-288_v1_58@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_59",
            "tgt_ix": "2-288_v1_59@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_61",
            "tgt_ix": "2-288_v1_61@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_62",
            "tgt_ix": "2-288_v1_62@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_62",
            "tgt_ix": "2-288_v1_62@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_62",
            "tgt_ix": "2-288_v1_62@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_62",
            "tgt_ix": "2-288_v1_62@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_63",
            "tgt_ix": "2-288_v1_63@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_65",
            "tgt_ix": "2-288_v1_65@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_66@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_66@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_66@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_66@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_66@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_66@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_66@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_66",
            "tgt_ix": "2-288_v1_66@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_67",
            "tgt_ix": "2-288_v1_67@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_69",
            "tgt_ix": "2-288_v1_69@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_70",
            "tgt_ix": "2-288_v1_70@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_70",
            "tgt_ix": "2-288_v1_70@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_70",
            "tgt_ix": "2-288_v1_70@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_70",
            "tgt_ix": "2-288_v1_70@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_71",
            "tgt_ix": "2-288_v1_71@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_73",
            "tgt_ix": "2-288_v1_73@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_73",
            "tgt_ix": "2-288_v1_73@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_73",
            "tgt_ix": "2-288_v1_73@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_73",
            "tgt_ix": "2-288_v1_73@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_74",
            "tgt_ix": "2-288_v1_74@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_75",
            "tgt_ix": "2-288_v1_75@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_75",
            "tgt_ix": "2-288_v1_75@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_75",
            "tgt_ix": "2-288_v1_75@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_75",
            "tgt_ix": "2-288_v1_75@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_75",
            "tgt_ix": "2-288_v1_75@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_76",
            "tgt_ix": "2-288_v1_76@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_76",
            "tgt_ix": "2-288_v1_76@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_76",
            "tgt_ix": "2-288_v1_76@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_76",
            "tgt_ix": "2-288_v1_76@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_77",
            "tgt_ix": "2-288_v1_77@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_77",
            "tgt_ix": "2-288_v1_77@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_77",
            "tgt_ix": "2-288_v1_77@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_77",
            "tgt_ix": "2-288_v1_77@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_77",
            "tgt_ix": "2-288_v1_77@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_78",
            "tgt_ix": "2-288_v1_78@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_78",
            "tgt_ix": "2-288_v1_78@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_78",
            "tgt_ix": "2-288_v1_78@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_78",
            "tgt_ix": "2-288_v1_78@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_78",
            "tgt_ix": "2-288_v1_78@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_78",
            "tgt_ix": "2-288_v1_78@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_78",
            "tgt_ix": "2-288_v1_78@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_78",
            "tgt_ix": "2-288_v1_78@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_79",
            "tgt_ix": "2-288_v1_79@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_80",
            "tgt_ix": "2-288_v1_80@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_80",
            "tgt_ix": "2-288_v1_80@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_80",
            "tgt_ix": "2-288_v1_80@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_80",
            "tgt_ix": "2-288_v1_80@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_80",
            "tgt_ix": "2-288_v1_80@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_81",
            "tgt_ix": "2-288_v1_81@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_83",
            "tgt_ix": "2-288_v1_83@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_84",
            "tgt_ix": "2-288_v1_84@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_84",
            "tgt_ix": "2-288_v1_84@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_84",
            "tgt_ix": "2-288_v1_84@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_85",
            "tgt_ix": "2-288_v1_85@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_85",
            "tgt_ix": "2-288_v1_85@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_85",
            "tgt_ix": "2-288_v1_85@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_85",
            "tgt_ix": "2-288_v1_85@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_85",
            "tgt_ix": "2-288_v1_85@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_86@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_86@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_86@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_86@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_86@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_86@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_86@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_86",
            "tgt_ix": "2-288_v1_86@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_87",
            "tgt_ix": "2-288_v1_87@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_88@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_88@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_88@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_88@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_88@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_88@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_88@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_88",
            "tgt_ix": "2-288_v1_88@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_89",
            "tgt_ix": "2-288_v1_89@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_90@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_90@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_90@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_90@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_90@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_90@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_90@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_90@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_90",
            "tgt_ix": "2-288_v1_90@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_91",
            "tgt_ix": "2-288_v1_91@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_91",
            "tgt_ix": "2-288_v1_91@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_91",
            "tgt_ix": "2-288_v1_91@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_91",
            "tgt_ix": "2-288_v1_91@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_92",
            "tgt_ix": "2-288_v1_92@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_93",
            "tgt_ix": "2-288_v1_93@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_93",
            "tgt_ix": "2-288_v1_93@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_94",
            "tgt_ix": "2-288_v1_94@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_95",
            "tgt_ix": "2-288_v1_95@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_95",
            "tgt_ix": "2-288_v1_95@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_95",
            "tgt_ix": "2-288_v1_95@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_95",
            "tgt_ix": "2-288_v1_95@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_95",
            "tgt_ix": "2-288_v1_95@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_96",
            "tgt_ix": "2-288_v1_96@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_96",
            "tgt_ix": "2-288_v1_96@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_96",
            "tgt_ix": "2-288_v1_96@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_96",
            "tgt_ix": "2-288_v1_96@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_96",
            "tgt_ix": "2-288_v1_96@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_96",
            "tgt_ix": "2-288_v1_96@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_97",
            "tgt_ix": "2-288_v1_97@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_97",
            "tgt_ix": "2-288_v1_97@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_97",
            "tgt_ix": "2-288_v1_97@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_97",
            "tgt_ix": "2-288_v1_97@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_97",
            "tgt_ix": "2-288_v1_97@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_98",
            "tgt_ix": "2-288_v1_98@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_99",
            "tgt_ix": "2-288_v1_99@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_100",
            "tgt_ix": "2-288_v1_100@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_100",
            "tgt_ix": "2-288_v1_100@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_100",
            "tgt_ix": "2-288_v1_100@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_100",
            "tgt_ix": "2-288_v1_100@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_100",
            "tgt_ix": "2-288_v1_100@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_100",
            "tgt_ix": "2-288_v1_100@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_101",
            "tgt_ix": "2-288_v1_101@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_101",
            "tgt_ix": "2-288_v1_101@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_101",
            "tgt_ix": "2-288_v1_101@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_101",
            "tgt_ix": "2-288_v1_101@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_102",
            "tgt_ix": "2-288_v1_102@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_102",
            "tgt_ix": "2-288_v1_102@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_102",
            "tgt_ix": "2-288_v1_102@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_102",
            "tgt_ix": "2-288_v1_102@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_102",
            "tgt_ix": "2-288_v1_102@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_103",
            "tgt_ix": "2-288_v1_103@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_104",
            "tgt_ix": "2-288_v1_104@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_104",
            "tgt_ix": "2-288_v1_104@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_105",
            "tgt_ix": "2-288_v1_105@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_106",
            "tgt_ix": "2-288_v1_106@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_107",
            "tgt_ix": "2-288_v1_107@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_108",
            "tgt_ix": "2-288_v1_108@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_109",
            "tgt_ix": "2-288_v1_109@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_110",
            "tgt_ix": "2-288_v1_110@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_111",
            "tgt_ix": "2-288_v1_111@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_112",
            "tgt_ix": "2-288_v1_112@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_113",
            "tgt_ix": "2-288_v1_113@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_114",
            "tgt_ix": "2-288_v1_114@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_115",
            "tgt_ix": "2-288_v1_115@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_116",
            "tgt_ix": "2-288_v1_116@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_117",
            "tgt_ix": "2-288_v1_117@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_118",
            "tgt_ix": "2-288_v1_118@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_119",
            "tgt_ix": "2-288_v1_119@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_120",
            "tgt_ix": "2-288_v1_120@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_121",
            "tgt_ix": "2-288_v1_121@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_122",
            "tgt_ix": "2-288_v1_122@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_123",
            "tgt_ix": "2-288_v1_123@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_124",
            "tgt_ix": "2-288_v1_124@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_125",
            "tgt_ix": "2-288_v1_125@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_126",
            "tgt_ix": "2-288_v1_126@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_127",
            "tgt_ix": "2-288_v1_127@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_128",
            "tgt_ix": "2-288_v1_128@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_129",
            "tgt_ix": "2-288_v1_129@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_130",
            "tgt_ix": "2-288_v1_130@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_131",
            "tgt_ix": "2-288_v1_131@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_132",
            "tgt_ix": "2-288_v1_132@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_133",
            "tgt_ix": "2-288_v1_133@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_134",
            "tgt_ix": "2-288_v1_134@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_135",
            "tgt_ix": "2-288_v1_135@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_136",
            "tgt_ix": "2-288_v1_136@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_137",
            "tgt_ix": "2-288_v1_137@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_138",
            "tgt_ix": "2-288_v1_138@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_139",
            "tgt_ix": "2-288_v1_139@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_140",
            "tgt_ix": "2-288_v1_140@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_141",
            "tgt_ix": "2-288_v1_141@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_142",
            "tgt_ix": "2-288_v1_142@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_143",
            "tgt_ix": "2-288_v1_143@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_144",
            "tgt_ix": "2-288_v1_144@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_145",
            "tgt_ix": "2-288_v1_145@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_146",
            "tgt_ix": "2-288_v1_146@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "2-288_v1_147",
            "tgt_ix": "2-288_v1_147@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        }
    ],
    "prefix": "2-288_v1",
    "meta": {
        "parser": "F1000XMLParser",
        "intertext-graph": "N/A",
        "doi": "10.12688/f1000research.2-288.v1",
        "atype": "research-article",
        "license": "http://creativecommons.org/licenses/by/3.0/",
        "title": "JSim, an open-source modeling system for data analysis",
        "abstract": "JSim is a simulation system for developing models, designing experiments, and evaluating hypotheses on physiological and pharmacological systems through the testing of model solutions against data. It is designed for interactive, iterative manipulation of the model code, handling of multiple data sets and parameter sets, and for making comparisons among different models running simultaneously or separately. Interactive use is supported by a large collection of graphical user interfaces for model writing and compilation diagnostics, defining input functions, model runs, selection of algorithms solving ordinary and partial differential equations, run-time multidimensional graphics, parameter optimization (8 methods), sensitivity analysis, and Monte Carlo simulation for defining confidence ranges. JSim uses Mathematical Modeling Language (MML) a declarative syntax specifying algebraic and differential equations. Imperative constructs written in other languages (MATLAB, FORTRAN, C++, etc.) are accessed through procedure calls. MML syntax is simple, basically defining the parameters and variables, then writing the equations in a straightforward, easily read and understood mathematical form. This makes JSim good for teaching modeling as well as for model analysis for research. For high throughput applications, JSim can be run as a batch job. JSim can automatically translate models from the repositories for Systems Biology Markup Language (SBML) and CellML models. Stochastic modeling is supported. MML supports assigning physical units to constants and variables and automates checking dimensional balance as the first step in verification testing. Automatic unit scaling follows, e.g. seconds to minutes, if needed. The JSim Project File sets a standard for reproducible modeling analysis: it includes in one file everything for analyzing a set of experiments: the data, the models, the data fitting, and evaluation of parameter confidence ranges. JSim is open source; it and about 400 human readable open source physiological/biophysical models are available at http://www.physiome.org/jsim/.",
        "contributors": [
            {
                "surname": "Butterworth",
                "given-names": "Erik"
            },
            {
                "surname": "Jardine",
                "given-names": "Bartholomew E."
            },
            {
                "surname": "Raymond",
                "given-names": "Gary M."
            },
            {
                "surname": "Neal",
                "given-names": "Maxwell L."
            },
            {
                "surname": "Bassingthwaighte",
                "given-names": "James B."
            }
        ],
        "url": "https://f1000research.com/articles/2-288/v1/",
        "doc_id": "2-288",
        "version": 1,
        "ix_counter": 641,
        "sentence_split_type": "HybridSplitterLessAndLong",
        "sentence_split_model": "HybridSplitterLessAndLong_SciSpacy+Spacy"
    }
}