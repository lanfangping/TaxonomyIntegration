{
    "nodes": [
        {
            "ix": "350-ARR_v1_0",
            "content": "Phoneme transcription of endangered languages: an evaluation of recent ASR architectures in the single speaker scenario",
            "ntype": "article-title",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_1",
            "content": "Abstract",
            "ntype": "abstract",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_2",
            "content": "Transcription is often reported as the bottleneck in endangered language documentation, requiring large efforts from scarce speakers and transcribers. In general, automatic speech recognition (ASR) can be accurate enough to accelerate transcription only if trained on large amounts of transcribed data. However, when a single speaker is involved, several studies have reported encouraging results for phonetic transcription even with small amounts of training. Here we expand this body of work on speaker-dependent transcription by comparing four ASR approaches, notably recent transformer and pretrained multilingual models, on a common dataset of 11 languages. To automate data preparation, training and evaluation steps, we also developed a phoneme recognition setup which handles morphologically complex languages and writing systems for which no pronunciation dictionary exists. We find that fine-tuning a multilingual pretrained model yields an average phoneme error rate (PER) of 15% for 6 languages with 99 minutes or less of transcribed data for training. For the 5 languages with between 100 and 192 minutes of training, we achieved a PER of 8.4% or less. These results on a number of varied languages suggest that ASR can now significantly reduce transcription efforts in the speaker-dependent situation common in endangered language work.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_3",
            "content": "Introduction",
            "ntype": "title",
            "meta": {
                "section": "1"
            }
        },
        {
            "ix": "350-ARR_v1_4",
            "content": "Recent progress in automatic speech recognition (ASR) has been obtained by training neural networks on increasingly large amounts of annotated data. To significantly reduce the efforts needed to transcribe endangered languages, ASR must reach sufficient accuracy when trained on relatively much smaller amounts of transcribed data. Already several research efforts have been dedicated specifically to ASR for low-resource languages, such as the IARPA BABEL program 1 and the NIST Ope-nASR Challenge 2 . However, creating an ASR system for a task like speaker-independent phonetic transcription is still difficult and requires amounts of transcription that are very large in the context of endangered languages. For example, recently concluded that at least 50 hours of training data are needed for this task, comparing ESPnet and HMM-based models on two languages.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_5",
            "content": "In language documentation, field recordings are seldom made with a large number of speakers, but rather with a few speakers and for long durations . In these conditions, small amounts of transcribed data from a single speaker might be enough to train a phoneme recognizer with sufficient accuracy to automatically transcribe the remaining recordings from the same speaker. Concentrating on the single speaker scenario, Adams et al. (2018) evaluated a CTC-based LSTM model on Na and Chatino, and showed encouraging results for automated phoneme transcription as well as the effectiveness of this approach for linguistic work on endangered languages; they also created the open-source phonemic transcription tool Persephone. Wisniewski et al. (2020) compared Persephone performance on several endangered languages, focussing on data preprocessing concerns. Gupta and Boulianne (2020) compared end-to-end Persephone and wav2letter++ with an HMM-BLSTM hybrid for single speaker phoneme transcription, but using only one language, Cree. More recently, Adams et al. (2021) evaluated ES-Pnet on Na, Chatino and Japhug and integrated it into Elpis to create a user friendly docker container.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_6",
            "content": "Although these previous studies obtained promising results, they report on different systems and languages, making them difficult to compare. In addition, none has yet evaluated the recent large models pretrained on many languages, for example XLSR (Conneau et al., 2020) 3 , which are particularly well suited for low-resource languages.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_7",
            "content": "In this paper we extend the body of work on single speaker phonetic transcription for endangered or low-resource languages while introducing distinctive contributions. For a meaningful comparison, we evaluate 4 systems with different modeling approaches across a common set of 7 languages, and 3 of those systems across 11 languages, while previous work was limited to either a single system on many languages, or many systems on a single language. In addition to Persephone and HMM-GMM models, we compare two recent architectures that have never been evaluated for singlespeaker phoneme recognition: a Conformer model with a LF-MMI criterion, and a large pretrained multilingual model that we fine-tune for this task. We more firmly establish the feasibility of accurate automatic phonemic transcription with 3 hours or less of transcribed data by reporting on 4 new languages, including Cree and highly polysynthetic Inuktitut, in addition to 7 other previously studied in the literature. Finally, for reproducibility we make publicly available the curated dataset of public languages and a platform-independent container which allow users to reproduce the experiments from this paper 4 or train their own phoneme recognizer for a new endangered language.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_8",
            "content": "Datasets",
            "ntype": "title",
            "meta": {
                "section": "2"
            }
        },
        {
            "ix": "350-ARR_v1_9",
            "content": "In this section we present the two sources of data used in the experiments. Although a number of low-resource language datasets are publicly available, very few provide enough data per speaker for speaker-dependent training. For example, the maximum duration from a single speaker in BABEL languages is limited to 20 minutes.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_10",
            "content": "Public data",
            "ntype": "title",
            "meta": {
                "section": "2.1"
            }
        },
        {
            "ix": "350-ARR_v1_11",
            "content": "The Pangloss collection (Michailovsky et al., 2014) is an open archive of under-documented and mostly endangered languages. For our experiments we started from the single speaker subset 5 prepared by Wisniewski et al. (2020), which provides the audio file for each sentence and the corresponding sequence of labels, organized according to the format expected by Persephone.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_12",
            "content": "Table 1 gives the amount of training and testing audio in minutes for each language in this dataset. The language code is the 3-letter ISO-639-3 code (International Organization for Standardization, 2018). The number of phonemes depends on the particular rules for grapheme-to-phoneme conversion (as described in more details in section 3.2). The IPA column contains yes if recording was transcribed in IPA phonemes, or no if transcribed in orthographic text.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_13",
            "content": "Private data",
            "ntype": "title",
            "meta": {
                "section": "2.2"
            }
        },
        {
            "ix": "350-ARR_v1_14",
            "content": "We also had access to transcribed Inuktitut, Cree and Tsuut'inai recordings collected and transcribed during the NRC Indigenous language project (Kuhn et al., 2020). We selected a single speaker subset from each language. Transcribed recordings from a single speaker of Kurmanji Kurdish transcribed were kindly shared with us by Translators without Borders. All private data was transcribed as text rather than phonetically, but writing systems for these four languages are sufficiently close to phonetic that it was not difficult to draw up their grapheme-to-phoneme table (section 3.2).",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_15",
            "content": "STP test bed",
            "ntype": "title",
            "meta": {
                "section": "3"
            }
        },
        {
            "ix": "350-ARR_v1_16",
            "content": "In order to make a fair comparison, all models are evaluated through the same speech-to-phoneme recognition test bed. Called STP, it automates the steps required to train a phoneme recognizer from scratch i.e., with only a small number of audio files manually transcribed using a common transcription tool such as ELAN. Once trained, the recognizer can be applied to other audio files and yield the time-aligned phonetic transcription, in text or as ELAN annotations. The following sections detail the principles and design choices that were made to ensure STP could handle all the languages involved in the experiments, making it applicable to a wide range of features frequently encountered in endangered languages.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_17",
            "content": "Training",
            "ntype": "title",
            "meta": {
                "section": "3.1"
            }
        },
        {
            "ix": "350-ARR_v1_18",
            "content": "Figure 1 illustrates the training process: it takes as input a set of ELAN transcription files in .eaf format, which point to audio files and contain their transcription in text or IPA phonemes. Then it: (1) prepares the input data as a Kaldi-compatible data directory, (2) splits data into train/validation sets, (3) converts the text transcript to IPA symbols using the user-supplied grapheme-to-phoneme table, (4) converts the IPA sequences to BPE (byte-pair encoding) sequences, (5) trains a BPE language model, ( 6) trains an acoustic model, and (7) applies the acoustic and language models to transcribe the test set in order to compute the phoneme error rate.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_19",
            "content": "The Kaldi-compatible data directory is a simple format supported by several speech recognition toolkits and represents basically the same information as the ELAN file i.e., segments, features and time-aligned text transcriptions. The pipeline partitions the audio files at random, in separate train and test sets, in a 9:1 ratio. When training is complete, this held-out test set is used to measure the phoneme error rate as a diagnostic (section 3.5).",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_20",
            "content": "Grapheme-to-phoneme conversion",
            "ntype": "title",
            "meta": {
                "section": "3.2"
            }
        },
        {
            "ix": "350-ARR_v1_21",
            "content": "Some speech recognition models requires a pronunciation lexicon to convert provided transcriptions to IPA symbols, if they are written in text rather than IPA. Frequently such a lexicon does not already exist and would require effort and expertise to create. In STP we replace this requirement by a G2P (grapheme-to-phoneme) table. The table format is simple and can be quickly created manually from a description of the writing system. Each line has two fields: a sequence of UTF-8 text characters representing a grapheme from the writing system, and a sequence of IPA symbols for the corresponding pronunciation. An empty IPA symbol can be specified for graphemes that are to be ignored. The input text transcription is parsed, matching first the longest grapheme, to yield an IPA symbol sequence. This simple scheme is enough for languages which have a writing system close to phonetic. If the transcript is already in IPA, the table can be used to map several distinct IPA symbols to a single one, to remove tonal markers, for example. The main limitation of such a table is that each grapheme can only have a single IPA mapping, so no variant or alternative pronunciations are allowed for a given grapheme.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_22",
            "content": "Figure 2 gives as an example the G2P table for Inuktitut (iku). All graphemes that appear in the text transcription must be listed in the table (or they will be ignored). For this study stress markers and tone markers were ignored when mapping to IPA symbols, but other markers (such as palatalization) were kept. The actual tables used for the public dataset in this paper are publicly available as well as the rest of the STP setup, as described in section 3.6.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_23",
            "content": "Subword units: byte-pair encoding",
            "ntype": "title",
            "meta": {
                "section": "3.3"
            }
        },
        {
            "ix": "350-ARR_v1_24",
            "content": "Word units are not suitable for agglutinative or polysynthetic languages, since even impractically large vocabularies cover only a fraction of all possible words in those languages. The coverage problem could be solved with subword units such as morphemes or syllables, but BPE units (byte pair encoding) (Sennrich et al., 2015) are more commonly used and require no extra linguistic knowledge. We use BPE to encode commonly cooccurring groups of phonemes as single character. We capture phonotactic constraints with a N -gram language model of BPE units, which allows the N -gram model to capture contexts larger than the preceding N -1 phonemes.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_25",
            "content": "To easily map between BPE units in language modeling and IPA symbols in acoustic modeling, we use an intermediate code (that we call \"nxsampa\") which unambiguously represents any IPA symbol with a single character symbol. With nxsampa, mapping from BPE to IPA is simple and invertible. BPE sequences are created by encoding nxsampa sequences with a BPE encoder, which is estimated on the training nxsampa sequences. In preliminary experiments with Inuktitut (iku), we compared character-based perplexity 6 for language models based on BPE-encoded IPA sequences rather than roman character sequences. We found that perplexity was smaller (better) for IPA symbols, and was relatively independent of the BPE vocabulary size; we selected a value of 160 that we kept for all the following experiments.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_26",
            "content": "BPE training and extraction are implemented with SentencePiece (Kudo and Richardson, 2018).",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_27",
            "content": "Looking at the 160 BPE units extracted for Inuktitut, we find that they partially capture morphological information. 15% of the BPE units are single IPA symbols, 41% are syllables with 2 phonemes, and the remaining 44% of length 3 or more are morphemes 7 at least 76% of the time.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_28",
            "content": "Transcription",
            "ntype": "title",
            "meta": {
                "section": "3.4"
            }
        },
        {
            "ix": "350-ARR_v1_29",
            "content": "Figure 3 details the transcription process, which takes an untranscribed audio file as input and returns an ELAN file containing a transcription tier with time-aligned IPA phonemes. The transcription steps are: (1) apply voice-activity detection (VAD) and group together adjacent voice segments 6 Counting roman characters rather than words, as it is directly related to the bits-per-character measure and is less dependent on the subword inventory (Cotterell et al., 2018).",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_30",
            "content": "7 More exactly, are in the set of morphemes produced by the Uqailaut analyzer (Farley, 2012) from the Nunavut Hansards.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_31",
            "content": "that belong to the same speaker to define speech segments to be processed (diarization), (2) apply the trained phoneme recognizer to produce BPE sequences, (3) convert BPE sequences to IPA, (4) produce an ELAN file containing an annotation tier of time-aligned IPA phonemes. Note that the first step of segmenting the raw audio into short segments of speech can by itself significantly reduce transcription efforts, as it automates the first step of manual transcription.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_32",
            "content": "Error rate computation",
            "ntype": "title",
            "meta": {
                "section": "3.5"
            }
        },
        {
            "ix": "350-ARR_v1_33",
            "content": "The training pipeline includes a diagnostic measurement of phoneme error rate on the held-out test set. It follows the transcription process of Figure 3 except that segments are defined by the reference transcription rather than VAD output. The recognizer output sequences are compared to the reference sequences obtained by applying the G2P table to the EAF transcription. The phoneme error rate is computed as usual as the ratio of the total number of insertions, deletions and substitutions over the number of phonemes in the reference.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_34",
            "content": "Reproducibility",
            "ntype": "title",
            "meta": {
                "section": "3.6"
            }
        },
        {
            "ix": "350-ARR_v1_35",
            "content": "We make STP publicly available for research purposes 8 , as a docker container which can be run on many operating systems. Already prepared datasets in ELAN format and their G2P tables for the 7 Pan-Gloss languages are also made available in a github repository 9 . HMM-GMM baseline results found in this paper can be easily reproduced by running the container on the provided datasets.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_36",
            "content": "Experiments",
            "ntype": "title",
            "meta": {
                "section": "4"
            }
        },
        {
            "ix": "350-ARR_v1_37",
            "content": "We evaluated models from four main classes: a conventional hidden Markov models with Gaussian mixture models (HMM-GMM), an end-to-end recurrent neural network, a convolutional/transformer-based neural network, and a large pretrained transformer neural network. We compare time required for training, hardware and software requirements, and accuracy of transcription. For a fair comparison, all models are trained and evaluated using the same STP test bed and languages. Only the training pipeline is run since it includes computation of phoneme error rate on the held-out part of the dataset. For a given model, the same hyperparameters were used across all languages, and are taken from the reference published paper (except where differences are noted in following sections). The test set was used only for measuring phoneme error rate and was not involved in any tuning.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_38",
            "content": "Baseline (HMM-GMM)",
            "ntype": "title",
            "meta": {
                "section": "4.1"
            }
        },
        {
            "ix": "350-ARR_v1_39",
            "content": "Good results were previously obtained with HMM-GMM for single speaker phoneme recognition, in low-resource conditions for Cree (Gupta and Boulianne, 2020). To extend those results to other languages, we implemented a general HMM-GMM baseline with the Kaldi toolkit (Povey et al., 2011), modified for phoneme recognition with BPE units. The HMM-GMM acoustic model training follows the usual steps of the Kaldi \"wsj\" recipe 10 , starting with monophone models (larger than usual beamwidth) and building up to LDA+MLLT+SAT triphone models (tri4), with 1000 model states and a total of 20,000 Gaussian means, amounting to about 800K free parameters. Input features are MFCC \"hires\" features with 40 coefficients computed from audio sampled at 16 kHz. The language model is a 4-gram backoff trained using srilm (Stolcke, 2002) with Witten-Bell discounting (Witten and Bell, 1991). 10 https://github.com/kaldi-asr/kaldi/ tree/master/egs/wsj/s5 4.2 Persephone (Wisn20)",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_40",
            "content": "For reference we also include results published by Wisniewski et al. (2020). This end-to-end system is a long short-term memory neural recurrent network (LSTM) trained using the Persephone toolkit, with a connectionist temporal classification (CTC) loss criterion. It has no explicit language model, relying only on the implicit modeling of the LSTM. The dataset on which Wisniewski et al. (2020) reported their results was the same as described here in Section 2.1, except that due to limitations of Persephone, they had to exclude audio chunks longer than 10 seconds. This only made a significant difference for Dotyal (nep), which was limited to 44 minutes in Wisniewski et al. (2020), while here we are able to use 95 minutes.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_41",
            "content": "Pretrained multilingual model (XLSR-53)",
            "ntype": "title",
            "meta": {
                "section": "4.3"
            }
        },
        {
            "ix": "350-ARR_v1_42",
            "content": "XLSR-53 11 is a large version of the wav2vec2.0 model (Conneau et al., 2020), pretrained on 56,000 hours from 53 languages from Multilingual Lib-riSpeech, CommonVoice and BABEL datasets. The encoder is transformer-based with a convolutional front-end and is shared across languages, similar to the approach of Dalmia et al. (2018).",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_43",
            "content": "We fine-tune XLSR-53 on each language using the audio segments from the STP prepared data. The feature extraction layers are frozen and only decoder layers are trained, using nxsampa labels with a CTC loss. We use nxsampa rather than BPE since XLSR-53 model words as sequences of single characters. We rely on decoder attention heads for the language model and do not use an external one.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_44",
            "content": "SpecAugment (Park et al., 2019) was applied with the default parameters. Batch size and learning rate are optimized separately for each language to obtain stable learning on the training set. For all languages, training is stopped after a fixed number of epochs that represents approximately 16,000 steps; warmup is set at 10% of total steps. The total number of parameters in the model is 315M, but fine-tuning updates only the language model head layers, which amount to 76K trainable parameters.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_45",
            "content": "Conformer with LF-MMI (k2-conf)",
            "ntype": "title",
            "meta": {
                "section": "4.4"
            }
        },
        {
            "ix": "350-ARR_v1_46",
            "content": "The Conformer model (Gulati et al., 2020) is a transformer-based architecture augmented with convolutional input layers. We based our implementation on the snowfall k2-fsa 12 version. As for HMM-GMM, we trained the model with the same audio segments and BPE labels prepared by the STP test bed. The training criterion was LF-MMI (Povey et al., 2016). All languages were trained for 160 epochs. The language model is the same 4-gram model used by the HMM-GMM baseline. Data augmentation was performed using speed perturbation with five values [0.8, 0.9, 1.0, 1.1, 1.2]. Other data augmentation like SpecAugment and noise/reverberation were not used. The number of trainable parameters in this model is 32M.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_47",
            "content": "Results",
            "ntype": "title",
            "meta": {
                "section": "5"
            }
        },
        {
            "ix": "350-ARR_v1_48",
            "content": "The four architectures are compared in terms of phoneme error rate, and elapsed time for training, in Table 3 for the public dataset and Table 4 for the private dataset. HMM-GMM refers to the baseline HMM-GMM from section 4.1, Wisn20 to Persephone from section 4.2, XLSR-53 to the pretrained multilingual model of section 4.3, and k2-conf to the Conformer model of section 4.4.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_49",
            "content": "In each table, languages appear in descending order of total audio duration available for training. Note that the nru33 subset is used here rather than the full nru, to make it more comparable. True in the IPA column indicates that transcriptions are IPA symbols, false means that transcriptions are orthographic. Phoneme error rates reported are obtained using the speaker turn segmentation from the transcript. In an actual transcription pipeline, VAD would be used and might introduce errors that could slightly degrade the actual PER. Also note that the reference is the phoneme string generated by the G2P table, so tone or stress errors are not counted if tone or stress is not represented by distinct phonemes in the table.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_50",
            "content": "12 https://github.com/k2-fsa/snowfall",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_51",
            "content": "Discussion",
            "ntype": "title",
            "meta": {
                "section": "5.1"
            }
        },
        {
            "ix": "350-ARR_v1_52",
            "content": "Looking at the phoneme error rate (PER) columns in Table 3, XLSR-53 is seen to outperform the other models for all languages in the public dataset, with an average of 13.6% PER. In one case, it obtains 8.6% PER with only 20 minutes of training. Similarly in the private dataset, Table 4 shows XLSR-53 outperforming the other models for all languages, except for Tsuut'ina (srs). For this language XLSR-53 training converges unusually fast and floors to a high PER; in contrast, HMM-GMM and k2-conf results on this language are their best in the private dataset. Note that the HMM-GMM result for Cree (crl) is 14.2% PER, slightly better than previously reported for an HMM-BLSTM deep recursive model (Gupta and Boulianne, 2020). The HMM-GMM system obtains the second-lowest average PER (41.1%) for public languages but is third for the private dataset, with 13.2% PER.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_53",
            "content": "We find a significant degradation of performance for all models when audio training duration drops to 99 minutes or less. This can be seen in Table 5, where we summarized results from Tables 3 and 4 Table 5 shows that with over 99 minutes, HMM-GMM, XLSR and k2-conf have a PER of 13.9% or less (excluding the srs result for XLSR). When training falls to 99 minutes or less, PER increases considerably for k2-conf, moderately for HMM-GMM and less dramatically for XLSR-53. To confirm this, in Table 6 we compare various amounts of training for the same language, Yongning Na (nru). From 464 to 151 minutes, error rates increase much less for HMM-GMM and XLSR, than from 151 to 68 minutes, so there seems to be a divide around 90 minutes, or 1.5 hours. The result for nru from Wisniewski et al. (2020) is included for completeness. Are these error rates low enough to facilitate language documentation? found that character error rates around 6 to 10% could reduce the effort of accurate transcription by 75%. Here a PER below 10% was obtained for all the languages in Tables 3 and 4 which had more than 99 minutes for training, so it looks like useful error rates are feasible with 1.5 hours of transcribed data.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_54",
            "content": "Regarding the elapsed time required for training, the last three columns in Tables 3 and 4 show major differences between the models 13 . The HMM-GMM system is not only much faster, but is also the only one which does not use a GPU. So although it does not yield the best PER, it could still be a useful model for field work, since it can run on limited hardware in a short time.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_55",
            "content": "These results are obtained with only one speaker per language. While generalization is possible when looking at several languages, interpretation for one language in particular must be done carefully. This is a true limitation but also reflects the challenge of working with endangered languages.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_56",
            "content": "Conclusion",
            "ntype": "title",
            "meta": {
                "section": "6"
            }
        },
        {
            "ix": "350-ARR_v1_57",
            "content": "Fine-tuning a large pretrained multilingual model outperformed the other approaches (although failing in one case). For the 6 languages with 99 minutes or less of training data, the pretrained model was able to average a phoneme error rate of 15.3%. We obtained 8.4% or less PER for the 5 languages which had between 100 and 192 minutes. At this level of performance, we expect ASR to significantly reduce the effort required for transcription of endangered languages. Further work is needed to explore handling of tone and stress markers, and enlarge the curated speaker-dependent dataset with other publicly available languages.",
            "ntype": "p",
            "meta": null
        },
        {
            "ix": "350-ARR_v1_58",
            "content": "Oliver Adams, Trevor Cohn, Graham Neubig, Steven Bird, Alexis Michaud, Evaluating Phonemic Transcription of Low-Resource Tonal Languages for Language Documentation, 2018, Proc. LREC, .",
            "ntype": "ref",
            "meta": {
                "xid": "b0",
                "authors": [
                    "Oliver Adams",
                    "Trevor Cohn",
                    "Graham Neubig",
                    "Steven Bird",
                    "Alexis Michaud"
                ],
                "title": "Evaluating Phonemic Transcription of Low-Resource Tonal Languages for Language Documentation",
                "pub_date": "2018",
                "pub_title": "Proc. LREC",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_59",
            "content": "Oliver Adams, Benjamin Galliot, Guillaume Wisniewski, Nicholas Lambourne, Ben Foley, User-friendly automatic transcription of lowresource languages: Plugging ESPnet into Elpis, 2021, Proc. 4th Workshop on the Use of Computational Methods in the Study of Endangered Languages, .",
            "ntype": "ref",
            "meta": {
                "xid": "b1",
                "authors": [
                    "Oliver Adams",
                    "Benjamin Galliot",
                    "Guillaume Wisniewski",
                    "Nicholas Lambourne",
                    "Ben Foley"
                ],
                "title": "User-friendly automatic transcription of lowresource languages: Plugging ESPnet into Elpis",
                "pub_date": "2021",
                "pub_title": "Proc. 4th Workshop on the Use of Computational Methods in the Study of Endangered Languages",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_60",
            "content": "Jonathan Amith, Jiatong Shi, Rey Garc\u00eda, End-to-End Automatic Speech Recognition: Its Impact on the Workflowin Documenting Yolox\u00f3chitl Mixtec, 2021, Proc. 1st Workshop on Natural Language Processing for Indigenous Languages of the Americas, .",
            "ntype": "ref",
            "meta": {
                "xid": "b2",
                "authors": [
                    "Jonathan Amith",
                    "Jiatong Shi",
                    "Rey Garc\u00eda"
                ],
                "title": "End-to-End Automatic Speech Recognition: Its Impact on the Workflowin Documenting Yolox\u00f3chitl Mixtec",
                "pub_date": "2021",
                "pub_title": "Proc. 1st Workshop on Natural Language Processing for Indigenous Languages of the Americas",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_61",
            "content": "Alexis Conneau, Alexei Baevski, Ronan Collobert, Abdelrahman Mohamed, Michael Auli, Unsupervised Cross-lingual Representation Learning for Speech Recognition, 2020, Computing Research Repository, .",
            "ntype": "ref",
            "meta": {
                "xid": "b3",
                "authors": [
                    "Alexis Conneau",
                    "Alexei Baevski",
                    "Ronan Collobert",
                    "Abdelrahman Mohamed",
                    "Michael Auli"
                ],
                "title": "Unsupervised Cross-lingual Representation Learning for Speech Recognition",
                "pub_date": "2020",
                "pub_title": "Computing Research Repository",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_62",
            "content": "UNKNOWN, None, 2018, Are All Languages Equally Hard to Language-Model? Computing Research Repository, .",
            "ntype": "ref",
            "meta": {
                "xid": "b4",
                "authors": null,
                "title": null,
                "pub_date": "2018",
                "pub_title": "Are All Languages Equally Hard to Language-Model? Computing Research Repository",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_63",
            "content": "Siddharth Dalmia, Ramon Sanabria, Florian Metze, Alan Black, Sequence-based Multilingual Low Ressource Speech Recognition, 2018, Proc. ICASSP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b5",
                "authors": [
                    "Siddharth Dalmia",
                    "Ramon Sanabria",
                    "Florian Metze",
                    "Alan Black"
                ],
                "title": "Sequence-based Multilingual Low Ressource Speech Recognition",
                "pub_date": "2018",
                "pub_title": "Proc. ICASSP",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_64",
            "content": "UNKNOWN, None, 2012, The Uqailaut project, .",
            "ntype": "ref",
            "meta": {
                "xid": "b6",
                "authors": null,
                "title": null,
                "pub_date": "2012",
                "pub_title": "The Uqailaut project",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_65",
            "content": "Anmol Gulati, James Qin, Chung Chiu, Niki Parmar, Yu Zhang, Jiahui Yu, Wei Han, Shibo Wang, Zhengdong Zhang, Yonghui Wu, Ruoming Pang, Conformer: Convolution-augmented transformer for speech recognition, 2020, Proc. Interspeech, .",
            "ntype": "ref",
            "meta": {
                "xid": "b7",
                "authors": [
                    "Anmol Gulati",
                    "James Qin",
                    "Chung Chiu",
                    "Niki Parmar",
                    "Yu Zhang",
                    "Jiahui Yu",
                    "Wei Han",
                    "Shibo Wang",
                    "Zhengdong Zhang",
                    "Yonghui Wu",
                    "Ruoming Pang"
                ],
                "title": "Conformer: Convolution-augmented transformer for speech recognition",
                "pub_date": "2020",
                "pub_title": "Proc. Interspeech",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_66",
            "content": "Vishwa Gupta, Gilles Boulianne, Speech Transcription Challenges for Resource Constrained Indigenous Language Cree, 2020, Proc. 1st Joint SLTU CCURL, .",
            "ntype": "ref",
            "meta": {
                "xid": "b8",
                "authors": [
                    "Vishwa Gupta",
                    "Gilles Boulianne"
                ],
                "title": "Speech Transcription Challenges for Resource Constrained Indigenous Language Cree",
                "pub_date": "2020",
                "pub_title": "Proc. 1st Joint SLTU CCURL",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_67",
            "content": "UNKNOWN, None, 2018, International Organization for Standardization. Codes for the representation of names of languages -Part 3: Alpha-3 code for comprehensive coverage of languages, .",
            "ntype": "ref",
            "meta": {
                "xid": "b9",
                "authors": null,
                "title": null,
                "pub_date": "2018",
                "pub_title": "International Organization for Standardization. Codes for the representation of names of languages -Part 3: Alpha-3 code for comprehensive coverage of languages",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_68",
            "content": "Taku Kudo, John Richardson, SentencePiece: A simple and language independent subword tokenizer and detokenizer for Neural Text Processing, 2018, Proc. EMNLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b10",
                "authors": [
                    "Taku Kudo",
                    "John Richardson"
                ],
                "title": "SentencePiece: A simple and language independent subword tokenizer and detokenizer for Neural Text Processing",
                "pub_date": "2018",
                "pub_title": "Proc. EMNLP",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_69",
            "content": "Roland Kuhn, Fineen Davis, Alain D\u00e9silets, The Indigenous Languages Technology project at NRC Canada : An empowerment-oriented approach to developing language software, 2020, Proc. COLING, .",
            "ntype": "ref",
            "meta": {
                "xid": "b11",
                "authors": [
                    "Roland Kuhn",
                    "Fineen Davis",
                    "Alain D\u00e9silets"
                ],
                "title": "The Indigenous Languages Technology project at NRC Canada : An empowerment-oriented approach to developing language software",
                "pub_date": "2020",
                "pub_title": "Proc. COLING",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_70",
            "content": "Xinjian Li, Siddharth Dalmia, Juncheng Li, Matthew Lee, Patrick Littell, Jiali Yao, ; David, R Mortensen, Graham Neubig, Alan Black, Florian Metze, Universal Phone Recognition with a Multilingual Allophone System, 2020, Proc. ICASSP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b12",
                "authors": [
                    "Xinjian Li",
                    "Siddharth Dalmia",
                    "Juncheng Li",
                    "Matthew Lee",
                    "Patrick Littell",
                    "Jiali Yao",
                    "; David",
                    "R Mortensen",
                    "Graham Neubig",
                    "Alan Black",
                    "Florian Metze"
                ],
                "title": "Universal Phone Recognition with a Multilingual Allophone System",
                "pub_date": "2020",
                "pub_title": "Proc. ICASSP",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_71",
            "content": "UNKNOWN, None, 2014, Documenting and researching endangered languages: the Pangloss Collection. Conservation, .",
            "ntype": "ref",
            "meta": {
                "xid": "b13",
                "authors": null,
                "title": null,
                "pub_date": "2014",
                "pub_title": "Documenting and researching endangered languages: the Pangloss Collection. Conservation",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_72",
            "content": "Daniel Park, William Chan, Yu Zhang, Chung Chiu, Barret Zoph, D Ekin,  Cubuk, V Quoc,  Le, SpecAugment: A Simple Data Augmentation Method for Automatic Speech Recognition, 2019, Proc. Interspeech, .",
            "ntype": "ref",
            "meta": {
                "xid": "b14",
                "authors": [
                    "Daniel Park",
                    "William Chan",
                    "Yu Zhang",
                    "Chung Chiu",
                    "Barret Zoph",
                    "D Ekin",
                    " Cubuk",
                    "V Quoc",
                    " Le"
                ],
                "title": "SpecAugment: A Simple Data Augmentation Method for Automatic Speech Recognition",
                "pub_date": "2019",
                "pub_title": "Proc. Interspeech",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_73",
            "content": "Daniel Povey, Arnab Ghoshal, The Kaldi speech recognition toolkit, 2011, Proc. ASRU, .",
            "ntype": "ref",
            "meta": {
                "xid": "b15",
                "authors": [
                    "Daniel Povey",
                    "Arnab Ghoshal"
                ],
                "title": "The Kaldi speech recognition toolkit",
                "pub_date": "2011",
                "pub_title": "Proc. ASRU",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_74",
            "content": "Daniel Povey, Vijayaditya Peddinti, Daniel Galvez, Purely sequence-trained neural networks for ASR based on lattice-free MMI, 2016, Proc. Interspeech, .",
            "ntype": "ref",
            "meta": {
                "xid": "b16",
                "authors": [
                    "Daniel Povey",
                    "Vijayaditya Peddinti",
                    "Daniel Galvez"
                ],
                "title": "Purely sequence-trained neural networks for ASR based on lattice-free MMI",
                "pub_date": "2016",
                "pub_title": "Proc. Interspeech",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_75",
            "content": "UNKNOWN, None, 2015, Neural Machine Translation of Rare Words with Subword Units. Computing Research Repository, .",
            "ntype": "ref",
            "meta": {
                "xid": "b17",
                "authors": null,
                "title": null,
                "pub_date": "2015",
                "pub_title": "Neural Machine Translation of Rare Words with Subword Units. Computing Research Repository",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_76",
            "content": "Jiatong Shi, Jonathan Amith, Rey Castillo Garc\u00eda, Esteban Sierra, Kevin Duh, Shinji Watanabe, Leveraging End-to-End ASR for Endangered Language Documentation: An Empirical Study on Yolox\u00f3chitl Mixtec, 2021, Computing Research Repository, .",
            "ntype": "ref",
            "meta": {
                "xid": "b18",
                "authors": [
                    "Jiatong Shi",
                    "Jonathan Amith",
                    "Rey Castillo Garc\u00eda",
                    "Esteban Sierra",
                    "Kevin Duh",
                    "Shinji Watanabe"
                ],
                "title": "Leveraging End-to-End ASR for Endangered Language Documentation: An Empirical Study on Yolox\u00f3chitl Mixtec",
                "pub_date": "2021",
                "pub_title": "Computing Research Repository",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_77",
            "content": "Andreas Stolcke, SRILM -An extensible language modeling toolkit, 2002, Proc. ICSLP, .",
            "ntype": "ref",
            "meta": {
                "xid": "b19",
                "authors": [
                    "Andreas Stolcke"
                ],
                "title": "SRILM -An extensible language modeling toolkit",
                "pub_date": "2002",
                "pub_title": "Proc. ICSLP",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_78",
            "content": "Guillaume Wisniewski, S\u00e9verine Guillaume, Alexis Michaud, Phonemic Transcription of Low-Resource Languages: To What Extent can Preprocessing be Automated?, 2020, Proc. 1st Joint SLTU CCURL Workshop, .",
            "ntype": "ref",
            "meta": {
                "xid": "b20",
                "authors": [
                    "Guillaume Wisniewski",
                    "S\u00e9verine Guillaume",
                    "Alexis Michaud"
                ],
                "title": "Phonemic Transcription of Low-Resource Languages: To What Extent can Preprocessing be Automated?",
                "pub_date": "2020",
                "pub_title": "Proc. 1st Joint SLTU CCURL Workshop",
                "pub": null
            }
        },
        {
            "ix": "350-ARR_v1_79",
            "content": "H Ian, Thimoty Witten,  Bell, The zerofrequency problem: Estimating the probabilities of novel events in adaptive text compression, 1991, IEEE Transactions on Information Theory, .",
            "ntype": "ref",
            "meta": {
                "xid": "b21",
                "authors": [
                    "H Ian",
                    "Thimoty Witten",
                    " Bell"
                ],
                "title": "The zerofrequency problem: Estimating the probabilities of novel events in adaptive text compression",
                "pub_date": "1991",
                "pub_title": "IEEE Transactions on Information Theory",
                "pub": null
            }
        }
    ],
    "span_nodes": [
        {
            "ix": "350-ARR_v1_0@0",
            "content": "Phoneme transcription of endangered languages: an evaluation of recent ASR architectures in the single speaker scenario",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_0",
            "start": 0,
            "end": 118,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_1@0",
            "content": "Abstract",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_1",
            "start": 0,
            "end": 7,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_2@0",
            "content": "Transcription is often reported as the bottleneck in endangered language documentation, requiring large efforts from scarce speakers and transcribers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_2",
            "start": 0,
            "end": 149,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_2@1",
            "content": "In general, automatic speech recognition (ASR) can be accurate enough to accelerate transcription only if trained on large amounts of transcribed data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_2",
            "start": 151,
            "end": 301,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_2@2",
            "content": "However, when a single speaker is involved, several studies have reported encouraging results for phonetic transcription even with small amounts of training.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_2",
            "start": 303,
            "end": 459,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_2@3",
            "content": "Here we expand this body of work on speaker-dependent transcription by comparing four ASR approaches, notably recent transformer and pretrained multilingual models, on a common dataset of 11 languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_2",
            "start": 461,
            "end": 661,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_2@4",
            "content": "To automate data preparation, training and evaluation steps, we also developed a phoneme recognition setup which handles morphologically complex languages and writing systems for which no pronunciation dictionary exists.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_2",
            "start": 663,
            "end": 882,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_2@5",
            "content": "We find that fine-tuning a multilingual pretrained model yields an average phoneme error rate (PER) of 15% for 6 languages with 99 minutes or less of transcribed data for training.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_2",
            "start": 884,
            "end": 1063,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_2@6",
            "content": "For the 5 languages with between 100 and 192 minutes of training, we achieved a PER of 8.4% or less.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_2",
            "start": 1065,
            "end": 1164,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_2@7",
            "content": "These results on a number of varied languages suggest that ASR can now significantly reduce transcription efforts in the speaker-dependent situation common in endangered language work.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_2",
            "start": 1166,
            "end": 1349,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_3@0",
            "content": "Introduction",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_3",
            "start": 0,
            "end": 11,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_4@0",
            "content": "Recent progress in automatic speech recognition (ASR) has been obtained by training neural networks on increasingly large amounts of annotated data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_4",
            "start": 0,
            "end": 147,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_4@1",
            "content": "To significantly reduce the efforts needed to transcribe endangered languages, ASR must reach sufficient accuracy when trained on relatively much smaller amounts of transcribed data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_4",
            "start": 149,
            "end": 330,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_4@2",
            "content": "Already several research efforts have been dedicated specifically to ASR for low-resource languages, such as the IARPA BABEL program 1 and the NIST Ope-nASR Challenge 2 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_4",
            "start": 332,
            "end": 501,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_4@3",
            "content": "However, creating an ASR system for a task like speaker-independent phonetic transcription is still difficult and requires amounts of transcription that are very large in the context of endangered languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_4",
            "start": 503,
            "end": 709,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_4@4",
            "content": "For example, recently concluded that at least 50 hours of training data are needed for this task, comparing ESPnet and HMM-based models on two languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_4",
            "start": 711,
            "end": 863,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_5@0",
            "content": "In language documentation, field recordings are seldom made with a large number of speakers, but rather with a few speakers and for long durations .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_5",
            "start": 0,
            "end": 147,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_5@1",
            "content": "In these conditions, small amounts of transcribed data from a single speaker might be enough to train a phoneme recognizer with sufficient accuracy to automatically transcribe the remaining recordings from the same speaker.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_5",
            "start": 149,
            "end": 371,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_5@2",
            "content": "Concentrating on the single speaker scenario, Adams et al. (2018) evaluated a CTC-based LSTM model on Na and Chatino, and showed encouraging results for automated phoneme transcription as well as the effectiveness of this approach for linguistic work on endangered languages; they also created the open-source phonemic transcription tool Persephone.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_5",
            "start": 373,
            "end": 721,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_5@3",
            "content": "Wisniewski et al. (2020) compared Persephone performance on several endangered languages, focussing on data preprocessing concerns.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_5",
            "start": 723,
            "end": 853,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_5@4",
            "content": "Gupta and Boulianne (2020) compared end-to-end Persephone and wav2letter++ with an HMM-BLSTM hybrid for single speaker phoneme transcription, but using only one language, Cree.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_5",
            "start": 855,
            "end": 1030,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_5@5",
            "content": "More recently, Adams et al. (2021) evaluated ES-Pnet on Na, Chatino and Japhug and integrated it into Elpis to create a user friendly docker container.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_5",
            "start": 1032,
            "end": 1182,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_6@0",
            "content": "Although these previous studies obtained promising results, they report on different systems and languages, making them difficult to compare.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_6",
            "start": 0,
            "end": 140,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_6@1",
            "content": "In addition, none has yet evaluated the recent large models pretrained on many languages, for example XLSR (Conneau et al., 2020) 3 , which are particularly well suited for low-resource languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_6",
            "start": 142,
            "end": 337,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_7@0",
            "content": "In this paper we extend the body of work on single speaker phonetic transcription for endangered or low-resource languages while introducing distinctive contributions.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_7",
            "start": 0,
            "end": 166,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_7@1",
            "content": "For a meaningful comparison, we evaluate 4 systems with different modeling approaches across a common set of 7 languages, and 3 of those systems across 11 languages, while previous work was limited to either a single system on many languages, or many systems on a single language.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_7",
            "start": 168,
            "end": 447,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_7@2",
            "content": "In addition to Persephone and HMM-GMM models, we compare two recent architectures that have never been evaluated for singlespeaker phoneme recognition: a Conformer model with a LF-MMI criterion, and a large pretrained multilingual model that we fine-tune for this task.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_7",
            "start": 449,
            "end": 717,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_7@3",
            "content": "We more firmly establish the feasibility of accurate automatic phonemic transcription with 3 hours or less of transcribed data by reporting on 4 new languages, including Cree and highly polysynthetic Inuktitut, in addition to 7 other previously studied in the literature.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_7",
            "start": 719,
            "end": 989,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_7@4",
            "content": "Finally, for reproducibility we make publicly available the curated dataset of public languages and a platform-independent container which allow users to reproduce the experiments from this paper 4 or train their own phoneme recognizer for a new endangered language.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_7",
            "start": 991,
            "end": 1256,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_8@0",
            "content": "Datasets",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_8",
            "start": 0,
            "end": 7,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_9@0",
            "content": "In this section we present the two sources of data used in the experiments.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_9",
            "start": 0,
            "end": 74,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_9@1",
            "content": "Although a number of low-resource language datasets are publicly available, very few provide enough data per speaker for speaker-dependent training.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_9",
            "start": 76,
            "end": 223,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_9@2",
            "content": "For example, the maximum duration from a single speaker in BABEL languages is limited to 20 minutes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_9",
            "start": 225,
            "end": 324,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_10@0",
            "content": "Public data",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_10",
            "start": 0,
            "end": 10,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_11@0",
            "content": "The Pangloss collection (Michailovsky et al., 2014) is an open archive of under-documented and mostly endangered languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_11",
            "start": 0,
            "end": 122,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_11@1",
            "content": "For our experiments we started from the single speaker subset 5 prepared by Wisniewski et al. (2020), which provides the audio file for each sentence and the corresponding sequence of labels, organized according to the format expected by Persephone.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_11",
            "start": 124,
            "end": 372,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_12@0",
            "content": "Table 1 gives the amount of training and testing audio in minutes for each language in this dataset.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_12",
            "start": 0,
            "end": 99,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_12@1",
            "content": "The language code is the 3-letter ISO-639-3 code (International Organization for Standardization, 2018).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_12",
            "start": 101,
            "end": 204,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_12@2",
            "content": "The number of phonemes depends on the particular rules for grapheme-to-phoneme conversion (as described in more details in section 3.2).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_12",
            "start": 206,
            "end": 341,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_12@3",
            "content": "The IPA column contains yes if recording was transcribed in IPA phonemes, or no if transcribed in orthographic text.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_12",
            "start": 343,
            "end": 458,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_13@0",
            "content": "Private data",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_13",
            "start": 0,
            "end": 11,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_14@0",
            "content": "We also had access to transcribed Inuktitut, Cree and Tsuut'inai recordings collected and transcribed during the NRC Indigenous language project (Kuhn et al., 2020).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_14",
            "start": 0,
            "end": 164,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_14@1",
            "content": "We selected a single speaker subset from each language.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_14",
            "start": 166,
            "end": 220,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_14@2",
            "content": "Transcribed recordings from a single speaker of Kurmanji Kurdish transcribed were kindly shared with us by Translators without Borders.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_14",
            "start": 222,
            "end": 356,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_14@3",
            "content": "All private data was transcribed as text rather than phonetically, but writing systems for these four languages are sufficiently close to phonetic that it was not difficult to draw up their grapheme-to-phoneme table (section 3.2).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_14",
            "start": 358,
            "end": 587,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_15@0",
            "content": "STP test bed",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_15",
            "start": 0,
            "end": 11,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_16@0",
            "content": "In order to make a fair comparison, all models are evaluated through the same speech-to-phoneme recognition test bed.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_16",
            "start": 0,
            "end": 116,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_16@1",
            "content": "Called STP, it automates the steps required to train a phoneme recognizer from scratch i.e., with only a small number of audio files manually transcribed using a common transcription tool such as ELAN.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_16",
            "start": 118,
            "end": 318,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_16@2",
            "content": "Once trained, the recognizer can be applied to other audio files and yield the time-aligned phonetic transcription, in text or as ELAN annotations.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_16",
            "start": 320,
            "end": 466,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_16@3",
            "content": "The following sections detail the principles and design choices that were made to ensure STP could handle all the languages involved in the experiments, making it applicable to a wide range of features frequently encountered in endangered languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_16",
            "start": 468,
            "end": 716,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_17@0",
            "content": "Training",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_17",
            "start": 0,
            "end": 7,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_18@0",
            "content": "Figure 1 illustrates the training process: it takes as input a set of ELAN transcription files in .eaf format, which point to audio files and contain their transcription in text or IPA phonemes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_18",
            "start": 0,
            "end": 193,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_18@1",
            "content": "Then it: (1) prepares the input data as a Kaldi-compatible data directory, (2) splits data into train/validation sets, (3) converts the text transcript to IPA symbols using the user-supplied grapheme-to-phoneme table, (4) converts the IPA sequences to BPE (byte-pair encoding) sequences, (5) trains a BPE language model, ( 6) trains an acoustic model, and (7) applies the acoustic and language models to transcribe the test set in order to compute the phoneme error rate.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_18",
            "start": 195,
            "end": 665,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_19@0",
            "content": "The Kaldi-compatible data directory is a simple format supported by several speech recognition toolkits and represents basically the same information as the ELAN file i.e., segments, features and time-aligned text transcriptions.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_19",
            "start": 0,
            "end": 228,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_19@1",
            "content": "The pipeline partitions the audio files at random, in separate train and test sets, in a 9:1 ratio.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_19",
            "start": 230,
            "end": 328,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_19@2",
            "content": "When training is complete, this held-out test set is used to measure the phoneme error rate as a diagnostic (section 3.5).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_19",
            "start": 330,
            "end": 451,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_20@0",
            "content": "Grapheme-to-phoneme conversion",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_20",
            "start": 0,
            "end": 29,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@0",
            "content": "Some speech recognition models requires a pronunciation lexicon to convert provided transcriptions to IPA symbols, if they are written in text rather than IPA.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 0,
            "end": 158,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@1",
            "content": "Frequently such a lexicon does not already exist and would require effort and expertise to create.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 160,
            "end": 257,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@2",
            "content": "In STP we replace this requirement by a G2P (grapheme-to-phoneme) table.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 259,
            "end": 330,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@3",
            "content": "The table format is simple and can be quickly created manually from a description of the writing system.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 332,
            "end": 435,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@4",
            "content": "Each line has two fields: a sequence of UTF-8 text characters representing a grapheme from the writing system, and a sequence of IPA symbols for the corresponding pronunciation.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 437,
            "end": 613,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@5",
            "content": "An empty IPA symbol can be specified for graphemes that are to be ignored.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 615,
            "end": 688,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@6",
            "content": "The input text transcription is parsed, matching first the longest grapheme, to yield an IPA symbol sequence.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 690,
            "end": 798,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@7",
            "content": "This simple scheme is enough for languages which have a writing system close to phonetic.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 800,
            "end": 888,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@8",
            "content": "If the transcript is already in IPA, the table can be used to map several distinct IPA symbols to a single one, to remove tonal markers, for example.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 890,
            "end": 1038,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_21@9",
            "content": "The main limitation of such a table is that each grapheme can only have a single IPA mapping, so no variant or alternative pronunciations are allowed for a given grapheme.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_21",
            "start": 1040,
            "end": 1210,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_22@0",
            "content": "Figure 2 gives as an example the G2P table for Inuktitut (iku).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_22",
            "start": 0,
            "end": 62,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_22@1",
            "content": "All graphemes that appear in the text transcription must be listed in the table (or they will be ignored).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_22",
            "start": 64,
            "end": 169,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_22@2",
            "content": "For this study stress markers and tone markers were ignored when mapping to IPA symbols, but other markers (such as palatalization) were kept.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_22",
            "start": 171,
            "end": 312,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_22@3",
            "content": "The actual tables used for the public dataset in this paper are publicly available as well as the rest of the STP setup, as described in section 3.6.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_22",
            "start": 314,
            "end": 462,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_23@0",
            "content": "Subword units: byte-pair encoding",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_23",
            "start": 0,
            "end": 32,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_24@0",
            "content": "Word units are not suitable for agglutinative or polysynthetic languages, since even impractically large vocabularies cover only a fraction of all possible words in those languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_24",
            "start": 0,
            "end": 180,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_24@1",
            "content": "The coverage problem could be solved with subword units such as morphemes or syllables, but BPE units (byte pair encoding) (Sennrich et al., 2015) are more commonly used and require no extra linguistic knowledge.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_24",
            "start": 182,
            "end": 393,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_24@2",
            "content": "We use BPE to encode commonly cooccurring groups of phonemes as single character.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_24",
            "start": 395,
            "end": 475,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_24@3",
            "content": "We capture phonotactic constraints with a N -gram language model of BPE units, which allows the N -gram model to capture contexts larger than the preceding N -1 phonemes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_24",
            "start": 477,
            "end": 646,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_25@0",
            "content": "To easily map between BPE units in language modeling and IPA symbols in acoustic modeling, we use an intermediate code (that we call \"nxsampa\") which unambiguously represents any IPA symbol with a single character symbol.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_25",
            "start": 0,
            "end": 220,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_25@1",
            "content": "With nxsampa, mapping from BPE to IPA is simple and invertible.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_25",
            "start": 222,
            "end": 284,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_25@2",
            "content": "BPE sequences are created by encoding nxsampa sequences with a BPE encoder, which is estimated on the training nxsampa sequences.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_25",
            "start": 286,
            "end": 414,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_25@3",
            "content": "In preliminary experiments with Inuktitut (iku), we compared character-based perplexity 6 for language models based on BPE-encoded IPA sequences rather than roman character sequences.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_25",
            "start": 416,
            "end": 598,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_25@4",
            "content": "We found that perplexity was smaller (better) for IPA symbols, and was relatively independent of the BPE vocabulary size; we selected a value of 160 that we kept for all the following experiments.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_25",
            "start": 600,
            "end": 795,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_26@0",
            "content": "BPE training and extraction are implemented with SentencePiece (Kudo and Richardson, 2018).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_26",
            "start": 0,
            "end": 90,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_27@0",
            "content": "Looking at the 160 BPE units extracted for Inuktitut, we find that they partially capture morphological information.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_27",
            "start": 0,
            "end": 115,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_27@1",
            "content": "15% of the BPE units are single IPA symbols, 41% are syllables with 2 phonemes, and the remaining 44% of length 3 or more are morphemes 7 at least 76% of the time.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_27",
            "start": 117,
            "end": 279,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_28@0",
            "content": "Transcription",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_28",
            "start": 0,
            "end": 12,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_29@0",
            "content": "Figure 3 details the transcription process, which takes an untranscribed audio file as input and returns an ELAN file containing a transcription tier with time-aligned IPA phonemes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_29",
            "start": 0,
            "end": 180,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_29@1",
            "content": "The transcription steps are: (1) apply voice-activity detection (VAD) and group together adjacent voice segments 6 Counting roman characters rather than words, as it is directly related to the bits-per-character measure and is less dependent on the subword inventory (Cotterell et al., 2018).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_29",
            "start": 182,
            "end": 473,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_30@0",
            "content": "7 More exactly, are in the set of morphemes produced by the Uqailaut analyzer (Farley, 2012) from the Nunavut Hansards.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_30",
            "start": 0,
            "end": 118,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_31@0",
            "content": "that belong to the same speaker to define speech segments to be processed (diarization), (2) apply the trained phoneme recognizer to produce BPE sequences, (3) convert BPE sequences to IPA, (4) produce an ELAN file containing an annotation tier of time-aligned IPA phonemes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_31",
            "start": 0,
            "end": 273,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_31@1",
            "content": "Note that the first step of segmenting the raw audio into short segments of speech can by itself significantly reduce transcription efforts, as it automates the first step of manual transcription.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_31",
            "start": 275,
            "end": 470,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_32@0",
            "content": "Error rate computation",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_32",
            "start": 0,
            "end": 21,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_33@0",
            "content": "The training pipeline includes a diagnostic measurement of phoneme error rate on the held-out test set.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_33",
            "start": 0,
            "end": 102,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_33@1",
            "content": "It follows the transcription process of Figure 3 except that segments are defined by the reference transcription rather than VAD output.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_33",
            "start": 104,
            "end": 239,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_33@2",
            "content": "The recognizer output sequences are compared to the reference sequences obtained by applying the G2P table to the EAF transcription.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_33",
            "start": 241,
            "end": 372,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_33@3",
            "content": "The phoneme error rate is computed as usual as the ratio of the total number of insertions, deletions and substitutions over the number of phonemes in the reference.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_33",
            "start": 374,
            "end": 538,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_34@0",
            "content": "Reproducibility",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_34",
            "start": 0,
            "end": 14,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_35@0",
            "content": "We make STP publicly available for research purposes 8 , as a docker container which can be run on many operating systems.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_35",
            "start": 0,
            "end": 121,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_35@1",
            "content": "Already prepared datasets in ELAN format and their G2P tables for the 7 Pan-Gloss languages are also made available in a github repository 9 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_35",
            "start": 123,
            "end": 264,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_35@2",
            "content": "HMM-GMM baseline results found in this paper can be easily reproduced by running the container on the provided datasets.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_35",
            "start": 266,
            "end": 385,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_36@0",
            "content": "Experiments",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_36",
            "start": 0,
            "end": 10,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_37@0",
            "content": "We evaluated models from four main classes: a conventional hidden Markov models with Gaussian mixture models (HMM-GMM), an end-to-end recurrent neural network, a convolutional/transformer-based neural network, and a large pretrained transformer neural network.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_37",
            "start": 0,
            "end": 259,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_37@1",
            "content": "We compare time required for training, hardware and software requirements, and accuracy of transcription.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_37",
            "start": 261,
            "end": 365,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_37@2",
            "content": "For a fair comparison, all models are trained and evaluated using the same STP test bed and languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_37",
            "start": 367,
            "end": 468,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_37@3",
            "content": "Only the training pipeline is run since it includes computation of phoneme error rate on the held-out part of the dataset.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_37",
            "start": 470,
            "end": 591,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_37@4",
            "content": "For a given model, the same hyperparameters were used across all languages, and are taken from the reference published paper (except where differences are noted in following sections).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_37",
            "start": 593,
            "end": 776,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_37@5",
            "content": "The test set was used only for measuring phoneme error rate and was not involved in any tuning.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_37",
            "start": 778,
            "end": 872,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_38@0",
            "content": "Baseline (HMM-GMM)",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_38",
            "start": 0,
            "end": 17,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_39@0",
            "content": "Good results were previously obtained with HMM-GMM for single speaker phoneme recognition, in low-resource conditions for Cree (Gupta and Boulianne, 2020).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_39",
            "start": 0,
            "end": 154,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_39@1",
            "content": "To extend those results to other languages, we implemented a general HMM-GMM baseline with the Kaldi toolkit (Povey et al., 2011), modified for phoneme recognition with BPE units.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_39",
            "start": 156,
            "end": 334,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_39@2",
            "content": "The HMM-GMM acoustic model training follows the usual steps of the Kaldi \"wsj\" recipe 10 , starting with monophone models (larger than usual beamwidth) and building up to LDA+MLLT+SAT triphone models (tri4), with 1000 model states and a total of 20,000 Gaussian means, amounting to about 800K free parameters.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_39",
            "start": 336,
            "end": 644,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_39@3",
            "content": "Input features are MFCC \"hires\" features with 40 coefficients computed from audio sampled at 16 kHz.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_39",
            "start": 646,
            "end": 745,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_39@4",
            "content": "The language model is a 4-gram backoff trained using srilm (Stolcke, 2002) with Witten-Bell discounting (Witten and Bell, 1991).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_39",
            "start": 747,
            "end": 874,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_39@5",
            "content": "10 https://github.com/kaldi-asr/kaldi/ tree/master/egs/wsj/s5 4.2 Persephone (Wisn20)",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_39",
            "start": 876,
            "end": 960,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_40@0",
            "content": "For reference we also include results published by Wisniewski et al. (2020).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_40",
            "start": 0,
            "end": 75,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_40@1",
            "content": "This end-to-end system is a long short-term memory neural recurrent network (LSTM) trained using the Persephone toolkit, with a connectionist temporal classification (CTC) loss criterion.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_40",
            "start": 77,
            "end": 263,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_40@2",
            "content": "It has no explicit language model, relying only on the implicit modeling of the LSTM.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_40",
            "start": 265,
            "end": 349,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_40@3",
            "content": "The dataset on which Wisniewski et al. (2020) reported their results was the same as described here in Section 2.1, except that due to limitations of Persephone, they had to exclude audio chunks longer than 10 seconds.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_40",
            "start": 351,
            "end": 568,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_40@4",
            "content": "This only made a significant difference for Dotyal (nep), which was limited to 44 minutes in Wisniewski et al. (2020), while here we are able to use 95 minutes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_40",
            "start": 570,
            "end": 729,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_41@0",
            "content": "Pretrained multilingual model (XLSR-53)",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_41",
            "start": 0,
            "end": 38,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_42@0",
            "content": "XLSR-53 11 is a large version of the wav2vec2.0 model (Conneau et al., 2020), pretrained on 56,000 hours from 53 languages from Multilingual Lib-riSpeech, CommonVoice and BABEL datasets.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_42",
            "start": 0,
            "end": 185,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_42@1",
            "content": "The encoder is transformer-based with a convolutional front-end and is shared across languages, similar to the approach of Dalmia et al. (2018).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_42",
            "start": 187,
            "end": 330,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_43@0",
            "content": "We fine-tune XLSR-53 on each language using the audio segments from the STP prepared data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_43",
            "start": 0,
            "end": 89,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_43@1",
            "content": "The feature extraction layers are frozen and only decoder layers are trained, using nxsampa labels with a CTC loss.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_43",
            "start": 91,
            "end": 205,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_43@2",
            "content": "We use nxsampa rather than BPE since XLSR-53 model words as sequences of single characters.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_43",
            "start": 207,
            "end": 297,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_43@3",
            "content": "We rely on decoder attention heads for the language model and do not use an external one.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_43",
            "start": 299,
            "end": 387,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_44@0",
            "content": "SpecAugment (Park et al., 2019) was applied with the default parameters.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_44",
            "start": 0,
            "end": 71,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_44@1",
            "content": "Batch size and learning rate are optimized separately for each language to obtain stable learning on the training set.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_44",
            "start": 73,
            "end": 190,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_44@2",
            "content": "For all languages, training is stopped after a fixed number of epochs that represents approximately 16,000 steps; warmup is set at 10% of total steps.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_44",
            "start": 192,
            "end": 341,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_44@3",
            "content": "The total number of parameters in the model is 315M, but fine-tuning updates only the language model head layers, which amount to 76K trainable parameters.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_44",
            "start": 343,
            "end": 497,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_45@0",
            "content": "Conformer with LF-MMI (k2-conf)",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_45",
            "start": 0,
            "end": 30,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_46@0",
            "content": "The Conformer model (Gulati et al., 2020) is a transformer-based architecture augmented with convolutional input layers.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_46",
            "start": 0,
            "end": 119,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_46@1",
            "content": "We based our implementation on the snowfall k2-fsa 12 version.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_46",
            "start": 121,
            "end": 182,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_46@2",
            "content": "As for HMM-GMM, we trained the model with the same audio segments and BPE labels prepared by the STP test bed.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_46",
            "start": 184,
            "end": 293,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_46@3",
            "content": "The training criterion was LF-MMI (Povey et al., 2016).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_46",
            "start": 295,
            "end": 349,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_46@4",
            "content": "All languages were trained for 160 epochs.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_46",
            "start": 351,
            "end": 392,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_46@5",
            "content": "The language model is the same 4-gram model used by the HMM-GMM baseline.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_46",
            "start": 394,
            "end": 466,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_46@6",
            "content": "Data augmentation was performed using speed perturbation with five values [0.8, 0.9, 1.0, 1.1, 1.2].",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_46",
            "start": 468,
            "end": 567,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_46@7",
            "content": "Other data augmentation like SpecAugment and noise/reverberation were not used.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_46",
            "start": 569,
            "end": 647,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_46@8",
            "content": "The number of trainable parameters in this model is 32M.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_46",
            "start": 649,
            "end": 704,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_47@0",
            "content": "Results",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_47",
            "start": 0,
            "end": 6,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_48@0",
            "content": "The four architectures are compared in terms of phoneme error rate, and elapsed time for training, in Table 3 for the public dataset and Table 4 for the private dataset.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_48",
            "start": 0,
            "end": 168,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_48@1",
            "content": "HMM-GMM refers to the baseline HMM-GMM from section 4.1, Wisn20 to Persephone from section 4.2, XLSR-53 to the pretrained multilingual model of section 4.3, and k2-conf to the Conformer model of section 4.4.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_48",
            "start": 170,
            "end": 376,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_49@0",
            "content": "In each table, languages appear in descending order of total audio duration available for training.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_49",
            "start": 0,
            "end": 98,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_49@1",
            "content": "Note that the nru33 subset is used here rather than the full nru, to make it more comparable.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_49",
            "start": 100,
            "end": 192,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_49@2",
            "content": "True in the IPA column indicates that transcriptions are IPA symbols, false means that transcriptions are orthographic.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_49",
            "start": 194,
            "end": 312,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_49@3",
            "content": "Phoneme error rates reported are obtained using the speaker turn segmentation from the transcript.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_49",
            "start": 314,
            "end": 411,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_49@4",
            "content": "In an actual transcription pipeline, VAD would be used and might introduce errors that could slightly degrade the actual PER.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_49",
            "start": 413,
            "end": 537,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_49@5",
            "content": "Also note that the reference is the phoneme string generated by the G2P table, so tone or stress errors are not counted if tone or stress is not represented by distinct phonemes in the table.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_49",
            "start": 539,
            "end": 729,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_50@0",
            "content": "12 https://github.com/k2-fsa/snowfall",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_50",
            "start": 0,
            "end": 36,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_51@0",
            "content": "Discussion",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_51",
            "start": 0,
            "end": 9,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_52@0",
            "content": "Looking at the phoneme error rate (PER) columns in Table 3, XLSR-53 is seen to outperform the other models for all languages in the public dataset, with an average of 13.6% PER.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_52",
            "start": 0,
            "end": 176,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_52@1",
            "content": "In one case, it obtains 8.6% PER with only 20 minutes of training.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_52",
            "start": 178,
            "end": 243,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_52@2",
            "content": "Similarly in the private dataset, Table 4 shows XLSR-53 outperforming the other models for all languages, except for Tsuut'ina (srs).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_52",
            "start": 245,
            "end": 377,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_52@3",
            "content": "For this language XLSR-53 training converges unusually fast and floors to a high PER; in contrast, HMM-GMM and k2-conf results on this language are their best in the private dataset.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_52",
            "start": 379,
            "end": 560,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_52@4",
            "content": "Note that the HMM-GMM result for Cree (crl) is 14.2% PER, slightly better than previously reported for an HMM-BLSTM deep recursive model (Gupta and Boulianne, 2020).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_52",
            "start": 562,
            "end": 726,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_52@5",
            "content": "The HMM-GMM system obtains the second-lowest average PER (41.1%) for public languages but is third for the private dataset, with 13.2% PER.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_52",
            "start": 728,
            "end": 866,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_53@0",
            "content": "We find a significant degradation of performance for all models when audio training duration drops to 99 minutes or less.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_53",
            "start": 0,
            "end": 120,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_53@1",
            "content": "This can be seen in Table 5, where we summarized results from Tables 3 and 4 Table 5 shows that with over 99 minutes, HMM-GMM, XLSR and k2-conf have a PER of 13.9% or less (excluding the srs result for XLSR).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_53",
            "start": 122,
            "end": 329,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_53@2",
            "content": "When training falls to 99 minutes or less, PER increases considerably for k2-conf, moderately for HMM-GMM and less dramatically for XLSR-53.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_53",
            "start": 331,
            "end": 470,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_53@3",
            "content": "To confirm this, in Table 6 we compare various amounts of training for the same language, Yongning Na (nru).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_53",
            "start": 472,
            "end": 579,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_53@4",
            "content": "From 464 to 151 minutes, error rates increase much less for HMM-GMM and XLSR, than from 151 to 68 minutes, so there seems to be a divide around 90 minutes, or 1.5 hours.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_53",
            "start": 581,
            "end": 749,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_53@5",
            "content": "The result for nru from Wisniewski et al. (2020) is included for completeness.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_53",
            "start": 751,
            "end": 828,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_53@6",
            "content": "Are these error rates low enough to facilitate language documentation? found that character error rates around 6 to 10% could reduce the effort of accurate transcription by 75%.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_53",
            "start": 830,
            "end": 1006,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_53@7",
            "content": "Here a PER below 10% was obtained for all the languages in Tables 3 and 4 which had more than 99 minutes for training, so it looks like useful error rates are feasible with 1.5 hours of transcribed data.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_53",
            "start": 1008,
            "end": 1210,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_54@0",
            "content": "Regarding the elapsed time required for training, the last three columns in Tables 3 and 4 show major differences between the models 13 .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_54",
            "start": 0,
            "end": 136,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_54@1",
            "content": "The HMM-GMM system is not only much faster, but is also the only one which does not use a GPU.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_54",
            "start": 138,
            "end": 231,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_54@2",
            "content": "So although it does not yield the best PER, it could still be a useful model for field work, since it can run on limited hardware in a short time.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_54",
            "start": 233,
            "end": 378,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_55@0",
            "content": "These results are obtained with only one speaker per language.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_55",
            "start": 0,
            "end": 61,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_55@1",
            "content": "While generalization is possible when looking at several languages, interpretation for one language in particular must be done carefully.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_55",
            "start": 63,
            "end": 199,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_55@2",
            "content": "This is a true limitation but also reflects the challenge of working with endangered languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_55",
            "start": 201,
            "end": 295,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_56@0",
            "content": "Conclusion",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_56",
            "start": 0,
            "end": 9,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_57@0",
            "content": "Fine-tuning a large pretrained multilingual model outperformed the other approaches (although failing in one case).",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_57",
            "start": 0,
            "end": 114,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_57@1",
            "content": "For the 6 languages with 99 minutes or less of training data, the pretrained model was able to average a phoneme error rate of 15.3%.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_57",
            "start": 116,
            "end": 248,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_57@2",
            "content": "We obtained 8.4% or less PER for the 5 languages which had between 100 and 192 minutes.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_57",
            "start": 250,
            "end": 336,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_57@3",
            "content": "At this level of performance, we expect ASR to significantly reduce the effort required for transcription of endangered languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_57",
            "start": 338,
            "end": 467,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_57@4",
            "content": "Further work is needed to explore handling of tone and stress markers, and enlarge the curated speaker-dependent dataset with other publicly available languages.",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_57",
            "start": 469,
            "end": 629,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_58@0",
            "content": "Oliver Adams, Trevor Cohn, Graham Neubig, Steven Bird, Alexis Michaud, Evaluating Phonemic Transcription of Low-Resource Tonal Languages for Language Documentation, 2018, Proc. LREC, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_58",
            "start": 0,
            "end": 183,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_59@0",
            "content": "Oliver Adams, Benjamin Galliot, Guillaume Wisniewski, Nicholas Lambourne, Ben Foley, User-friendly automatic transcription of lowresource languages: Plugging ESPnet into Elpis, 2021, Proc. 4th Workshop on the Use of Computational Methods in the Study of Endangered Languages, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_59",
            "start": 0,
            "end": 276,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_60@0",
            "content": "Jonathan Amith, Jiatong Shi, Rey Garc\u00eda, End-to-End Automatic Speech Recognition: Its Impact on the Workflowin Documenting Yolox\u00f3chitl Mixtec, 2021, Proc. 1st Workshop on Natural Language Processing for Indigenous Languages of the Americas, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_60",
            "start": 0,
            "end": 241,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_61@0",
            "content": "Alexis Conneau, Alexei Baevski, Ronan Collobert, Abdelrahman Mohamed, Michael Auli, Unsupervised Cross-lingual Representation Learning for Speech Recognition, 2020, Computing Research Repository, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_61",
            "start": 0,
            "end": 196,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_62@0",
            "content": "UNKNOWN, None, 2018, Are All Languages Equally Hard to Language-Model? Computing Research Repository, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_62",
            "start": 0,
            "end": 102,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_63@0",
            "content": "Siddharth Dalmia, Ramon Sanabria, Florian Metze, Alan Black, Sequence-based Multilingual Low Ressource Speech Recognition, 2018, Proc. ICASSP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_63",
            "start": 0,
            "end": 143,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_64@0",
            "content": "UNKNOWN, None, 2012, The Uqailaut project, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_64",
            "start": 0,
            "end": 43,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_65@0",
            "content": "Anmol Gulati, James Qin, Chung Chiu, Niki Parmar, Yu Zhang, Jiahui Yu, Wei Han, Shibo Wang, Zhengdong Zhang, Yonghui Wu, Ruoming Pang, Conformer: Convolution-augmented transformer for speech recognition, 2020, Proc. Interspeech, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_65",
            "start": 0,
            "end": 229,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_66@0",
            "content": "Vishwa Gupta, Gilles Boulianne, Speech Transcription Challenges for Resource Constrained Indigenous Language Cree, 2020, Proc. 1st Joint SLTU CCURL, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_66",
            "start": 0,
            "end": 149,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_67@0",
            "content": "UNKNOWN, None, 2018, International Organization for Standardization. Codes for the representation of names of languages -Part 3: Alpha-3 code for comprehensive coverage of languages, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_67",
            "start": 0,
            "end": 183,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_68@0",
            "content": "Taku Kudo, John Richardson, SentencePiece: A simple and language independent subword tokenizer and detokenizer for Neural Text Processing, 2018, Proc. EMNLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_68",
            "start": 0,
            "end": 158,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_69@0",
            "content": "Roland Kuhn, Fineen Davis, Alain D\u00e9silets, The Indigenous Languages Technology project at NRC Canada : An empowerment-oriented approach to developing language software, 2020, Proc. COLING, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_69",
            "start": 0,
            "end": 189,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_70@0",
            "content": "Xinjian Li, Siddharth Dalmia, Juncheng Li, Matthew Lee, Patrick Littell, Jiali Yao, ; David, R Mortensen, Graham Neubig, Alan Black, Florian Metze, Universal Phone Recognition with a Multilingual Allophone System, 2020, Proc. ICASSP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_70",
            "start": 0,
            "end": 234,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_71@0",
            "content": "UNKNOWN, None, 2014, Documenting and researching endangered languages: the Pangloss Collection. Conservation, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_71",
            "start": 0,
            "end": 110,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_72@0",
            "content": "Daniel Park, William Chan, Yu Zhang, Chung Chiu, Barret Zoph, D Ekin,  Cubuk, V Quoc,  Le, SpecAugment: A Simple Data Augmentation Method for Automatic Speech Recognition, 2019, Proc. Interspeech, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_72",
            "start": 0,
            "end": 197,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_73@0",
            "content": "Daniel Povey, Arnab Ghoshal, The Kaldi speech recognition toolkit, 2011, Proc. ASRU, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_73",
            "start": 0,
            "end": 85,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_74@0",
            "content": "Daniel Povey, Vijayaditya Peddinti, Daniel Galvez, Purely sequence-trained neural networks for ASR based on lattice-free MMI, 2016, Proc. Interspeech, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_74",
            "start": 0,
            "end": 151,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_75@0",
            "content": "UNKNOWN, None, 2015, Neural Machine Translation of Rare Words with Subword Units. Computing Research Repository, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_75",
            "start": 0,
            "end": 113,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_76@0",
            "content": "Jiatong Shi, Jonathan Amith, Rey Castillo Garc\u00eda, Esteban Sierra, Kevin Duh, Shinji Watanabe, Leveraging End-to-End ASR for Endangered Language Documentation: An Empirical Study on Yolox\u00f3chitl Mixtec, 2021, Computing Research Repository, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_76",
            "start": 0,
            "end": 238,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_77@0",
            "content": "Andreas Stolcke, SRILM -An extensible language modeling toolkit, 2002, Proc. ICSLP, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_77",
            "start": 0,
            "end": 84,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_78@0",
            "content": "Guillaume Wisniewski, S\u00e9verine Guillaume, Alexis Michaud, Phonemic Transcription of Low-Resource Languages: To What Extent can Preprocessing be Automated?, 2020, Proc. 1st Joint SLTU CCURL Workshop, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_78",
            "start": 0,
            "end": 199,
            "label": {}
        },
        {
            "ix": "350-ARR_v1_79@0",
            "content": "H Ian, Thimoty Witten,  Bell, The zerofrequency problem: Estimating the probabilities of novel events in adaptive text compression, 1991, IEEE Transactions on Information Theory, .",
            "ntype": "s",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            },
            "src_ix": "350-ARR_v1_79",
            "start": 0,
            "end": 179,
            "label": {}
        }
    ],
    "edges": [
        {
            "src_ix": "350-ARR_v1_0",
            "tgt_ix": "350-ARR_v1_1",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_0",
            "tgt_ix": "350-ARR_v1_1",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_1",
            "tgt_ix": "350-ARR_v1_2",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_1",
            "tgt_ix": "350-ARR_v1_2",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_0",
            "tgt_ix": "350-ARR_v1_3",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_2",
            "tgt_ix": "350-ARR_v1_3",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_4",
            "tgt_ix": "350-ARR_v1_5",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_5",
            "tgt_ix": "350-ARR_v1_6",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_6",
            "tgt_ix": "350-ARR_v1_7",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_3",
            "tgt_ix": "350-ARR_v1_4",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_3",
            "tgt_ix": "350-ARR_v1_5",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_3",
            "tgt_ix": "350-ARR_v1_6",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_3",
            "tgt_ix": "350-ARR_v1_7",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_3",
            "tgt_ix": "350-ARR_v1_4",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_0",
            "tgt_ix": "350-ARR_v1_8",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_7",
            "tgt_ix": "350-ARR_v1_8",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_8",
            "tgt_ix": "350-ARR_v1_9",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_8",
            "tgt_ix": "350-ARR_v1_9",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_8",
            "tgt_ix": "350-ARR_v1_10",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_9",
            "tgt_ix": "350-ARR_v1_10",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_11",
            "tgt_ix": "350-ARR_v1_12",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_10",
            "tgt_ix": "350-ARR_v1_11",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_10",
            "tgt_ix": "350-ARR_v1_12",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_10",
            "tgt_ix": "350-ARR_v1_11",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_8",
            "tgt_ix": "350-ARR_v1_13",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_12",
            "tgt_ix": "350-ARR_v1_13",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_13",
            "tgt_ix": "350-ARR_v1_14",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_13",
            "tgt_ix": "350-ARR_v1_14",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_0",
            "tgt_ix": "350-ARR_v1_15",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_14",
            "tgt_ix": "350-ARR_v1_15",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_15",
            "tgt_ix": "350-ARR_v1_16",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_15",
            "tgt_ix": "350-ARR_v1_16",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_15",
            "tgt_ix": "350-ARR_v1_17",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_16",
            "tgt_ix": "350-ARR_v1_17",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_18",
            "tgt_ix": "350-ARR_v1_19",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_17",
            "tgt_ix": "350-ARR_v1_18",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_17",
            "tgt_ix": "350-ARR_v1_19",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_17",
            "tgt_ix": "350-ARR_v1_18",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_15",
            "tgt_ix": "350-ARR_v1_20",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_19",
            "tgt_ix": "350-ARR_v1_20",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_22",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_20",
            "tgt_ix": "350-ARR_v1_21",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_20",
            "tgt_ix": "350-ARR_v1_22",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_20",
            "tgt_ix": "350-ARR_v1_21",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_15",
            "tgt_ix": "350-ARR_v1_23",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_22",
            "tgt_ix": "350-ARR_v1_23",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_24",
            "tgt_ix": "350-ARR_v1_25",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_25",
            "tgt_ix": "350-ARR_v1_26",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_26",
            "tgt_ix": "350-ARR_v1_27",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_23",
            "tgt_ix": "350-ARR_v1_24",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_23",
            "tgt_ix": "350-ARR_v1_25",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_23",
            "tgt_ix": "350-ARR_v1_26",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_23",
            "tgt_ix": "350-ARR_v1_27",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_23",
            "tgt_ix": "350-ARR_v1_24",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_15",
            "tgt_ix": "350-ARR_v1_28",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_27",
            "tgt_ix": "350-ARR_v1_28",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_29",
            "tgt_ix": "350-ARR_v1_30",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_30",
            "tgt_ix": "350-ARR_v1_31",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_28",
            "tgt_ix": "350-ARR_v1_29",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_28",
            "tgt_ix": "350-ARR_v1_30",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_28",
            "tgt_ix": "350-ARR_v1_31",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_28",
            "tgt_ix": "350-ARR_v1_29",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_15",
            "tgt_ix": "350-ARR_v1_32",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_31",
            "tgt_ix": "350-ARR_v1_32",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_32",
            "tgt_ix": "350-ARR_v1_33",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_32",
            "tgt_ix": "350-ARR_v1_33",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_15",
            "tgt_ix": "350-ARR_v1_34",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_33",
            "tgt_ix": "350-ARR_v1_34",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_34",
            "tgt_ix": "350-ARR_v1_35",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_34",
            "tgt_ix": "350-ARR_v1_35",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_0",
            "tgt_ix": "350-ARR_v1_36",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_35",
            "tgt_ix": "350-ARR_v1_36",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_36",
            "tgt_ix": "350-ARR_v1_37",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_36",
            "tgt_ix": "350-ARR_v1_37",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_36",
            "tgt_ix": "350-ARR_v1_38",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_37",
            "tgt_ix": "350-ARR_v1_38",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_39",
            "tgt_ix": "350-ARR_v1_40",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_38",
            "tgt_ix": "350-ARR_v1_39",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_38",
            "tgt_ix": "350-ARR_v1_40",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_38",
            "tgt_ix": "350-ARR_v1_39",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_36",
            "tgt_ix": "350-ARR_v1_41",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_40",
            "tgt_ix": "350-ARR_v1_41",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_42",
            "tgt_ix": "350-ARR_v1_43",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_43",
            "tgt_ix": "350-ARR_v1_44",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_41",
            "tgt_ix": "350-ARR_v1_42",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_41",
            "tgt_ix": "350-ARR_v1_43",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_41",
            "tgt_ix": "350-ARR_v1_44",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_41",
            "tgt_ix": "350-ARR_v1_42",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_36",
            "tgt_ix": "350-ARR_v1_45",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_44",
            "tgt_ix": "350-ARR_v1_45",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_45",
            "tgt_ix": "350-ARR_v1_46",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_45",
            "tgt_ix": "350-ARR_v1_46",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_0",
            "tgt_ix": "350-ARR_v1_47",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_47",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_48",
            "tgt_ix": "350-ARR_v1_49",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_49",
            "tgt_ix": "350-ARR_v1_50",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_47",
            "tgt_ix": "350-ARR_v1_48",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_47",
            "tgt_ix": "350-ARR_v1_49",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_47",
            "tgt_ix": "350-ARR_v1_50",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_47",
            "tgt_ix": "350-ARR_v1_48",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_47",
            "tgt_ix": "350-ARR_v1_51",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_50",
            "tgt_ix": "350-ARR_v1_51",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_52",
            "tgt_ix": "350-ARR_v1_53",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_53",
            "tgt_ix": "350-ARR_v1_54",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_54",
            "tgt_ix": "350-ARR_v1_55",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_51",
            "tgt_ix": "350-ARR_v1_52",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_51",
            "tgt_ix": "350-ARR_v1_53",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_51",
            "tgt_ix": "350-ARR_v1_54",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_51",
            "tgt_ix": "350-ARR_v1_55",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_51",
            "tgt_ix": "350-ARR_v1_52",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_0",
            "tgt_ix": "350-ARR_v1_56",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_55",
            "tgt_ix": "350-ARR_v1_56",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_56",
            "tgt_ix": "350-ARR_v1_57",
            "etype": "parent",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_56",
            "tgt_ix": "350-ARR_v1_57",
            "etype": "next",
            "meta": null
        },
        {
            "src_ix": "350-ARR_v1_0",
            "tgt_ix": "350-ARR_v1_0@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_1",
            "tgt_ix": "350-ARR_v1_1@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_2",
            "tgt_ix": "350-ARR_v1_2@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_2",
            "tgt_ix": "350-ARR_v1_2@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_2",
            "tgt_ix": "350-ARR_v1_2@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_2",
            "tgt_ix": "350-ARR_v1_2@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_2",
            "tgt_ix": "350-ARR_v1_2@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_2",
            "tgt_ix": "350-ARR_v1_2@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_2",
            "tgt_ix": "350-ARR_v1_2@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_2",
            "tgt_ix": "350-ARR_v1_2@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_3",
            "tgt_ix": "350-ARR_v1_3@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_4",
            "tgt_ix": "350-ARR_v1_4@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_4",
            "tgt_ix": "350-ARR_v1_4@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_4",
            "tgt_ix": "350-ARR_v1_4@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_4",
            "tgt_ix": "350-ARR_v1_4@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_4",
            "tgt_ix": "350-ARR_v1_4@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_5",
            "tgt_ix": "350-ARR_v1_5@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_5",
            "tgt_ix": "350-ARR_v1_5@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_5",
            "tgt_ix": "350-ARR_v1_5@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_5",
            "tgt_ix": "350-ARR_v1_5@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_5",
            "tgt_ix": "350-ARR_v1_5@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_5",
            "tgt_ix": "350-ARR_v1_5@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_6",
            "tgt_ix": "350-ARR_v1_6@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_6",
            "tgt_ix": "350-ARR_v1_6@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_7",
            "tgt_ix": "350-ARR_v1_7@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_7",
            "tgt_ix": "350-ARR_v1_7@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_7",
            "tgt_ix": "350-ARR_v1_7@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_7",
            "tgt_ix": "350-ARR_v1_7@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_7",
            "tgt_ix": "350-ARR_v1_7@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_8",
            "tgt_ix": "350-ARR_v1_8@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_9",
            "tgt_ix": "350-ARR_v1_9@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_9",
            "tgt_ix": "350-ARR_v1_9@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_9",
            "tgt_ix": "350-ARR_v1_9@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_10",
            "tgt_ix": "350-ARR_v1_10@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_11",
            "tgt_ix": "350-ARR_v1_11@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_11",
            "tgt_ix": "350-ARR_v1_11@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_12",
            "tgt_ix": "350-ARR_v1_12@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_12",
            "tgt_ix": "350-ARR_v1_12@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_12",
            "tgt_ix": "350-ARR_v1_12@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_12",
            "tgt_ix": "350-ARR_v1_12@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_13",
            "tgt_ix": "350-ARR_v1_13@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_14",
            "tgt_ix": "350-ARR_v1_14@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_14",
            "tgt_ix": "350-ARR_v1_14@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_14",
            "tgt_ix": "350-ARR_v1_14@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_14",
            "tgt_ix": "350-ARR_v1_14@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_15",
            "tgt_ix": "350-ARR_v1_15@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_16",
            "tgt_ix": "350-ARR_v1_16@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_16",
            "tgt_ix": "350-ARR_v1_16@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_16",
            "tgt_ix": "350-ARR_v1_16@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_16",
            "tgt_ix": "350-ARR_v1_16@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_17",
            "tgt_ix": "350-ARR_v1_17@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_18",
            "tgt_ix": "350-ARR_v1_18@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_18",
            "tgt_ix": "350-ARR_v1_18@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_19",
            "tgt_ix": "350-ARR_v1_19@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_19",
            "tgt_ix": "350-ARR_v1_19@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_19",
            "tgt_ix": "350-ARR_v1_19@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_20",
            "tgt_ix": "350-ARR_v1_20@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_21",
            "tgt_ix": "350-ARR_v1_21@9",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_22",
            "tgt_ix": "350-ARR_v1_22@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_22",
            "tgt_ix": "350-ARR_v1_22@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_22",
            "tgt_ix": "350-ARR_v1_22@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_22",
            "tgt_ix": "350-ARR_v1_22@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_23",
            "tgt_ix": "350-ARR_v1_23@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_24",
            "tgt_ix": "350-ARR_v1_24@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_24",
            "tgt_ix": "350-ARR_v1_24@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_24",
            "tgt_ix": "350-ARR_v1_24@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_24",
            "tgt_ix": "350-ARR_v1_24@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_25",
            "tgt_ix": "350-ARR_v1_25@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_25",
            "tgt_ix": "350-ARR_v1_25@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_25",
            "tgt_ix": "350-ARR_v1_25@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_25",
            "tgt_ix": "350-ARR_v1_25@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_25",
            "tgt_ix": "350-ARR_v1_25@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_26",
            "tgt_ix": "350-ARR_v1_26@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_27",
            "tgt_ix": "350-ARR_v1_27@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_27",
            "tgt_ix": "350-ARR_v1_27@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_28",
            "tgt_ix": "350-ARR_v1_28@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_29",
            "tgt_ix": "350-ARR_v1_29@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_29",
            "tgt_ix": "350-ARR_v1_29@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_30",
            "tgt_ix": "350-ARR_v1_30@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_31",
            "tgt_ix": "350-ARR_v1_31@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_31",
            "tgt_ix": "350-ARR_v1_31@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_32",
            "tgt_ix": "350-ARR_v1_32@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_33",
            "tgt_ix": "350-ARR_v1_33@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_33",
            "tgt_ix": "350-ARR_v1_33@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_33",
            "tgt_ix": "350-ARR_v1_33@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_33",
            "tgt_ix": "350-ARR_v1_33@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_34",
            "tgt_ix": "350-ARR_v1_34@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_35",
            "tgt_ix": "350-ARR_v1_35@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_35",
            "tgt_ix": "350-ARR_v1_35@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_35",
            "tgt_ix": "350-ARR_v1_35@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_36",
            "tgt_ix": "350-ARR_v1_36@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_37",
            "tgt_ix": "350-ARR_v1_37@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_37",
            "tgt_ix": "350-ARR_v1_37@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_37",
            "tgt_ix": "350-ARR_v1_37@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_37",
            "tgt_ix": "350-ARR_v1_37@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_37",
            "tgt_ix": "350-ARR_v1_37@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_37",
            "tgt_ix": "350-ARR_v1_37@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_38",
            "tgt_ix": "350-ARR_v1_38@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_39",
            "tgt_ix": "350-ARR_v1_39@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_39",
            "tgt_ix": "350-ARR_v1_39@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_39",
            "tgt_ix": "350-ARR_v1_39@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_39",
            "tgt_ix": "350-ARR_v1_39@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_39",
            "tgt_ix": "350-ARR_v1_39@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_39",
            "tgt_ix": "350-ARR_v1_39@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_40",
            "tgt_ix": "350-ARR_v1_40@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_40",
            "tgt_ix": "350-ARR_v1_40@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_40",
            "tgt_ix": "350-ARR_v1_40@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_40",
            "tgt_ix": "350-ARR_v1_40@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_40",
            "tgt_ix": "350-ARR_v1_40@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_41",
            "tgt_ix": "350-ARR_v1_41@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_42",
            "tgt_ix": "350-ARR_v1_42@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_42",
            "tgt_ix": "350-ARR_v1_42@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_43",
            "tgt_ix": "350-ARR_v1_43@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_43",
            "tgt_ix": "350-ARR_v1_43@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_43",
            "tgt_ix": "350-ARR_v1_43@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_43",
            "tgt_ix": "350-ARR_v1_43@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_44",
            "tgt_ix": "350-ARR_v1_44@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_44",
            "tgt_ix": "350-ARR_v1_44@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_44",
            "tgt_ix": "350-ARR_v1_44@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_44",
            "tgt_ix": "350-ARR_v1_44@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_45",
            "tgt_ix": "350-ARR_v1_45@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_46@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_46@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_46@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_46@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_46@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_46@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_46@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_46@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_46",
            "tgt_ix": "350-ARR_v1_46@8",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_47",
            "tgt_ix": "350-ARR_v1_47@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_48",
            "tgt_ix": "350-ARR_v1_48@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_48",
            "tgt_ix": "350-ARR_v1_48@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_49",
            "tgt_ix": "350-ARR_v1_49@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_49",
            "tgt_ix": "350-ARR_v1_49@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_49",
            "tgt_ix": "350-ARR_v1_49@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_49",
            "tgt_ix": "350-ARR_v1_49@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_49",
            "tgt_ix": "350-ARR_v1_49@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_49",
            "tgt_ix": "350-ARR_v1_49@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_50",
            "tgt_ix": "350-ARR_v1_50@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_51",
            "tgt_ix": "350-ARR_v1_51@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_52",
            "tgt_ix": "350-ARR_v1_52@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_52",
            "tgt_ix": "350-ARR_v1_52@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_52",
            "tgt_ix": "350-ARR_v1_52@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_52",
            "tgt_ix": "350-ARR_v1_52@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_52",
            "tgt_ix": "350-ARR_v1_52@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_52",
            "tgt_ix": "350-ARR_v1_52@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_53",
            "tgt_ix": "350-ARR_v1_53@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_53",
            "tgt_ix": "350-ARR_v1_53@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_53",
            "tgt_ix": "350-ARR_v1_53@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_53",
            "tgt_ix": "350-ARR_v1_53@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_53",
            "tgt_ix": "350-ARR_v1_53@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_53",
            "tgt_ix": "350-ARR_v1_53@5",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_53",
            "tgt_ix": "350-ARR_v1_53@6",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_53",
            "tgt_ix": "350-ARR_v1_53@7",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_54",
            "tgt_ix": "350-ARR_v1_54@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_54",
            "tgt_ix": "350-ARR_v1_54@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_54",
            "tgt_ix": "350-ARR_v1_54@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_55",
            "tgt_ix": "350-ARR_v1_55@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_55",
            "tgt_ix": "350-ARR_v1_55@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_55",
            "tgt_ix": "350-ARR_v1_55@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_56",
            "tgt_ix": "350-ARR_v1_56@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_57",
            "tgt_ix": "350-ARR_v1_57@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_57",
            "tgt_ix": "350-ARR_v1_57@1",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_57",
            "tgt_ix": "350-ARR_v1_57@2",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_57",
            "tgt_ix": "350-ARR_v1_57@3",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_57",
            "tgt_ix": "350-ARR_v1_57@4",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_58",
            "tgt_ix": "350-ARR_v1_58@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_59",
            "tgt_ix": "350-ARR_v1_59@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_60",
            "tgt_ix": "350-ARR_v1_60@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_61",
            "tgt_ix": "350-ARR_v1_61@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_62",
            "tgt_ix": "350-ARR_v1_62@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_63",
            "tgt_ix": "350-ARR_v1_63@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_64",
            "tgt_ix": "350-ARR_v1_64@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_65",
            "tgt_ix": "350-ARR_v1_65@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_66",
            "tgt_ix": "350-ARR_v1_66@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_67",
            "tgt_ix": "350-ARR_v1_67@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_68",
            "tgt_ix": "350-ARR_v1_68@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_69",
            "tgt_ix": "350-ARR_v1_69@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_70",
            "tgt_ix": "350-ARR_v1_70@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_71",
            "tgt_ix": "350-ARR_v1_71@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_72",
            "tgt_ix": "350-ARR_v1_72@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_73",
            "tgt_ix": "350-ARR_v1_73@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_74",
            "tgt_ix": "350-ARR_v1_74@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_75",
            "tgt_ix": "350-ARR_v1_75@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_76",
            "tgt_ix": "350-ARR_v1_76@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_77",
            "tgt_ix": "350-ARR_v1_77@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_78",
            "tgt_ix": "350-ARR_v1_78@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        },
        {
            "src_ix": "350-ARR_v1_79",
            "tgt_ix": "350-ARR_v1_79@0",
            "etype": "link",
            "meta": {
                "created_by": "IntertextSentenceSplitter_all"
            }
        }
    ],
    "prefix": "paper.tei",
    "meta": {
        "ix_counter": 1066,
        "sentence_split_type": "HybridSplitterLessAndLong",
        "sentence_split_model": "HybridSplitterLessAndLong_SciSpacy+Spacy",
        "position_tag_type": "from_draft",
        "doc_id": "350-ARR",
        "version": 1
    }
}